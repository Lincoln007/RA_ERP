//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RASolarHRMS.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class RASolarHRAEntities : DbContext
    {
        public RASolarHRAEntities()
            : base("name=RASolarHRAEntities")
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Aud_AuditingDetailsForAuditors> Aud_AuditingDetailsForAuditors { get; set; }
        public DbSet<Aud_AuditingMaster> Aud_AuditingMaster { get; set; }
        public DbSet<Common_DistrictInfo> Common_DistrictInfo { get; set; }
        public DbSet<Common_LocationInfo> Common_LocationInfo { get; set; }
        public DbSet<Common_UpazillaInfo> Common_UpazillaInfo { get; set; }
        public DbSet<Hrm_BankAdviceForSalaryMaster> Hrm_BankAdviceForSalaryMaster { get; set; }
        public DbSet<Hrm_BloodGroupInfo> Hrm_BloodGroupInfo { get; set; }
        public DbSet<Hrm_DepartmentInfo> Hrm_DepartmentInfo { get; set; }
        public DbSet<Hrm_EducationInfo> Hrm_EducationInfo { get; set; }
        public DbSet<Hrm_EmployeeInfo> Hrm_EmployeeInfo { get; set; }
        public DbSet<Hrm_EmployeeTransfer> Hrm_EmployeeTransfer { get; set; }
        public DbSet<Hrm_EmployeeTransferAdditionalInfo> Hrm_EmployeeTransferAdditionalInfo { get; set; }
        public DbSet<Hrm_EmploymentTypeInfo> Hrm_EmploymentTypeInfo { get; set; }
        public DbSet<Hrm_HierarchicalDesignation> Hrm_HierarchicalDesignation { get; set; }
        public DbSet<Hrm_HierarchicalDesignationVsOperationalRole> Hrm_HierarchicalDesignationVsOperationalRole { get; set; }
        public DbSet<Hrm_LocationWiseEmployee> Hrm_LocationWiseEmployee { get; set; }
        public DbSet<Hrm_MajorSubject> Hrm_MajorSubject { get; set; }
        public DbSet<Hrm_MaritalStatusInfo> Hrm_MaritalStatusInfo { get; set; }
        public DbSet<Hrm_OperationalRole> Hrm_OperationalRole { get; set; }
        public DbSet<Hrm_ReligionInfo> Hrm_ReligionInfo { get; set; }
        public DbSet<Hrm_SubDepartmentOrSection> Hrm_SubDepartmentOrSection { get; set; }
        public DbSet<Hrm_Validation_EmployeeWiseDesignationVsEmploymentType> Hrm_Validation_EmployeeWiseDesignationVsEmploymentType { get; set; }
        public DbSet<Sal_LocationWiseSalespersonForHOnZO> Sal_LocationWiseSalespersonForHOnZO { get; set; }
        public DbSet<Hrm_EmployeeWiseBankAccount> Hrm_EmployeeWiseBankAccount { get; set; }
        public DbSet<Hrm_EmployeeWiseSalaryStructureDetails> Hrm_EmployeeWiseSalaryStructureDetails { get; set; }
        public DbSet<Hrm_EmployeeWiseSalaryStructureMaster> Hrm_EmployeeWiseSalaryStructureMaster { get; set; }
        public DbSet<Hrm_HierarchicalDesignationNEmploymentTypeWisePayBandStructure> Hrm_HierarchicalDesignationNEmploymentTypeWisePayBandStructure { get; set; }
        public DbSet<Hrm_EmployeeNDateWiseTADAEntry> Hrm_EmployeeNDateWiseTADAEntry { get; set; }
    
        public virtual ObjectResult<GetEmployeeTransferredButNotYetAccepted> GetEmployeeTransferredButNotYetAccepted(string unitCode)
        {
            var unitCodeParameter = unitCode != null ?
                new ObjectParameter("UnitCode", unitCode) :
                new ObjectParameter("UnitCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeeTransferredButNotYetAccepted>("GetEmployeeTransferredButNotYetAccepted", unitCodeParameter);
        }
    
        public virtual ObjectResult<GetLocationWiseEmployeeForEmployeeRegister> GetLocationWiseEmployeeForEmployeeRegister(string locationCode)
        {
            var locationCodeParameter = locationCode != null ?
                new ObjectParameter("LocationCode", locationCode) :
                new ObjectParameter("LocationCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLocationWiseEmployeeForEmployeeRegister>("GetLocationWiseEmployeeForEmployeeRegister", locationCodeParameter);
        }
    
        public virtual int HrmEmployeeTransfer(string prmLocationCode, string prmEmployeeID, string prmEmployeeTransferOrReceive, string prmTransferToLocation, string prmTransDate, string prmNoteForTransfer, string prmUserID, string prmDBTransType)
        {
            var prmLocationCodeParameter = prmLocationCode != null ?
                new ObjectParameter("prmLocationCode", prmLocationCode) :
                new ObjectParameter("prmLocationCode", typeof(string));
    
            var prmEmployeeIDParameter = prmEmployeeID != null ?
                new ObjectParameter("prmEmployeeID", prmEmployeeID) :
                new ObjectParameter("prmEmployeeID", typeof(string));
    
            var prmEmployeeTransferOrReceiveParameter = prmEmployeeTransferOrReceive != null ?
                new ObjectParameter("prmEmployeeTransferOrReceive", prmEmployeeTransferOrReceive) :
                new ObjectParameter("prmEmployeeTransferOrReceive", typeof(string));
    
            var prmTransferToLocationParameter = prmTransferToLocation != null ?
                new ObjectParameter("prmTransferToLocation", prmTransferToLocation) :
                new ObjectParameter("prmTransferToLocation", typeof(string));
    
            var prmTransDateParameter = prmTransDate != null ?
                new ObjectParameter("prmTransDate", prmTransDate) :
                new ObjectParameter("prmTransDate", typeof(string));
    
            var prmNoteForTransferParameter = prmNoteForTransfer != null ?
                new ObjectParameter("prmNoteForTransfer", prmNoteForTransfer) :
                new ObjectParameter("prmNoteForTransfer", typeof(string));
    
            var prmUserIDParameter = prmUserID != null ?
                new ObjectParameter("prmUserID", prmUserID) :
                new ObjectParameter("prmUserID", typeof(string));
    
            var prmDBTransTypeParameter = prmDBTransType != null ?
                new ObjectParameter("prmDBTransType", prmDBTransType) :
                new ObjectParameter("prmDBTransType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("HrmEmployeeTransfer", prmLocationCodeParameter, prmEmployeeIDParameter, prmEmployeeTransferOrReceiveParameter, prmTransferToLocationParameter, prmTransDateParameter, prmNoteForTransferParameter, prmUserIDParameter, prmDBTransTypeParameter);
        }
    }
}
