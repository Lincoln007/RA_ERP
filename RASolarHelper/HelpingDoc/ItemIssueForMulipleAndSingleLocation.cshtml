@using RASolarERP.Model;
@{
    ViewBag.Title = "Challan";
    Layout = "~/Areas/Inventory/Views/Shared/_InventoryLayout.cshtml";

    if (false)
    {
    <script src="../../../../Scripts/jquery-1.5.1.min.js" type="text/javascript"></script>
    <script src="../../../../Scripts/RASolarCustomFunction.js" type="text/javascript"></script>    
    }
}
@section TopMenu
{
    @Html.Partial((String)ViewBag.TopMenu)
}
@section LoginInfo
{
    <table cellpadding="0" cellspacing="0" border="0" style="text-align: right;" width="100%">
        <tr>
            <td style="width: 20%" align="left">
                @ViewBag.ZoneTitle&nbsp; @ViewBag.ZoneName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.RegionTitle&nbsp; @ViewBag.RegionName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.UnitTitle&nbsp; @ViewBag.UnitName
            </td>
            <td style="width: 40%" align="left">
                @ViewBag.OpenMonthYear
            </td>
        </tr>
    </table>
}
<input id="hfCurrentDay" type="hidden"  value="@ViewBag.CurrentDay"/>
<input id="hfToLocation" type="hidden" value="0" />
<input id="hfMultipleToLocation" type="hidden" value="0" />
<input id="hfIsInventoryImplemented" type="hidden" value="@ViewBag.IsInventoryImplemented" />
<input id="hfIsChallanLocationNeeded" type="hidden" value="0" />
@Html.Hidden("hfIsItemSeralizable", "0")
@{
    bool InventoryStockUpdateFinishClosed = (bool)ViewBag.InventoryStockUpdateFinishClosed;
}
@if (InventoryStockUpdateFinishClosed == true)
{

    <table cellpadding="0" cellspacing="2" border="0" width="100%">
        <tr>
            <td>
                <table cellpadding="0" cellspacing="0" border="0" width="100%">
                    <tr>
                        <td align="left" style="width: 33%;">
                            <table cellpadding="0" cellspacing="2" border="0" width="100%">
                                <tr>
                                    <td align="left" class="IRCaptionLeftColumn">
                                        Item Type
                                    </td>
                                    <td align="left">
                                        @Html.DropDownList("ddlItemType", new SelectList(ViewBag.ItemType, "ItemTypeID", "Description"), "--Select--", new { @class = "IRDropDown" })
                                    </td>
                                </tr>
                                <tr>
                                    <td class="IRCaptionLeftColumn">
                                        Issue Type
                                    </td>
                                    <td>
                                        @Html.DropDownList("ddlIssueType", Enumerable.Empty<SelectListItem>(), "--Select--",
                                        new { @class = "IRDropDown" })
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IRCaptionLeftColumn">
                                        Item Category
                                    </td>
                                    <td align="left">
                                        @Html.DropDownList("ddlItemCategory", Enumerable.Empty<SelectListItem>(), "--Select--",
                                        new { @class = "IRDropDown" })
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left">
                                        Item
                                    </td>
                                    <td>
                                        @Html.DropDownList("ddlItem", Enumerable.Empty<SelectListItem>(), "--Select--",
                                        new { @class = "IRDropDown" })
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td align="left" style="width: 33%;" valign="top">
                            <table cellpadding="0" cellspacing="2" border="0" width="100%">
                                <tr>
                                    <td align="left" class="IRCaptionLeftColumn">
                                        Store Location
                                    </td>
                                    <td align="left">
                                        @Html.DropDownList("ddlStoreLocation", Enumerable.Empty<SelectListItem>(), "--Select--",
                                        new { @class = "IRDropDown" })
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IRCaptionMiddleColumn">
                                        Challan Date
                                    </td>
                                    <td align="left">
                                        @Html.Telerik().DatePicker().Name("dtpChallanDate").Format("dd-MMM-yyyy").Value(DateTime.Now.Date).Max(new DateTime(2099, 12, 31))
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IRCaptionMiddleColumn">
                                        Sequence No.
                                    </td>
                                    <td align="left">
                                        @Html.TextBox("txtSequenceNumber", (string)ViewBag.ChallnSequenceNumberNew, new { @class = "IRControl", @readonly = true })
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IRCaptionMiddleColumn">
                                        Challan No.
                                    </td>
                                    <td align="left">
                                        @Html.TextBox("txtChallanNumber", "", new { @class = "IRControl", @maxLength = 10 })
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td align="left" style="width: 33%;" valign="top">
                            <table cellpadding="0" cellspacing="2" border="0" width="100%">
                                <tr>
                                    <td align="left" class="IRCaptionRightColumn">
                                        Available Quantity
                                    </td>
                                    <td align="left">
                                        @Html.TextBox("txtAvailableQuantity", "", new { @class = "IRControl", @readonly = true })
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IRCaptionRightColumn">
                                        Delivery Quantity
                                    </td>
                                    <td align="left">
                                        @Html.TextBox("txtDeliveryQuantity", "", new { @class = "IRControl", @maxlength = 5 })
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IRCaptionRightColumn">
                                        Serial Quantity
                                    </td>
                                    <td align="left">
                                        @Html.TextBox("txtSerialQuantity", "", new { @class = "IRControl", @readonly = true })
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td align="left" style="width: 33%;">
                            <table cellpadding="0" cellspacing="2" border="0" width="100%">
                                <tr>
                                    <td align="left" class="IRCaptionLeftColumn">
                                        Issue For Multiple Location
                                    </td>
                                    <td align="left">
                                        <input id="ckbIssueMultipleLocation" type="checkbox" />
                                        @(Html.Telerik().Window().Name("dialogIssueMultipleLocation")
                                          .Title("Select Location For Issue")
                                          .ClientEvents(events => events.OnClose("CloseDialogIssueMultipleLocation"))
                                          .Draggable(false)
                                          .Resizable(resizing => resizing.Enabled(false)
                                                                         .MinHeight(300)
                                                                         .MinWidth(350)
                                                                         .MaxHeight(500)
                                                                         .MaxWidth(500)
                                                                         )
                                          .Modal(true)
                                          .Buttons(b => b.Close())
                                          .Content(@<p id="LoadMultipleSelectionWindow" style="height: 280px; width: 350px;
                                              padding: 0; margin: 0;">
                                          </p>
                                         )
                                          .Visible(false)
                                     )
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td align="left" style="width: 33%;">
                            <table cellpadding="0" cellspacing="2" border="0" width="100%">
                                <tr>
                                    <td align="left" class="IRCaptionMiddleColumn">
                                        To Location
                                    </td>
                                    <td align="left">
                                        @Html.TextBox("txtToLocation", "", new { @class = "IRControl", @readonly = true })
                                        @(Html.Telerik().Window().Name("dialogLocationSelection")
                                          .Title("Select A Location For Issue")
                                          .ClientEvents(events => events.OnClose("CloseDialogLocationSelection"))
                                          .Draggable(false)
                                          .Resizable(resizing => resizing.Enabled(false)
                                                                         .MinHeight(125)
                                                                         .MinWidth(325)
                                                                         .MaxHeight(500)
                                                                         .MaxWidth(500)
                                                                         )
                                          .Modal(true)
                                          .Buttons(b => b.Close())
                                          .Content(@<p id="LoadLocationSelectionWindow" style="height: 125px; width: 325px;
                                              padding: 0; margin: 0;">
                                          </p>
                                          )
                                          .Visible(false)
                                     )
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td align="left" style="width: 33%;">
                            <table cellpadding="0" cellspacing="2" border="0" width="100%">
                                <tr>
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td>
                                        <input id="btnMapSerial" type="button" value="Map Serial" onclick="return MapSerialForIssue();" />
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr id="serialMapForIssue">
            <td>
                @Html.Partial("ItemSerialCheckGrid")
            </td>
        </tr>
        <tr>
            <td align="left" style="padding-top: 2px;">
                <input id="btnAddToList" type="button" value="Add Item & Serial For Issue" style="width: 180px;" />
            </td>
        </tr>
        <tr>
            <td>
                <table cellpadding="0" cellspacing="0" border="0" width="100%">
                    <tr>
                        <td>
                            @Html.Partial("IssueItemGrid")
                        </td>
                    </tr>
                    <tr>
                        <td align="right">
                            <input id="btnSubmit" type="button" value="Submit" onclick="return SaveIssueItem();" />
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td id="issueItemSerials">
                <table class="TableData" cellpadding="0" cellspacing="0" id="SerialCollectionGrid"
                    width="100%">
                    <thead>
                        <tr>
                            <th align="center">
                                Item Code
                            </th>
                            <th align="center">
                                Serial No
                            </th>
                            <th align="center">
                                Status
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </td>
        </tr>
        <tr style="display: none;">
            <td>
                <input id="txtHiddenItemModelCapacity" type="text" />
            </td>
        </tr>
    </table>
 
}
else
{ 
    <p style="background: #ffff99; font-size: 15px; font-weight: bold;">
        Pleae Update Stock Position Before Challan
    </p>
}
<script type="text/javascript">

    $('#serialMapForIssue').css('display', 'none');
    $('#issueItemSerials').css('display', 'none');

    function CloseDialogWindow() {

        var locationCode = "";
        var locationText = "";

        if ($('#ddlLocationTypeForSingleSelection').val() == "ho") {
            locationText = "[9000] Head Office";
            locationCode = "9000";
        }
        else if ($('#ddlLocationTypeForSingleSelection').val() == "zone") {
            locationText = $('#ddlZone').find('option:selected').text();
            locationCode = $('#ddlZone').val();
        }
        else if ($('#ddlLocationTypeForSingleSelection').val() == "unit") {
            locationText = $('#ddlUnit').find('option:selected').text();
            locationCode = $('#ddlUnit').val();
        }

        $('#hfToLocation').val(locationCode);
        $('#txtToLocation').val(locationText);

        var detailWindow = $("#dialogLocationSelection").data("tWindow");
        detailWindow.center().close();

        $('#LoadLocationSelectionWindow').html('');
        $('#serialMapForIssue').focus();

        return false;
    }

    $(document).ready(function () {

        $('#ddlItemType').change(function () {

            var itemType = $('#ddlItemType').val();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("IssueTypeList", "InventoryDailyTransaction")',
                data: "{'itemTypeId':'" + itemType + "'}",
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                cache: false,
                success: function (data) {
                    $('#ddlIssueType').get(0).length = 0;
                    $('#ddlIssueType').get(0).options[0] = new Option("--Select--", "");

                    $.map(data, function (item) {
                        $('#ddlIssueType').get(0).options[$('#ddlIssueType').get(0).length] = new Option(item.Display, item.Value);
                    });
                },
                error: function () { alert("Connection Failed. Please Try Again."); }
            });
        });

        $('#ckbIssueMultipleLocation').click(function () {

            if ($('#ckbIssueMultipleLocation').is(':checked') == true) {

                $('#txtToLocation').val('');
                $('#txtToLocation').attr('disabled', true);

                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("MultipleLocationSelectionPartial", "InventoryDailyTransaction")',
                    dataType: 'html',
                    cache: false,
                    success: function (data) {
                        $('#LoadMultipleSelectionWindow').html(data);
                    },
                    error: function () {
                        alert("Connection Failed. Please Try Again");
                    }
                });

                var detailWindow = $("#dialogIssueMultipleLocation").data("tWindow");
                detailWindow.center().open();
            }
            else {
                $('#txtToLocation').attr('disabled', false);

                if ($('#hfMultipleToLocation').val() != "0") {
                    var confirmResult = confirm("Do You Want To Remove Multiple Location, That You Already Added ?");
                    if (confirmResult) {
                        $('#hfToLocation').val("0");
                        $('#hfMultipleToLocation').val("0");
                        $('#txtToLocation').attr('disabled', false);
                    }
                }
            }
        });

        $('#txtToLocation').click(function () {

            $.ajax({
                type: 'GET',
                url: '@Url.Action("LocationSelectionPartial", "InventoryDailyTransaction")',
                dataType: 'html',
                cache: false,
                success: function (data) {
                    $('#LoadLocationSelectionWindow').html(data);
                },
                error: function () {
                    alert("Connection Failed. Please Try Again");
                }
            });

            var detailWindow = $("#dialogLocationSelection").data("tWindow");
            detailWindow.center().open();
        });

        $('#txtDeliveryQuantity').change(function () {

            if ($('#txtDeliveryQuantity').val() == "")
                return false;
            else if (Helper.IsInt($('#txtDeliveryQuantity').val()) == false) {
                alert("Delivery Quantity Cannot Be Negative/Character");
                $('#txtDeliveryQuantity').val("0");
                return false;
            }

            var delivarQuantity = $('#txtDeliveryQuantity').val();
            var availableQuantity = $('#txtAvailableQuantity').val();

            if (parseInt(delivarQuantity) > parseInt(availableQuantity)) {
                alert("Number Of Delivery Quantity Cannot Be Greater Than Available Quantity.");
                $('#txtDeliveryQuantity').val("");
                $('#txtDeliveryQuantity').focus();
            }
        });

        $('#btnAddToList').click(function () {

            var itemType = $('#ddlItemType').val();
            var itemCategory = $('#ddlItemCategory').val();
            var item = $('#ddlItem').val();
            var delivarQuantity = $('#txtDeliveryQuantity').val();
            var availableQuantity = $('#txtAvailableQuantity').val();
            var IssueTypeId = $('#ddlIssueType').val();
            var storeLocation = $('#ddlStoreLocation').val();
            var toLocation = "";

            var lengthOfSerialScanTable = $('#serialGrid tbody tr').length;

            if ($('#btnMapSerial').is(':disabled') == false) {
                if (lengthOfSerialScanTable == 0) {
                    alert("Please MAP The Serial First");
                    return false;
                }
                else if (lengthOfSerialScanTable < parseInt(delivarQuantity)) {
                    alert("Please Scan All Serial First");
                    return false;
                }
            }

            if (itemType == "") {
                alert("Please Select Item Type");
                return false;
            }
            else if (itemCategory == "") {
                alert("Please Select Item Category");
                return false;
            }
            else if (item == "") {
                alert("Please Select Item");
                return false;
            }
            else if (availableQuantity == "") {
                alert("Item Quantity Is Not Available For Issue");
                return false;
            }
            else if (parseInt(availableQuantity) <= 0) {
                alert("Item Quantity Is Not Available For Issue");
                return false;
            }
            else if (delivarQuantity == "") {
                alert("Please Give Delivar Quantity");
                return false;
            }
            else if (parseInt(delivarQuantity) <= 0) {
                alert("Please Give Delivar Quantity");
                return false;
            }
            else if (Helper.IsInt(delivarQuantity) == false) {
                alert("Delivar Quantity Cannot Be Negative/Character");
                return false;
            }
            else if (IssueTypeId == "") {
                alert("Please Give Issue Type");
                return false;
            }
            else if (storeLocation == "") {
                alert("Please Give Store Location");
                return false;
            }
            if (parseInt(delivarQuantity) > parseInt(availableQuantity)) {
                alert("Delivar Quantity Cannot Be Greater Than Available Quantity");
                return false;
            }

            if ($('#txtToLocation').is(':disabled')) {
                toLocation = "";
                $('#hfToLocation').val("0");

                if ($('#hfMultipleToLocation').val() == "0") {
                    alert("Please Give Store Location");
                    return false;
                }
            }
            else {
                toLocation = $('#hfToLocation').val();

                if (toLocation == "0") {
                    alert("Please Select Issue Challan Location");
                    return false;
                }
            }

            var itemCodeCapacityModel = $('#ddlItem').val().split('-');
            var itemCode = itemCodeCapacityModel[0];
            var itemCapacity = itemCodeCapacityModel[1];
            var itemModel = itemCodeCapacityModel[2];

            var gridLength = $('#GridIssueReceived tbody tr').length;
            var i = 0;

            var grid = $('#GridIssueReceived tbody');

            for (i = 0; i < gridLength; i++) {

                var tr = grid.find("tr:eq(" + i + ")");
                var existItemCode = tr.find('td:eq(0)').text();

                if (itemCode == existItemCode) {
                    break;
                }
            }

            if (i < gridLength) {
                alert("Duplicate Item Is Not Accepted For Issue");
                return false;
            }

            i = i - 1;

            var itemCapacityModelText = $('#txtHiddenItemModelCapacity').val().split(',');

            var itemCodeText = itemCapacityModelText[0];
            var itemCapacityText = itemCapacityModelText[1];
            var itemModelText = itemCapacityModelText[2];

            var trNew = "";

            if (i % 2 == 0)
                trNew = "<tr class=\"t-alt\"> ";
            else
                trNew = "<tr> ";

            trNew = trNew + "<td>" + itemCode + "</td>";
            trNew = trNew + "<td>" + itemCodeText + "</td>";
            trNew = trNew + "<td>" + itemCapacityText + "</td>";
            trNew = trNew + "<td>" + itemModelText + "</td>";
            trNew = trNew + "<td class=\"TdAlignRight\">" + delivarQuantity + "</td>";
            trNew = trNew + "<td>" + $('#txtTotalSerialQuantity').val() + "</td>";
            trNew = trNew + "<td align=\"center\"> <a href=\"#\" id=\"" + $('#txtSerialNo').val() + "\" class=\"deleteBtn\" >Delete</a> </td>";

            trNew = trNew + "<td class=\"TdDisplayNone\">" + itemCapacity + "</td>";
            trNew = trNew + "<td class=\"TdDisplayNone\"> " + itemModel + "</td>";
            trNew = trNew + "<td class=\"TdDisplayNone\"> " + IssueTypeId + "</td>";
            trNew = trNew + "<td class=\"TdDisplayNone\"> " + storeLocation + "</td>";
            trNew = trNew + "<td class=\"TdDisplayNone\"> " + toLocation + "</td>";

            trNew = trNew + " </tr>";

            //----------------------------------//----------------------------------------//--------------------------------

            var trSerialNew = "";
            var serialScanGrid = $('#serialGrid tbody');

            for (i = 0; i < lengthOfSerialScanTable; i++) {

                var tr = serialScanGrid.find("tr:eq(" + i + ")");
                var serials = tr.find("td:eq(0)").text();
                var alreadyUsedSerials = $("#SerialCollectionGrid tbody:contains(\"" + serials + "\")").length;

                if (alreadyUsedSerials > 0) {
                    alert("This (<b>" + serials + "</b>) Serial Is Already Scan For Issue");
                    return false;
                }

                trSerialNew = trSerialNew + "<tr id=\"isc" + itemCode + serials + "\"> ";

                trSerialNew = trSerialNew + "<td>" + itemCode + "</td> ";
                trSerialNew = trSerialNew + "<td>" + serials + "</td> ";
                trSerialNew = trSerialNew + "<td>" + tr.find("td:eq(1)").text() + "</td> ";

                trSerialNew = trSerialNew + "</tr> ";
            }

            $('#GridIssueReceived tbody').append(trNew);
            $('#SerialCollectionGrid tbody').append(trSerialNew);

            $('#txtSerialQuantity').val($('#txtTotalSerialQuantity').val());
            $('#txtSerialNo').val("");
            $('#txtTotalSerialQuantity').val("0");
            $('#serialGrid tbody').html("");
            $('#serialMapForIssue').css('display', 'none');
            return false;
        });

        $('#GridIssueReceived').delegate('a.deleteBtn', 'click', function () {

            var itemCode = $(this).parent().parent().find("td:eq(0)").text();

            $(this).parent().parent().fadeOut('slow').remove();
            $('#txtTotalSerialQuantity').val("0");
            $('#serialGrid tbody').html("");

            $('#SerialCollectionGrid tbody tr').each(function () {
                var texto = $(this).find('td:eq(0)').text();
                var trId = "isc" + itemCode + $(this).find("td:eq(1)").text();

                if (itemCode == $(this).find("td:eq(0)").text()) {
                    $("#SerialCollectionGrid tbody tr[id$='" + trId + "']").remove();
                }
            });

            return false;
        });
    });

    function MapSerialForIssue() {

        var storeLocation = $('#ddlStoreLocation').val();
        var delivarQuantity = $('#txtDeliveryQuantity').val();
        var availableQuantity = $('#txtAvailableQuantity').val();
        var itemCode = $('#ddlItem').val();

        if (itemCode == "") {
            alert("Please Select An Item For Issue");
            return false;
        }
        else if (storeLocation == "") {
            alert("Please Select Store Location");
            return false;
        }
        else if (availableQuantity == "") {
            alert("Item Quantity Is Not Available For Issue");
            return false;
        }
        else if (parseInt(availableQuantity) <= 0) {
            alert("Item Quantity Is Not Available For Issue");
            return false;
        }
        else if (delivarQuantity == "") {
            alert("Please Give Delivar Quantity");
            return false;
        }
        else if (parseInt(delivarQuantity) <= 0) {
            alert("Please Give Delivar Quantity");
            return false;
        }
        else if (Helper.IsInt(delivarQuantity) == false) {
            alert("Delivar Quantity Cannot Be Negative/Character");
            return false;
        }

        if (parseInt(delivarQuantity) > parseInt(availableQuantity)) {
            alert("Delivar Quantity Cannot Be Greater Than Available Quantity");
            return false;
        }

        LoadAvailableSerialForItem(itemCode.split('-')[0], storeLocation);
        $('#serialMapForIssue').css('display', '');
    }

    function LoadAvailableSerialForItem(itemCode, storeLocation) {

        $.ajax({
            type: 'POST',
            url: '@Url.Action("LoadAvailableSerialForItem", "InventoryDailyTransaction")',
            data: "{'itemCode':'" + itemCode + "','storeLocation':'" + storeLocation + "'}",
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: false,
            success: function (data) {

                $('#ddlAvailAbleItemSerials').get(0).options.length = 0;
                $('#ddlAvailAbleItemSerials').get(0).options[0] = new Option('--Select--', '');

                $.map(data, function (item) {
                    $('#ddlAvailAbleItemSerials').get(0).options[$('#ddlAvailAbleItemSerials').get(0).options.length] = new Option(item.Display, item.Value);
                });
            },
            error: function () {
                alert("Connection Failed. Please Try Again.");
            }
        });

    }

    $('#ddlIssueType').change(function () {

        var issueTypeId = $('#ddlIssueType').val();

        if (issueTypeId == "ISSTOHEADO") {
            $('#hfIsChallanLocationNeeded').val("1");
            $('#txtToLocation').attr('disabled', false);
            $('#ckbIssueMultipleLocation').attr('disabled', false);
        }
        else if (issueTypeId == "ISSTOOTRUT") {
            $('#hfIsChallanLocationNeeded').val("1");
            $('#txtToLocation').attr('disabled', false);
            $('#ckbIssueMultipleLocation').attr('disabled', false);
        }
        else if (issueTypeId == "ISSTOZNLOF") {
            $('#hfIsChallanLocationNeeded').val("1");
            $('#txtToLocation').attr('disabled', false);
            $('#ckbIssueMultipleLocation').attr('disabled', false);
        }
        else {
            $('#hfIsChallanLocationNeeded').val("0");
            $('#txtToLocation').attr('disabled', true);
            $('#ckbIssueMultipleLocation').attr('disabled', true);
        }

        var itemTypeId = $('#ddlItemType').val();

        $('#ddlItem').get(0).options.length = 0;
        $('#ddlItem').get(0).options[0] = new Option('--Select--', '');

        $.ajax({

            type: 'POST',
            url: '@Url.Action("ItemCategoryList", "InventoryDailyTransaction")',
            data: "{'itemTypeId':'" + itemTypeId + "','transactionType':'" + issueTypeId + "'}",
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            cache: false,
            success: function (data) {
                $('#ddlItemCategory').get(0).options.length = 0;
                $('#ddlItemCategory').get(0).options[0] = new Option('--Select--', '');

                $.map(data, function (item) {
                    $('#ddlItemCategory').get(0).options[$('#ddlItemCategory').get(0).options.length] = new Option(item.Display, item.Value);
                });
            },
            error: function () { alert("Item Does Not Load"); }
        });


        $.ajax({

            type: 'POST',
            url: '@Url.Action("StoreLocationList", "InventoryDailyTransaction")',
            data: "{'itemTypeId':'" + itemTypeId + "','transactionType':'" + issueTypeId + "'}",
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            cache: false,
            success: function (data) {
                $('#ddlStoreLocation').get(0).options.length = 0;
                $('#ddlStoreLocation').get(0).options[0] = new Option('--Select--', '');

                $.map(data, function (item) {
                    $('#ddlStoreLocation').get(0).options[$('#ddlStoreLocation').get(0).options.length] = new Option(item.Display, item.Value);
                });
            },
            error: function () { alert("Item Does Not Load"); }
        });


        $('#txtDeliveryQuantity').val("");
    });

    $('#ddlItemCategory').change(function () {

        var itemCategory = $('#ddlItemCategory').val();

        $.ajax({
            type: 'POST',
            url: '@Url.Action("ItemList", "InventoryDailyTransaction")',
            data: "{'itemCategory':'" + itemCategory + "'}",
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: false,
            success: function (data) {

                $('#ddlItem').get(0).options.length = 0;
                $('#ddlItem').get(0).options[0] = new Option('--Select--', '');

                $.map(data, function (item) {
                    $('#ddlItem').get(0).options[$('#ddlItem').get(0).options.length] = new Option(item.Display, item.Value);
                });

                if (data[0].IsItASerializableItem == "1") {
                    $('#btnMapSerial').attr('disabled', true);
                }
                else {
                    $('#btnMapSerial').attr('disabled', 'disabled');
                    $('#serialGrid tbody').html('');
                    $('#serialMapForIssue').css('display', 'none');
                }
            },
            error: function () {
                alert("Connection Failed. Please Try Again.");
            }
        });
        $('#txtDeliveryQuantity').val("");
    });

    $('#ddlItem').change(function () {

        if ($('#ddlStoreLocation').val() != "")
            AvailAbleItemQuantity();
        else
            $('#txtAvailableQuantity').val("");

        $('#serialMapForMRR').css('display', 'none');
        $('#txtSerialNo').val("");
        $('#txtSerialQuantity').val("");
    });

    $('#ddlStoreLocation').change(function () {
        if ($('#ddlStoreLocation').val() != "")
            AvailAbleItemQuantity();
        else
            $('#txtAvailableQuantity').val("");

        $('#serialMapForMRR').css('display', 'none');
        $('#txtSerialNo').val("");
        $('#txtSerialQuantity').val("");
    });

    function AvailAbleItemQuantity() {

        var itemCodeCapacityModel = $('#ddlItem').val().split('-');
        var itemCode = itemCodeCapacityModel[0];
        var storeLocation = $('#ddlStoreLocation').val();

        $.ajax({
            type: 'POST',
            url: '@Url.Action("AvailAbleStoreItemQuantity", "InventoryDailyTransaction")',
            data: "{'itemCode':'" + itemCode + "','storeLocation':'" + storeLocation + "'}",
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: false,
            success: function (data) {
                $('#txtAvailableQuantity').val(data[0].AvailableQuantity);
                $('#txtHiddenItemModelCapacity').val(data[0].ItemName + ',' + data[0].ItemCapacityName + ',' + data[0].ItemModelName);
            },
            error: function () {
                alert("Connection Failed. Please Try Again.");
            }
        });

        var ss = $('#txtAvailableQuantity').val();
    }

    function SaveIssueItem() {

        if (parseInt($('#hfIsInventoryImplemented').val()) == 0) {
            alert("You Are Not Authorized For Issue");
            return false;
        }

        var storeLocation = $('#ddlStoreLocation').val();
        var issueType = $('#ddlIssueType').val();
        var delivarQuantity = $('#txtDeliveryQuantity').val();
        var availableQuantity = $('#txtAvailableQuantity').val();
        var gridLength = $('#GridIssueReceived tbody tr').length;
        var challanSeqNumber = $('#txtSequenceNumber').val();
        var challanNumber = $('#txtChallanNumber').val();
        var challanDate = $('#dtpChallanDate').val();
        var toLocation = $('#hfToLocation').val();

        var startDate = Helper.StartDate($('#hfCurrentDay').val());
        var endDate = Helper.EndDate($('#hfCurrentDay').val());
        var selectedDate = Helper.DateCange(challanDate);

        if (gridLength <= 0) {
            alert("No Item Found For Issue");
            return false;
        }

        if (challanDate == "") {
            alert("Please Give Issue Date");
            return false;
        }
        else if (selectedDate < startDate || selectedDate > endDate) {
            alert("Challan Date Should be in Current Month/Period");
            return false;
        }
        else if (issueType == "") {
            alert("Please Give Issue Type");
            return false;
        }
        else if (delivarQuantity == "") {
            alert("Please Give Delivar Quantity");
            return false;
        }
        else if (Helper.IsInt(delivarQuantity) == false) {
            alert("Delivar Quantity Cannot Be Negative/Character");
            return false;
        }
        else if (challanNumber == "") {
            alert("Please Give Challan Number");
            return false;
        }
        else if (storeLocation == "") {
            alert("Please Give Store Location");
            return false;
        }

        if (parseInt(delivarQuantity) > parseInt(availableQuantity)) {
            alert("Delivar Quantity Cannot Be Greater Than Available Quantity");
            return false;
        }

        var multipleLocation = "";

        if ($('#txtToLocation').is(':disabled') && $('#hfIsChallanLocationNeeded').val() == "1") {
            toLocation = "";
            $('#hfToLocation').val("0");
            multipleLocation = $('#hfMultipleToLocation').val();
        }
        else {
            toLocation = $('#txtToLocation').val();
            $('#hfMultipleToLocation').val("0");
            if (toLocation == "") {
                alert("Please Select Issue Challan Location");
                return false;
            }

            toLocation = $('#hfToLocation').val();
        }

        var componentSequenceNumber = 1;
        var itemCode = "";
        var itemSerials = "";

        var challanMaster = "";
        var challanWithSerials = "";

        $('#GridIssueReceived tbody tr').each(function () {

            itemCode = $(this).find('td:eq(0)').text();
            issueType = $(this).find('td:eq(9)').text();
            storeLocation = $(this).find('td:eq(10)').text();
            toLocation = $(this).find('td:eq(11)').text();
            delivarQuantity = $(this).find('td:eq(4)').text();

            if (challanMaster != "") {
                challanMaster = challanMaster + "#" + itemCode + "," + issueType + "," + storeLocation + "," + toLocation + "," + delivarQuantity + "," + componentSequenceNumber;
            }
            else {
                challanMaster = challanMaster + itemCode + "," + issueType + "," + storeLocation + "," + toLocation + "," + delivarQuantity + "," + componentSequenceNumber;
            }

            componentSequenceNumber = componentSequenceNumber + 1;
        });

        componentSequenceNumber = 1;
        $('#SerialCollectionGrid tbody tr').each(function () {

            itemCode = $(this).find('td:eq(0)').text();
            itemSerials = $(this).find('td:eq(1)').text();

            if (challanWithSerials != "") {
                challanWithSerials = challanWithSerials + "#" + itemCode + "," + itemSerials + "," + componentSequenceNumber;
            }
            else {
                challanWithSerials = challanWithSerials + itemCode + "," + itemSerials + "," + componentSequenceNumber;
            }

            componentSequenceNumber = componentSequenceNumber + 1;
        });

        //alert("challanMaster: " + challanMaster);
        //alert("challanWithSerials: " + challanWithSerials);

        $.ajax({

            type: 'POST',
            url: '@Url.Action("SaveItemIssue", "InventoryDailyTransaction")',
            data: "{'challanMaster':'" + challanMaster + "','challanWithSerials':'" + challanWithSerials + "','challanDate':'" + challanDate + "','challanSequenceNumber':'" + challanSeqNumber + "','refChallanNumber':'" + challanNumber + "','multipleLocation':'" + multipleLocation + "'}",
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            cache: false,
            success: function (data) {

                if (data[0].messageCode == "success") {
                    alert(data[0].message);
                    ClearAllControl();

                    $('#txtSequenceNumber').val(data[0].id);
                }
                else
                    alert(data[0].message);
            },
            error: function () { }

        });

        return false;
    }

    function CloseIssueMultipleSelectionDialogWindow() {

        var multipleLocation = "";
        var locationCode = "";

        $('#MultipleLocationGrid tbody tr').each(function () {
            locationCode = $(this).find('td:eq(0)').text();

            if (multipleLocation != "") {
                multipleLocation = multipleLocation + "#" + locationCode;
            }
            else {
                multipleLocation = multipleLocation + locationCode;
            }

        });

        $('#hfMultipleToLocation').val(multipleLocation);

        var detailWindow = $("#dialogIssueMultipleLocation").data("tWindow");
        detailWindow.center().close();

        $('#LoadMultipleSelectionWindow').html('');
    }

    function CloseDialogIssueMultipleLocation(e) {
        $('#LoadMultipleSelectionWindow').html('');

        if ($('#hfMultipleToLocation').val() == "0") {
            $('#ckbIssueMultipleLocation').attr("checked", false);
            $('#txtToLocation').val('');
            $('#txtToLocation').attr('disabled', false);
        }
    }

    function CloseDialogLocationSelection(e) {
        $('#LoadLocationSelectionWindow').html('');
    }

    function ClearAllControl() {

        $('select').each(function () {
            $(this).val("");
        });

        $('#txtChallanNumber').val("");
        $('#txtToLocation').val("");
        $('#txtDeliveryQuantity').val("");
        $('#txtAvailableQuantity').val("0");
        $('#txtHiddenItemModelCapacity').val("");
        $('#txtSerialQuantity').val("");

        $('#GridIssueReceived tbody').html('');
        $('#SerialCollectionGrid tbody').html('');
        $('#serialGrid tbody').html('');
        $('#ddlAvailAbleItemSerials').get(0).options.length = 0;
        $('#ddlAvailAbleItemSerials').get(0).options[0] = new Option('--Select--', '');
        $('#serialMapForIssue').css('display', 'none');

        $('#hfIsChallanLocationNeeded').val("0");
        $('#hfMultipleToLocation').val("0");
        $('#hfToLocation').val("0");
        $('#ckbIssueMultipleLocation').attr("checked", false);
        $('#txtToLocation').attr("disabled", false);
    }

    function RSFMenu(goFor) {
        window.location.replace(Helper.Menu("../../", goFor));
        return false;
    } 

</script>
