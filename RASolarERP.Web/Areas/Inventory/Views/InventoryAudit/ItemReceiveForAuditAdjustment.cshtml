@{
    ViewBag.Title = "Item Receive For Audit Adjustment";
    Layout = "~/Areas/Inventory/Views/Shared/_InventoryLayout.cshtml";
    if (false)
    {
    <script src="../../../../Scripts/jquery-1.5.1.min.js" type="text/javascript"></script>
    }
}
@section TopMenu
{
    @Html.Partial((String)ViewBag.TopMenu)
}
@section LoginInfo
{
    <table cellpadding="0" cellspacing="0" border="0" style="text-align: right;" width="100%">
        <tr>
            <td style="width: 20%" align="left">
                @ViewBag.ZoneTitle&nbsp; @ViewBag.ZoneName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.RegionTitle&nbsp; @ViewBag.RegionName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.UnitTitle&nbsp; @ViewBag.UnitName
            </td>
            <td style="width: 40%" align="left">
                @ViewBag.OpenMonthYear
            </td>
        </tr>
    </table>
}
<input id="hfOpenDay" type="hidden"  value="@ViewBag.OpenDay"/>
<input id="hfOpenBackDay" type="hidden"  value="@ViewBag.OpenBackDay"/>
<input id="hfIsInventoryImplemented" type="hidden" value="@ViewBag.IsInventoryImplemented" />
<input id="hfEditMode" type="hidden" value="0" />
<input id="hfEditItemCode" type="hidden" value="0" />
<input id="hftxtResponsibleEmployeeId" type="hidden" value="" />
@{
    bool InventoryStockUpdateFinishClosed = (bool)ViewBag.InventoryStockUpdateFinishClosed;
}
@if (InventoryStockUpdateFinishClosed == true)
{
    <table cellpadding="0" cellspacing="2" border="0" width="100%">
        <tr>
            <td>
                <table cellpadding="0" cellspacing="0" border="0" width="100%">
                    <tr>
                        <td align="left" style="width: 32%;">
                            <table cellpadding="0" cellspacing="2" border="0" width="100%">
                                <tr>
                                    <td align="left" class="IRCaptionLeftColumn">
                                        Item Type
                                    </td>
                                    <td align="left">
                                        @Html.DropDownList("ddlItemType", new SelectList(ViewBag.ItemType, "ItemTypeID", "Description"), "--Select--", new { @class = "IRDropDown" })
                                    </td>
                                </tr>
                                <tr>
                                    <td class="IRCaptionLeftColumn">
                                        MRR Type
                                    </td>
                                    <td>
                                        @Html.DropDownList("ddlMrrType", Enumerable.Empty<SelectListItem>(), "--Select--",
                                        new { @class = "IRDropDown" })
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IRCaptionLeftColumn">
                                        Item Category
                                    </td>
                                    <td align="left">
                                        @Html.DropDownList("ddlItemCategory", Enumerable.Empty<SelectListItem>(), "--Select--",
                                        new { @class = "IRDropDown" })
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IRCaptionLeftColumn">
                                        Item
                                    </td>
                                    <td>
                                        @Html.DropDownList("ddlItem", Enumerable.Empty<SelectListItem>(), "--Select--",
                                        new { @class = "IRDropDown" })
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IRCaptionLeftColumn">
                                        Store Location
                                    </td>
                                    <td align="left">
                                        @Html.DropDownList("ddlStoreLocation", Enumerable.Empty<SelectListItem>(), "--Select--",
                                        new { @class = "IRDropDown" })
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td align="left" style="width: 32%;" valign="top">
                            <table cellpadding="0" cellspacing="2" border="0" width="100%">
                                <tr>
                                    <td align="left" class="IRCaptionMiddleColumn">
                                        MRR Date
                                    </td>
                                    <td align="left">
                                        @(Html.Telerik().DatePicker().Name("dtpMRRDate").Format("dd-MMM-yyyy").Value(DateTime.Now.Date).Max(new DateTime(2099, 12, 31)).Value(ViewBag.OpenDay))
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IRCaptionMiddleColumn">
                                        MRR Sequence No.
                                    </td>
                                    <td align="left">
                                        @Html.TextBox("txtMRRSequenceNumber", (string)ViewBag.ChallnSequenceNumberNew, new { @class = "IRControl", @readonly = true })
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IRCaptionMiddleColumn">
                                        MRR No.
                                    </td>
                                    <td align="left">
                                        @Html.TextBox("txtMRRNumber", "", new { @class = "IRControl", @maxlength = 10 })
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IRCaptionMiddleColumn">
                                        External Challan No
                                    </td>
                                    <td align="left">
                                        @Html.TextBox("txtExternalChallanNo", "", new { @readonly = true, @class = "IRControl", @maxlength = 10 })
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IRCaptionMiddleColumn">
                                        External Challan Date
                                    </td>
                                    <td align="left">
                                        @(Html.Telerik().DatePicker().Name("dtpExternalChallanDate").Format("dd-MMM-yyyy").Value(DateTime.Now.Date).Max(new DateTime(2099, 12, 31))
                                        .ClientEvents(events => events.OnChange("onChangeDatePicker"))
                                        )
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td align="left" style="width: 35%;" valign="top">
                            <table cellpadding="0" cellspacing="2" border="0" width="100%">
                                <tr>
                                    <td align="left" class="IRCaptionRightColumn">
                                        Item Price Per Unit
                                    </td>
                                    <td align="right">
                                        @Html.TextBox("txtItemprice", "", new { @class = "IRControl", @readonly = true, @maxlength = 7 })
                                    </td>
                                </tr>
                                <tr>
                                    <td class="IRCaptionRightColumn">
                                        Customer Code
                                    </td>
                                    <td align="right">
                                        @Html.TextBox("txtCustomerCode", "", new { @class = "IRControl", @readonly = true })
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IRCaptionRightColumn">
                                        Available Quantity
                                    </td>
                                    <td align="right">
                                        @Html.TextBox("txtAvailableQuantity", "", new { @class = "IRControl", @readonly = true })
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IRCaptionRightColumn">
                                        Excess Quantity
                                    </td>
                                    <td align="right">
                                        @Html.TextBox("txtDeliveryQuantity", "", new { @class = "IRControl", @maxlength = 5 })
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" style="width: 163px;">
                                        Serial Quantity of Excess Items
                                    </td>
                                    <td align="right">
                                        @Html.TextBox("txtSerialQuantity", "", new { @class = "IRControl", @readonly = true })
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td align="left" style="width: 35%;">
                            <table cellpadding="0" cellspacing="2" border="0" width="100%">
                                <tr>
                                    <td class="IRCaptionRightColumn">
                                        Audit Reason
                                    </td>
                                    <td>
                                        @Html.DropDownList("ddlAuditReason", new SelectList(ViewBag.AuditReasons, "ReasonCode", "ReasonDescription"), "--Select--", new { @class = "IRDropDown" })
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td align="left" style="width: 32%;">
                            <table cellpadding="0" cellspacing="2" border="0" width="100%">
                                <tr>
                                    <td class="IRCaptionMiddleColumn">
                                        Responsible Employee
                                    </td>
                                    <td>
                                        @Html.TextBox("txtResponsibleEmployee", "", new { })
                                        @(Html.Telerik().Window()
                                              .Name("dialogEmployeeSelection")
                                              .Title("Select An Employee")
                                              .ClientEvents(evenets => evenets.OnClose("CloseDialogEmployeeSelection"))
                                              .Draggable(false)
                                              .Resizable(resizing =>
                                                        resizing.Enabled(false)
                                                                .MinHeight(500)
                                                                .MinWidth(970)
                                                                .MaxHeight(500)
                                                                .MaxWidth(970)
                                              )
                                              .Modal(true)
                                              .Buttons(b => b.Close())
                                              .Content(@<p id="LoadEmployeeSelection" style="margin: 0; padding: 0; width: 970px;
                                                  height: 425px;">
                                              </p>)
                                             .Visible(false)
                                        )
                                    </td>
                                    <td>
                                        <table cellpadding="0" cellspacing="2" border="0">
                                            <tr>
                                                <td align="left">
                                                    @Html.Hidden("txtCurrentLocation", "", new { @class = "EmployeeTransferIsrlControl", @readonly = true })
                                                    @(Html.Telerik().Window().Name("dialogEmployeeLocationSelection")
                                          .Title("Select A Location For Load Employee")
                                          .ClientEvents(events => events.OnClose("CloseDialogEmployeeLocationSelection"))
                                          .Draggable(false)
                                          .Resizable(resizing => resizing.Enabled(false)
                                                                         .MinHeight(155)
                                                                         .MinWidth(355)
                                                                         .MaxHeight(500)
                                                                         .MaxWidth(500)
                                                                         )
                                          .Modal(true)
                                          .Buttons(b => b.Close())
                                          .Content(@<p id="LoadEmployeeLocationSelectionWindow" style="height: 153px; width: 342px;
                                              padding: 0; margin: 0;">
                                          </p>
                                          )
                                          .Visible(false)
                                     )
                                                </td>
                                            </tr>
                                        </table>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td>
                <table cellpadding="0" cellspacing="2" border="0" width="100%">
                    <tr>
                        <td align="left" style="width: 15%;">
                            Remarks
                        </td>
                        <td align="left" style="width: 85%;">
                            @Html.TextBox("txtClaimRemarks", "", new { @style = "width:516px;" })
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr id="serialMapForMRR">
            <td align="left">
                @Html.Partial("ItemSerialCheckGridWithoutChallan")
            </td>
        </tr>
        <tr>
            <td align="left" style="padding-top: 1px; padding-bottom: 1px;">
                <table cellpadding="0" cellspacing="0" border="0" width="100%">
                    <tr>
                        <td style="width: 332px;" align="left">
                            <input id="btnAddToList" type="button" value="Add/Update Item & Serial" style="width: 200px;" />
                        </td>
                        <td style="width: 332px;" align="left">
                            <input id="btnCancelEdit" type="button" value="Cancel Edit" style="width: 200px;" />
                        </td>
                        <td align="left" style="width: 332px;">
                            <input id="btnMapSerial" type="button" value="Map Serial" onclick="return MapSerialForMRR();" />
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td align="left">
                <table cellpadding="0" cellspacing="0" border="0" width="100%">
                    <tr>
                        <td>
                            @Html.Partial("MRRItemGridWithoutChallan")
                        </td>
                    </tr>
                    <tr>
                        <td align="right">
                            <input id="btnSubmit" type="button" value="Submit" onclick="return SaveMRRItem();" />
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td id="mrrItemSerials">
                <table class="TableData" cellpadding="0" cellspacing="0" id="SerialCollectionGrid"
                    width="100%">
                    <thead>
                        <tr>
                            <th align="center">
                                Item Code
                            </th>
                            <th align="center">
                                Serial No
                            </th>
                            <th align="center">
                                Status
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </td>
        </tr>
        <tr style="display: none;">
            <td>
                <input id="txtHiddenItemModelCapacity" type="text" />
            </td>
        </tr>
    </table>
}
else
{ 
    <p style="background: #ffff99; font-size: 15px; font-weight: bold;">
        Please MAP Serial Completely Before Challan
    </p>
}
<script type="text/javascript">

    $('#serialMapForMRR').css('display', 'none');
    $('#mrrItemSerials').css('display', 'none');


    function onChangeDatePicker(e) {
        if ($('#dtpExternalChallanDate').is(":disabled") == true) {
            $('#dtpExternalChallanDate').val("");
        }
    }

    function CloseDialogLocationSelection(e) {
        $('#LoadLocationSelectionWindow').html('');
    }

    function CloseDialogWindow() {

        var locationCode = "";
        var locationText = "";
        var employeeLocationtype = "";

        if ($('#ddlLocationTypeForSingleSelection').val() == "ho") {
            locationText = "[9000] Head Office";
            locationCode = "9000";
            employeeLocationType = "HO";
        }
        else if ($('#ddlLocationTypeForSingleSelection').val() == "zone") {
            locationText = $('#ddlZone').find('option:selected').text();
            locationCode = $('#ddlZone').val();
            employeeLocationType = "Zone";
        }
        else if ($('#ddlLocationTypeForSingleSelection').val() == "region") {
            locationText = $('#ddlRegion').find('option:selected').text();
            locationCode = $('#ddlRegion').val();
            employeeLocationType = "Region";
        }
        else if ($('#ddlLocationTypeForSingleSelection').val() == "unit") {
            locationText = $('#ddlUnit').find('option:selected').text();
            locationCode = $('#ddlUnit').val();
            employeeLocationType = "Unit";
        }

        $('#txtToLocation').val(locationText);
        $('#employeeLocationType').val(employeeLocationType);
        $('#hfEmployeeLocationType').val(employeeLocationType);

        var detailWindow = $("#dialogLocationSelection").data("tWindow");
        detailWindow.center().close();

        $('#LoadLocationSelectionWindow').html('');
        $('#serialMapForIssue').focus();

        if (locationCode != "")
            ClaimEmployeeList(locationCode, employeeLocationType);

        return false;
    }

    $(document).ready(function () {

        $('#txtResponsibleEmployee').click(function () {
            LoadEmployeeSearchWindow();
        });

        $('#txtToLocation').click(function () {

            $.ajax({
                type: 'GET',
                url: '@Url.Action("LocationSelectionPartial", "InventoryAudit")',
                dataType: 'html',
                cache: false,
                success: function (data) {
                    $('#LoadLocationSelectionWindow').html(data);
                },
                error: function () {
                    alert("Connection Failed. Please Try Again");
                }
            });

            var detailWindow = $("#dialogLocationSelection").data("tWindow");
            detailWindow.center().open();
        });

        $('select option').mouseenter(function () {
            $(this).css("width", "auto");
        });

        $('select option').mouseleave(function () {
            $(this).css("width", "147px");
        });

        $('#txtDeliveryQuantity').change(function () {

            if ($('#txtDeliveryQuantity').val() == "")
                return false;
            else if (Helper.IsInt($('#txtDeliveryQuantity').val()) == false) {
                alert("Delivery Quantity Cannot Be Negative/Character");
                $('#txtDeliveryQuantity').val("0");
                return false;
            }
        });

        $('#txtItemprice').change(function () {

            if ($('#txtItemprice').val() == "")
                return false;
            else if (Helper.IsDecimal2FloatPoint($('#txtItemprice').val()) == false) {
                alert("Invalid Item Price.");
                $('#txtItemprice').val("0");
                return false;
            }
        });

        $('#btnCancelEdit').click(function () {

            if ($('#hfEditMode').val() != "0") {

                var itemCode = $('#hfEditItemCode').val();
                var editedRow = $("#GridIssueReceived tbody tr:contains('" + itemCode + "')");

                editedRow.removeClass("HighlightTr");

                $('#txtSerialQuantity').val($('#txtTotalSerialQuantity').val());
                $('#txtSerialNo').val("");
                $('#txtTotalSerialQuantity').val("0");
                $('#serialGrid tbody').html("");
                $('#serialMapForMRR').css('display', 'none');
            }
        });

        $('#btnAddToList').click(function () {

            var itemType = $('#ddlItemType').val();
            var itemCategory = $('#ddlItemCategory').val();
            var item = $('#ddlItem').val();
            var receivedQuantity = $('#txtDeliveryQuantity').val();
            var receiveTypeId = $('#ddlMrrType').val();
            var storeLocation = $('#ddlStoreLocation').val();
            var itemPrice = $('#txtItemprice').val();
            var isItASerializableItem = "1";

            if (receiveTypeId == "RCVLOCLPUR" || receiveTypeId == "RCVFRMOTVR") {

                if ($.trim(itemPrice) == "" || $.trim(itemPrice) == "0") {
                    itemPrice = 0;
                }
            }
            else {
                itemPrice = 0;
            }

            var lengthOfSerialScanTable = $('#serialGrid tbody tr').length;

            if ($('#btnMapSerial').is(':disabled') == false) {
                if (lengthOfSerialScanTable == 0) {
                    alert("Please MAP The Serial First");
                    return false;
                }
                else if (lengthOfSerialScanTable < parseInt(receivedQuantity)) {
                    alert("Please MAP All Serial First");
                    return false;
                }
                else if (lengthOfSerialScanTable > parseInt(receivedQuantity)) {
                    alert("Please Correct The Delivery Quantity/Delete MAP Serial");
                    return false;
                }

                isItASerializableItem = "1";
            }
            else {
                isItASerializableItem = "0";
            }

            if (itemType == "") {
                alert("Please Select Item Type");
                return false;
            }
            else if (itemCategory == "") {
                alert("Please Select Item Category");
                return false;
            }
            else if (item == "") {
                alert("Please Select Item");
                return false;
            }
            else if (receivedQuantity == "") {
                alert("Item Quantity Is Not Available For Issue");
                return false;
            }
            else if (receiveTypeId == "") {
                alert("Please Give Receive Type");
                return false;
            }
            else if (storeLocation == "") {
                alert("Please Give Store Location");
                return false;
            }
            else if ($('#ddlAuditReason').val() == "") {
                alert("Please Select Audit Reason");
                return false;
            }

            var itemCodeCapacityModel = $('#ddlItem').val().split('-');
            var itemCode = itemCodeCapacityModel[0];
            var itemCapacity = itemCodeCapacityModel[1];
            var itemModel = itemCodeCapacityModel[2];

            if ($('#hfEditMode').val() == "1") {

                var editItemTr = "";
                var trSerialEdited = "";
                editItemTr = $("#GridIssueReceived tbody tr:contains('" + itemCode + "')");

                $(editItemTr).find("td:eq(4)").text(receivedQuantity);
                $(editItemTr).find("td:eq(5)").text($('#txtTotalSerialQuantity').val());

                $('#SerialCollectionGrid tbody tr').each(function () {
                    var trId = "isc" + itemCode + $(this).find("td:eq(1)").text();

                    if (itemCode == $(this).find("td:eq(0)").text()) {
                        $("#SerialCollectionGrid tbody tr[id$='" + trId + "']").remove();
                    }
                });

                $('#serialGrid tbody tr').each(function () {

                    var sCode = $(this).find("td:eq(0)").text();

                    trSerialEdited = trSerialEdited + "<tr id=\"isc" + itemCode + sCode + "\"> ";

                    trSerialEdited = trSerialEdited + "<td>" + itemCode + "</td> ";
                    trSerialEdited = trSerialEdited + "<td>" + sCode + "</td> ";
                    trSerialEdited = trSerialEdited + "<td>" + $(this).find("td:eq(1)").text() + "</td> ";

                    trSerialEdited = trSerialEdited + "</tr> ";

                    $('#SerialCollectionGrid tbody').append(trSerialEdited);
                    trSerialEdited = "";
                });

                $('#hfEditMode').val("0");
                $('#hfEditItemCode').val("0");

                $(editItemTr).removeClass("HighlightTr");
                $('#txtSerialQuantity').val($('#txtTotalSerialQuantity').val());
                $('#txtSerialNo').val("");
                $('#txtTotalSerialQuantity').val("0");
                $('#serialGrid tbody').html("");
                $('#serialMapForMRR').css('display', 'none');

                return false;
            }

            var gridLength = $('#GridIssueReceived tbody tr').length;
            var i = 0;

            var grid = $('#GridIssueReceived tbody');

            for (i = 0; i < gridLength; i++) {

                var tr = grid.find("tr:eq(" + i + ")");
                var existItemCode = tr.find('td:eq(0)').text();

                if (itemCode == existItemCode) {
                    break;
                }
            }

            if (i < gridLength) {
                alert("Duplicate Item Is Not Accepted For Received");
                return false;
            }

            i = i - 1;

            var itemCapacityModelText = $('#txtHiddenItemModelCapacity').val().split(',');

            var itemCodeText = itemCapacityModelText[0];
            var itemCapacityText = "&nbsp;";
            var itemModelText = "&nbsp;";

            if ($.trim(itemCapacityModelText[1]) != "")
                itemCapacityText = itemCapacityModelText[1];

            if ($.trim(itemCapacityModelText[2]) != "")
                itemModelText = itemCapacityModelText[2];

            var trNew = "";

            if (i % 2 == 0)
                trNew = "<tr class=\"t-alt\"> ";
            else
                trNew = "<tr> ";

            trNew = trNew + "<td>" + itemCode + "</td>";
            trNew = trNew + "<td>" + itemCodeText + "</td>";
            trNew = trNew + "<td>" + itemCapacityText + "</td>";
            trNew = trNew + "<td>" + itemModelText + "</td>";
            trNew = trNew + "<td class=\"TdAlignRight\">" + receivedQuantity + "</td>";
            trNew = trNew + "<td class=\"TdAlignRight\">" + $('#txtTotalSerialQuantity').val() + "</td>";
            trNew = trNew + "<td align=\"center\"> <a href=\"#\" id=\"" + $('#txtSerialNo').val() + "\" class=\"deleteBtn\" >Delete</a> </td>";

            if (isItASerializableItem == "1")
                trNew = trNew + "<td align=\"center\"> <a href=\"#\" id=\"edit" + $('#txtSerialNo').val() + "\" class=\"EditBtn\" >Edit</a> </td>";
            else
                trNew = trNew + "<td align=\"center\">Edit</td>";

            trNew = trNew + "<td class=\"TdDisplayNone\">" + itemCapacity + "</td>";
            trNew = trNew + "<td class=\"TdDisplayNone\">" + itemModel + "</td>";
            trNew = trNew + "<td class=\"TdDisplayNone\">" + receiveTypeId + "</td>";
            trNew = trNew + "<td class=\"TdDisplayNone\">" + storeLocation + "</td>";
            trNew = trNew + "<td class=\"TdDisplayNone\">" + itemCategory + "</td>";
            trNew = trNew + "<td class=\"TdDisplayNone\">" + itemPrice + "</td>";
            trNew = trNew + "<td class=\"TdDisplayNone\">" + isItASerializableItem + "</td>";

            trNew = trNew + " </tr>";

            //----------------------------------//----------------------------------------//--------------------------------

            var trSerialNew = "";
            var serialScanGrid = $('#serialGrid tbody');

            for (i = 0; i < lengthOfSerialScanTable; i++) {

                var tr = serialScanGrid.find("tr:eq(" + i + ")");
                var serials = tr.find("td:eq(0)").text();
                var alreadyUsedSerials = $("#SerialCollectionGrid tbody:contains(\"" + serials + "\")").length;

                if (alreadyUsedSerials > 0) {
                    alert("This (" + serials + ") Serial Is Already MAP For Received");
                    return false;
                }

                trSerialNew = trSerialNew + "<tr id=\"isc" + itemCode + serials + "\"> ";

                trSerialNew = trSerialNew + "<td>" + itemCode + "</td> ";
                trSerialNew = trSerialNew + "<td>" + serials + "</td> ";
                trSerialNew = trSerialNew + "<td>" + tr.find("td:eq(1)").text() + "</td> ";

                trSerialNew = trSerialNew + "</tr> ";
            }

            $('#GridIssueReceived tbody').append(trNew);
            $('#SerialCollectionGrid tbody').append(trSerialNew);

            $('#txtSerialQuantity').val($('#txtTotalSerialQuantity').val());
            $('#txtSerialNo').val("");
            $('#txtTotalSerialQuantity').val("0");
            $('#serialGrid tbody').html("");
            $('#serialMapForMRR').css('display', 'none');

            $('#ddlItemType').attr("disabled", true);
            $('#ddlMrrType').attr("disabled", true);
            $('#ddlStoreLocation').attr("disabled", true);

            return false;
        });

        $('#GridIssueReceived').delegate('a.deleteBtn', 'click', function () {

            var itemCode = $(this).parent().parent().find("td:eq(0)").text();

            if (confirm("Do you Want to Delete Item (" + itemCode + ") ?")) {

                $(this).parent().parent().fadeOut('slow').remove();
                $('#txtTotalSerialQuantity').val("0");
                $('#serialGrid tbody').html("");

                $('#SerialCollectionGrid tbody tr').each(function () {
                    var texto = $(this).find('td:eq(0)').text();
                    var trId = "isc" + itemCode + $(this).find("td:eq(1)").text();

                    if (itemCode == $(this).find("td:eq(0)").text()) {
                        $("#SerialCollectionGrid tbody tr[id$='" + trId + "']").remove();
                    }
                });
            }
            return false;
        });

        $('#GridIssueReceived').delegate('a.EditBtn', 'click', function () {

            var tr = $(this).parent().parent();

            if ($(tr).find('td:eq(14)').text() == "0") {
                return false;
            }

            $(tr).addClass("HighlightTr");

            var itemCategory = $(tr).find("td:eq(12)").text();
            var itemCode = $(tr).find("td:eq(0)").text();
            var receiveQuantity = $(tr).find("td:eq(4)").text();
            var serialQuantity = $(tr).find("td:eq(5)").text();
            var capacityId = $(tr).find("td:eq(8)").text();
            var modelId = $(tr).find("td:eq(9)").text();

            if ($('#hfEditItemCode').val() != "0")
                $("#GridIssueReceived tbody tr:contains('" + $('#hfEditItemCode').val() + "')").removeClass("HighlightTr");

            $('#hfEditMode').val("1");
            $('#hfEditItemCode').val(itemCode);

            $('#ddlItemCategory').val(itemCategory);
            $('#ddlItem').val(itemCode + "-" + capacityId + "-" + modelId);
            $('#txtDeliveryQuantity').val(receiveQuantity);
            $('#txtSerialQuantity').val(serialQuantity);
            $('#txtTotalSerialQuantity').val(serialQuantity);

            var startPosition = $("#SerialCollectionGrid tbody tr:contains('" + itemCode + "')").index();
            var itemWiseSerialGridLength = $("#SerialCollectionGrid tbody tr:contains('" + itemCode + "')").length + startPosition;
            var i = 0;
            var addedSerials = "";

            $('#serialMapForMRR').css('display', '');
            $('#serialGrid tbody').html("");

            for (i = startPosition; i < itemWiseSerialGridLength; i++) {

                tr = $("#SerialCollectionGrid tbody tr:eq(" + i + ")");
                addedSerials = $(tr).find('td:eq(1)').text();

                var trNew = "";

                if (i % 2 == 0)
                    trNew = "<tr class=\"t-alt\"> <td>" + addedSerials + "</td>";
                else
                    trNew = "<tr> <td>" + addedSerials + "</td>";

                trNew = trNew + "<td>&nbsp;</td>"; // damage

                trNew = trNew + "<td align=\"center\"> <a href=\"#\" id=\"" + addedSerials + "\" class=\"deleteSerialBtn\" >Delete</a> </td> </tr>";

                $('#serialGrid tbody').append(trNew);

                $('#txtSerialNo').focus();
                $('#serialMessage').text("");
            }
        });


    });

    function MapSerialForMRR() {

        var receivedQuantity = $('#txtDeliveryQuantity').val();

        if ($('#ddlItem').val() == "") {
            alert("Please Select Item");
        }
        if (receivedQuantity == "") {
            alert("Please Give Receive Quantity");
            return false;
        }
        else if (Helper.IsInt(receivedQuantity) == false) {
            alert("Receive Quantity Cannot Be Negative/Character");
            return false;
        }

        $('#serialMapForMRR').css('display', '');
        $('#txtSerialNo').focus();
    }

    $('#ddlItemType').change(function () {

        var itemTypeId = $('#ddlItemType').val();

        $('#ddlMrrType').get(0).options.length = 0;
        $('#ddlMrrType').get(0).options[0] = new Option('--Select--', '');

        $.ajax({

            type: 'POST',
            url: '@Url.Action("MRRTypeList", "InventoryAudit")',
            data: "{'itemTypeId':'" + itemTypeId + "'}",
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            cache: false,
            success: function (data) {
                $('#ddlMrrType').get(0).options.length = 0;
                $('#ddlMrrType').get(0).options[0] = new Option('--Select--', '');

                $.map(data, function (item) {
                    $('#ddlMrrType').get(0).options[$('#ddlMrrType').get(0).options.length] = new Option(item.Display, item.Value);
                });
            },
            error: function () { alert("Item Does Not Load"); }
        });

        $('#txtDeliveryQuantity').val("");
    });

    $('#ddlItemCategory').change(function () {

        var itemCategory = $(this).val();
        var itemTransType = $('#ddlIssueType').val();

        $.ajax({
            type: 'POST',
            url: '@Url.Action("ItemList", "InventoryDailyTransaction")',
            data: "{'itemCategory':'" + itemCategory + "','itemTransType':'" + itemTransType + "'}",
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: false,
            success: function (data) {

                $('#ddlItem').get(0).options.length = 0;
                $('#ddlItem').get(0).options[0] = new Option('--Select--', '');

                $.map(data, function (item) {
                    $('#ddlItem').get(0).options[$('#ddlItem').get(0).options.length] = new Option(item.Display, item.Value);
                });

                if (data[0].IsItASerializableItem == "1") {
                    $('#btnMapSerial').attr('disabled', false);
                }
                else {
                    $('#btnMapSerial').attr('disabled', 'disabled');
                    $('#serialGrid tbody').html('');
                    $('#serialMapForMRR').css('display', 'none');
                }
            },
            error: function () {
                alert("Connection Failed. Please Try Again.");
            }
        });
        $('#txtDeliveryQuantity').val("");
        $('#serialGrid tbody').html("");
        $('#serialMapForMRR').css('display', 'none');
    });

    $('#ddlMrrType').change(function () {

        var itemTypeId = $('#ddlItemType').val();
        var transactionType = $('#ddlMrrType').val();

        if (transactionType == "")
            return false;

        if (transactionType == "RCVLOCLPUR" || transactionType == "RCVFRMOTVR") {
            $('#txtItemprice').attr('readonly', false);
            $('#txtCustomerCode').attr('readonly', true);
            $('#txtExternalChallanNo').attr('readonly', false);
            $('#dtpExternalChallanDate').attr('disabled', false);

            $('#txtItemprice').val("");
            $('#txtCustomerCode').val("");
            $('#txtExternalChallanNo').val("");
            $('#dtpExternalChallanDate').val("");
        }
        else if (transactionType == "RCVCSIFCUS" || transactionType == "RCVCUSFCUS") {
            $('#txtCustomerCode').attr('readonly', false);
            $('#txtItemprice').attr('readonly', true);
            $('#txtExternalChallanNo').attr('readonly', true);
            $('#dtpExternalChallanDate').attr('disabled', true);

            $('#txtItemprice').val("");
            $('#txtCustomerCode').val("");
            $('#txtExternalChallanNo').val("");
            $('#dtpExternalChallanDate').val("");
        }
        else {
            $('#txtItemprice').attr('readonly', true);
            $('#txtCustomerCode').attr('readonly', true);
            $('#txtExternalChallanNo').attr('readonly', false);
            $('#dtpExternalChallanDate').attr('disabled', false);

            $('#txtItemprice').val("");
            $('#txtCustomerCode').val("");
            $('#txtExternalChallanNo').val("");
            $('#dtpExternalChallanDate').val("");
        }

        $('#ddlItem').get(0).options.length = 0;
        $('#ddlItem').get(0).options[0] = new Option('--Select--', '');

        $.ajax({

            type: 'POST',
            url: '@Url.Action("ItemCategoryList", "InventoryAudit")',
            data: "{'itemTypeId':'" + itemTypeId + "','transactionType':'" + transactionType + "'}",
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            cache: false,
            success: function (data) {
                $('#ddlItemCategory').get(0).options.length = 0;
                $('#ddlItemCategory').get(0).options[0] = new Option('--Select--', '');

                $.map(data, function (item) {
                    $('#ddlItemCategory').get(0).options[$('#ddlItemCategory').get(0).options.length] = new Option(item.Display, item.Value);
                });
            },
            error: function () { alert("Item Category Does Not Load"); }
        });

        $.ajax({

            type: 'POST',
            url: '@Url.Action("StoreLocationList", "InventoryAudit")',
            data: "{'itemTypeId':'" + itemTypeId + "','transactionType':'" + transactionType + "'}",
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            cache: false,
            success: function (data) {
                $('#ddlStoreLocation').get(0).options.length = 0;
                $('#ddlStoreLocation').get(0).options[0] = new Option('--Select--', '');

                $.map(data, function (item) {
                    $('#ddlStoreLocation').get(0).options[$('#ddlStoreLocation').get(0).options.length] = new Option(item.Display, item.Value);
                });
            },
            error: function () { alert("Store Location Does Not Load"); }
        });

        $('#txtDeliveryQuantity').val("");
    });


    $('#ddlItem').change(function () {

        if ($('#ddlItem').val() == "") {
            return false;
        }

        $('#txtDeliveryQuantity').val("");
        var itemModelCapacity = $('#ddlItem').val().split('-');

        $.ajax({
            type: 'POST',
            url: '@Url.Action("ItemWiseItemDetails", "InventoryDailyTransaction")',
            data: "{'itemCode':'" + itemModelCapacity[0] + "'}",
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: false,
            success: function (data) {
                $('#txtHiddenItemModelCapacity').val(data[0].ItemName + "," + data[0].ItemCapacityName + "," + data[0].ItemModelName);
            },
            error: function () {
                alert("Connection Failed. Please Try Again.");
            }
        });

        $('#txtSerialQuantity').val("");
        $('#serialGrid tbody').html("");
        $('#serialMapForMRR').css('display', 'none');
    });

    $('#ddlItem').change(function () {
        if ($('#ddlItem').val() != "" && $('#ddlStoreLocation').val() != "") {
            AvailAbleItemQuantity();
        }
        else
            $('#txtAvailableQuantity').val("");
    });

    $('#ddlStoreLocation').change(function () {

        if ($('#ddlItem').val() == "") {
            alert("Please Select An Item");
            this.value = "";
            return false;
        }

        if ($('#ddlStoreLocation').val() != "")
            AvailAbleItemQuantity();
        else
            $('#txtAvailableQuantity').val("");

        $('#serialMapForMRR').css('display', 'none');
        $('#ddlAvailAbleItemSerials').val("");
        $('#txtSerialQuantity').val("");
    });

    function AvailAbleItemQuantity() {

        var itemCodeCapacityModel = $('#ddlItem').val().split('-');
        var itemCode = itemCodeCapacityModel[0];
        var storeLocation = $('#ddlStoreLocation').val();

        $.ajax({
            type: 'POST',
            url: '@Url.Action("AvailAbleStoreItemQuantity", "InventoryDailyTransaction")',
            data: "{'itemCode':'" + itemCode + "','storeLocation':'" + storeLocation + "'}",
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: false,
            success: function (data) {
                $('#txtAvailableQuantity').val(data[0].AvailableQuantity);
                $('#txtHiddenItemModelCapacity').val(data[0].ItemName + ',' + data[0].ItemCapacityName + ',' + data[0].ItemModelName);
            },
            error: function () {
                alert("Connection Failed. Please Try Again.");
            }
        });

        var ss = $('#txtAvailableQuantity').val();
    }


    function SaveMRRItem() {

        //        if (parseInt($('#hfIsInventoryImplemented').val()) == 0) {
        //            alert("You Are Not Authorized For Receive Without Challan");
        //            return false;
        //        }

        var storeLocation = $('#ddlStoreLocation').val();
        var receiveType = $('#ddlMrrType').val();
        var receivedQuantity = $('#txtDeliveryQuantity').val();
        var gridLength = $('#GridIssueReceived tbody tr').length;
        var mrrSeqNumber = $('#txtMRRSequenceNumber').val();
        var mrrNumber = $('#txtMRRNumber').val();
        var mrrDate = $('#dtpMRRDate').val();

        var startDate = Helper.DateCange($('#hfOpenBackDay').val());
        var endDate = Helper.DateCange($('#hfOpenDay').val());

        var selectedDate = Helper.DateCange(mrrDate);

        if (gridLength <= 0) {
            alert("No Item Found For Received");
            return false;
        }

        if (mrrDate == "") {
            alert("Please Give Received Date");
            return false;
        }
        //else if (selectedDate < startDate || selectedDate > endDate) {
        //    alert("MRR Date Should be in Current Month/Period");
        //    return false;
        //}
        else if (receiveType == "") {
            alert("Please Give MRR Type");
            return false;
        }
        else if (receivedQuantity == "") {
            alert("Please Give Received Quantity");
            return false;
        }
        else if (storeLocation == "") {
            alert("Please Give Store Location");
            return false;
        }
        else if ($('#ddlAuditReason').val() == "") {
            alert("Please Select Audit Reason");
        }

        var externalChallanNo = $('#txtExternalChallanNo').val();
        var externalChallanDate = $('#dtpExternalChallanDate').val();

        if (receiveType == "RCVCSIFCUS" || receiveType == "RCVCUSFCUS") {
            if ($.trim($('#txtCustomerCode').val()) == "") {
                alert("Please Give Customer Code");
                return false;
            }
        }

        var componentSequenceNumber = 1;
        var itemCode = "";
        var itemSerials = "";

        var challanMaster = "";
        var challanWithSerials = "";
        var itemCategory = "";
        var itemPrice = 0;

        $('#GridIssueReceived tbody tr').each(function () {

            itemCode = $(this).find('td:eq(0)').text();
            receiveType = $(this).find('td:eq(10)').text();
            storeLocation = $(this).find('td:eq(11)').text();
            receivedQuantity = $(this).find('td:eq(4)').text();
            itemCategory = $(this).find('td:eq(12)').text();
            itemPrice = parseFloat($(this).find('td:eq(13)').text());

            if (challanMaster != "") {
                challanMaster = challanMaster + "#" + itemCode + "," + receiveType + "," + storeLocation + "," + receivedQuantity + "," + componentSequenceNumber + "," + itemCategory + "," + itemPrice;
            }
            else {
                challanMaster = challanMaster + itemCode + "," + receiveType + "," + storeLocation + "," + receivedQuantity + "," + componentSequenceNumber + "," + itemCategory + "," + itemPrice;
            }

            componentSequenceNumber = componentSequenceNumber + 1;
        });

        componentSequenceNumber = 1;
        $('#SerialCollectionGrid tbody tr').each(function () {

            itemCode = $(this).find('td:eq(0)').text();
            itemSerials = $(this).find('td:eq(1)').text();

            if (challanWithSerials != "") {
                challanWithSerials = challanWithSerials + "#" + itemCode + "," + itemSerials + "," + componentSequenceNumber;
            }
            else {
                challanWithSerials = challanWithSerials + itemCode + "," + itemSerials + "," + componentSequenceNumber;
            }

            componentSequenceNumber = componentSequenceNumber + 1;
        });

        $.ajax({

            type: 'POST',
            url: '@Url.Action("SaveItemMRRForAuditAdjustment", "InventoryAudit")',
            data: "{'mrrMaster':'" + challanMaster + "','mrrWithSerials':'" + challanWithSerials + "','mrrDate':'" + mrrDate + "','mrrSequenceNumber':'" + mrrSeqNumber + "','refMRRNumber':'" + mrrNumber + "','refCustomerCode':'" + $('#txtCustomerCode').val() + "','externalChallanNo':'" + externalChallanNo + "','externalChallanDate':'" + externalChallanDate + "','itemType':'" + $('#ddlItemType').val() + "','auditReason':'" + $('#ddlAuditReason').val() + "','auditRemarks':'" + $('#txtClaimRemarks').val() + "','claimEmployee':'" + $('#hftxtResponsibleEmployeeId').val() + "'}",
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            cache: false,
            success: function (data) {

                if (data[0].messageCode == "success") {
                    alert(data[0].message);
                    ClearAllControl();

                    $('#txtMRRSequenceNumber').val(data[0].id);
                }
                else {
                    alert(data[0].message);
                }
            },
            error: function () { alert("Connection Failed. Please Try Again"); }
        });

        return false;
    }

    function ClearAllControl() {

        $('select').each(function () {
            $(this).val("");
        });

        $('#txtMRRNumber').val("");
        $('#txtDeliveryQuantity').val("");
        $('#txtHiddenItemModelCapacity').val("");
        $('#txtSerialQuantity').val("");

        $('#GridIssueReceived tbody').html('');
        $('#SerialCollectionGrid tbody').html('');
        $('#serialGrid tbody').html('');
        $('#serialMapForMRR').css('display', 'none');
        $('#txtCustomerCode').val("");
        $('#txtAvailableQuantity').val("");
        $('#txtToLocation').val("");
        $('#txtResponsibleEmployee').val("");

        $('#ddlItemType').attr("disabled", false);
        $('#ddlMrrType').attr("disabled", false);
        $('#ddlStoreLocation').attr("disabled", false);
    }

    function CloseDialogWindowEmployeeLocation() {

        var locationCode = "";
        var locationText = "";
        var regionLocationCode = "";

        if ($('#ddlLocationType').val() == "ho") {
            locationText = "[9000] Head Office";
            locationCode = "9000";
        }
        else if ($('#ddlLocationType').val() == "zone") {
            locationText = $('#ddlZone').find('option:selected').text();
            locationCode = $('#ddlZone').val();
        }
        else if ($('#ddlLocationType').val() == "unit") {
            locationText = $('#ddlUnit').find('option:selected').text();
            locationCode = $('#ddlUnit').val();
            regionLocationCode = $('#ddlRegion').val();
        }

        $('#hfSearchLocationCode').val(locationCode);
        $('#txtSearchLocationCode').val(locationText);

        var detailWindow = $("#dialogEmployeeLocationSelection").data("tWindow");
        detailWindow.center().close();

        $('#LoadEmployeeLocationSelectionWindow').html('');

        return false;
    }


    function CloseDialogEmployeeLocationSelection(e) {
        $('#LoadEmployeeLocationSelectionWindow').html('');
    }

    function OkCommandEmployeeSelectionWindow(employeeId, employeeName) {

        var detailWindow = $("#dialogEmployeeSelection").data("tWindow");
        detailWindow.center().close();

        $('#hftxtResponsibleEmployeeId').val(employeeId);
        $('#txtResponsibleEmployee').val(employeeName + ' [' + employeeId + ']');

        $('#LoadEmployeeSelection').html('');
        $('#hfSearchLocationCode').val("");

        return false;
    }

    function LoadEmployeeSearchWindow() {

        $.ajax({
            type: 'GET',
            url: '@Url.Action("__LoadEmployeeSearchWindow", "../HRMS/EmployeeRegister")',
            dataType: 'html',
            cache: false,
            success: function (data) {
                $('#LoadEmployeeSelection').html(data);
            },
            error: function () {
                alert("Connection Failed. Please Try Again");
            }
        });

        var detailWindow = $("#dialogEmployeeSelection").data("tWindow");
        detailWindow.center().open();
    }

    function LoadLocationDialog() {

        $.ajax({
            type: 'GET',
            url: '@Url.Action("EmployeeLocationSelectionTransferPartial", "../HRMS/EmployeeRegister")',
            dataType: 'html',
            cache: false,
            success: function (data) {
                $('#LoadEmployeeLocationSelectionWindow').html(data);
            },
            error: function () {
                alert("Connection Failed. Please Try Again");
            }
        });

        var detailWindow = $("#dialogEmployeeLocationSelection").data("tWindow");
        detailWindow.center().open();
    }

    function CloseDialogEmployeeSelection(e) {
        $('#LoadEmployeeSelection').html('');
    }



    function RSFMenu(goFor) {
        window.location.replace(Helper.Menu("../../", goFor));
        return false;
    } 

</script>
