@model RASolarERP.DomainModel.HRMSModel.TADADetails
@using RASolarERP.DomainModel.HRMSModel;


<script type="text/javascript">

    var firstTime = true;
    function onDataBinding(e) {
        if (firstTime) {
            e.preventDefault();
            firstTime = false;
        }
    }

    function onError(e) {
        e.preventDefault();
    }


</script>

@{
    ViewBag.Title = "Daily TA/DA Entry";
    Layout = "~/Areas/HRMS/Views/Shared/_HrmsLayout.cshtml";

    if (false)
    {
    <script src="../../../../Scripts/jquery-1.7.1.min.js" type="text/javascript"></script>
    <script src="../../../../Scripts/RASolarCustomFunction.js" type="text/javascript"></script>      
    }
    
}
@section TopMenu
{
    @Html.Partial((String)ViewBag.TopMenu)
}
@section LoginInfo
{
    <table cellpadding="0" cellspacing="0" border="0" style="text-align: right;" width="100%">
        <tr>
            <td style="width: 20%" align="left">
                @ViewBag.ZoneTitle&nbsp; @ViewBag.ZoneName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.RegionTitle&nbsp; @ViewBag.RegionName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.UnitTitle&nbsp; @ViewBag.UnitName
            </td>
            <td style="width: 40%" align="left">
                @ViewBag.OpenMonthYear
            </td>
        </tr>
    </table>
}
<input id="hfValidForEditTADA" type="hidden" value="@Model.DateOfTADA.ToString("dd-MMM-yyyy")" />
<input id="hfEditOrNot" type="hidden" value="0" />
@using (Html.BeginForm("DailyTADAEntrySave", "EmployeeDept", FormMethod.Post, new { id = "DailyTADAEntrySave" }))
{
    @Html.Hidden("EditEmployee", "");
    <table cellpadding="0" cellspacing="0" border="0" width="100%" id="reportMode">
        <tr>
            <td>
                <fieldset>
                    <legend></legend>

                    <table cellpadding="0" cellspacing="0" border="0" width="100%">
                        <tr>
                            <td style="width: 50%;">
                                <table cellpadding="0" cellspacing="3" border="0" width="100%">
                                    <tr>
                                        <td class="TaDaInfoFieldLabel">Employee
                                        </td>
                                        <td>
                                            @Html.DropDownList("EmployeeID", new SelectList(Model.Employee, "EmployeeID", "EmployeeName"), "--Select--", new { @class = "TaDaDropDownFieldSmall" })
                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>

                    </table>

                </fieldset>

            </td>
        </tr>

        <tr>
            <td>
                <fieldset>
                    <legend>Daily TA/DA Entry</legend>
                    <table cellpadding="0" cellspacing="0" border="0" width="100%">
                        <tr>
                            <td valign="top">
                                <table cellpadding="0" cellspacing="3" border="0" width="100%">
                                    <tr>
                                        <td align="left" class="TaDaInfoFieldLabel">Date Of TA / DA
                                        </td>
                                        <td align="left">
                                            @Html.Hidden("DateOfTADA", Model.DateOfTADA)
                                            <label id="lblDateOfTADA" class="LabelForDisplayDataTADA">@Model.DateOfTADA.ToString("dd-MMM-yyyy") </label>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td align="left" class="TaDaInfoFieldLabel">TA Amount
                                        </td>
                                        <td align="left">
                                            @Html.TextBox("TAAmount", "", new { @class = "TaDaTextFieldSmall" })
                                        </td>
                                    </tr>
                                    <tr>
                                        <td align="left" class="TaDaInfoFieldLabel">DA Amount
                                        </td>
                                        <td align="left">
                                            @Html.TextBox("DAAmount", "", new { @class = "TaDaTextFieldSmall" })
                                        </td>
                                    </tr>
                                </table>
                            </td>
                            <td valign="top">
                                <table cellpadding="0" cellspacing="3" border="0" width="100%">
                                    <tr>
                                        <td align="left" class="TaDaInfoFieldLabel">Pending Days
                                        </td>
                                        <td align="left">
                                            @Html.Hidden("DaysOfPendingEntry", Model.DaysOfPendingEntry)
                                            <label id="lblDaysOfPendingEntry" class="LabelForDisplayDataTADA">@Model.DaysOfPendingEntry</label>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td align="left" class="TaDaInfoFieldLabel">Reason For TA
                                        </td>
                                        <td align="left">
                                            @Html.TextBox("ParticularsForTA", "", new { @class = "TaDaTextFieldSmall" })
                                        </td>
                                    </tr>
                                    <tr>
                                        <td align="left" class="TaDaInfoFieldLabel">Reason For DA
                                        </td>
                                        <td align="left">
                                            @Html.TextBox("ParticularsForDA", "", new { @class = "TaDaTextFieldSmall" })
                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </td>
        </tr>
        <tr>
            <td style="width: 100%; padding-top: 5px;">
                <input id="btnSaveTADAmount" type="submit" class="t-button" value="Save TA/DA" />
                <input id="btnCancel" type="reset" class="t-button" value="Cancel" />
            </td>
        </tr>

        <tr>
            <td class="HorizontalDividerBIGWithoutBG"></td>
        </tr>

        <tr>
            <td>
                <fieldset>
                    <legend></legend>
                    <table cellpadding="0" cellspacing="3" border="0" width="100%">
                        <tr>
                            <td align="left" class="TaDaInfoFieldLabel">TA/DA Entry Month</td>
                            <td align="left">
                                @Html.DropDownList("TADAEntryMonth", new SelectList(Model.MonthList, "YearMonthValue", "YearMonthName"), "--Select--", new { @class = "TaDaTextFieldSmall" })
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<input id="btnShowTaDaDetails" type="button" value="Show" class="t-button" />
                            </td>
                        </tr>

                        <tr>
                            <td colspan="2" class="HorizontalDividerBIGWithoutBG"></td>
                        </tr>

                        <tr>
                            <td colspan="2">

                                @(Html.Telerik().Grid<TADADetails>()
                                  .Name("gvTADADetails")
                                  .DataKeys(keys => keys.Add(k => k.DateOfTADA))
                                  .Columns(column =>
                                  {

                                      column.Bound(t => t.DateOfTADA).Format("{0:dd-MMM-yyyy}").Title("Date Of TA/DA")
                                                   .ClientFooterTemplate("<b>Total: </b>");

                                      column.Bound(t => t.TAAmount).Format("{0:0}").HtmlAttributes(new { @class = "GridColumnRightAlign" })
                                                    .ClientFooterTemplate("<b id=\"taTotalAmount\"></b>");

                                      column.Bound(t => t.ParticularsForTA).Title("Reason For TA");
                                      column.Bound(t => t.DAAmount).Format("{0:0}").HtmlAttributes(new { @class = "GridColumnRightAlign" })
                                                    .ClientFooterTemplate("<b id=\"daTotalAmount\"></b>");

                                      column.Bound(t => t.ParticularsForDA).Title("Reason For DA");
                                      column.Bound(t => t.DaysOfPendingEntry).HtmlAttributes(new { @class = "GridColumnRightAlign" });
                                      column.Bound(t => t.TotalTADAAmount).Title("Total TA/DA Amount").HtmlAttributes(new { @class = "GridColumnRightAlign" })
                                                    .ClientFooterTemplate("<b id=\"TotalTADAAmount\"></b>");
                                      column.Bound(t => t.EmployeeID).Hidden(true);
                                      column.Bound(t => t.EmployeeID).ClientTemplate("<a href=\"huuu\" class=\"EditEmployeeTADA\">Edit</a>").Title("");
                                  })
                                  .Selectable()
                                  .Pageable(pages => pages.PageSize(50))
                                  .DataBinding(dbBindings => dbBindings.Ajax().Select("TADADetails", "EmployeeDept"))
                                  .ClientEvents(events =>
                                  {
                                      events.OnDataBinding("onDataBinding");
                                      events.OnRowDataBound("onRowDataBound");
                                      events.OnDataBound("onDataBound");
                                      events.OnError("onError");
                                  })
                                 .ToolBar(commands =>
                                 {
                                     commands.Custom().HtmlAttributes(new { id = "exportDailyTADAtoCsv", onclick = "return SetParamaterForCsvDailyTADA();" }).Text("Export to Excel").Action("ExportToCSVDailyTADA", "EmployeeDept", new { page = 1, groupby = "~", orderby = "~", filter = "~", TADAEntryMonth = "~", employeeID = "~" });
                                 })
                                .Footer(true)
                            )

                            </td>
                        </tr>
                    </table>
                </fieldset>
            </td>
        </tr>
    </table>
}

<script type="text/javascript">

    $('#gvTADADetails .t-status').hide();

    var totalTAAmount = 0, totalDAAmount = 0, totalTADAAmount = 0;
    function onRowDataBound(e) {
        var row = e.row;
        var dataItem = e.dataItem;

        totalTAAmount += dataItem.TAAmount;
        totalDAAmount += dataItem.DAAmount;
        totalTADAAmount += dataItem.TotalTADAAmount;

        if ($("#hfEditOrNot").val() == "0") {
            row.cells[8].innerHTML = [""].join("");
        }
    }

    function onDataBound(e) {
        $('#taTotalAmount').text(totalTAAmount);
        $('#daTotalAmount').text(totalDAAmount);
        $('#TotalTADAAmount').text(totalTADAAmount);

        totalTAAmount = 0;
        totalDAAmount = 0;
        totalTADAAmount = 0;
    }

    $(document).ready(function () {

        $('#btnShowTaDaDetails').click(function () {

            if ($("#TADAEntryMonth").val() == "") {
                alert("Please Select A Month To See TA/DA Details");
                return false;
            }
            else if ($("#EmployeeID").val() == "") {
                alert("Please Select Employee See TA/DA Details");
                return false;
            }

            var validdate = $("#hfValidForEditTADA").val();
            var tadaValidMonth = Helper.MonthNameToMonthDigit(validdate);
            var monthToShow = $("#TADAEntryMonth").val();

            if (parseInt(tadaValidMonth, 10) == parseInt(monthToShow, 10)) {
                $("#hfEditOrNot").val("1");
            }
            else {
                $("#hfEditOrNot").val("0");
            }

            LoadTADAGrid($("#TADAEntryMonth").val());
        });

        $("#DailyTADAEntrySave").submit(function () {

            var employeeName = $('#EmployeeID').val();
            var taAmount = $('#TAAmount').val();
            var taReasons = $('#ParticularsForTA').val();
            var daAmount = $('#DAAmount').val();
            var daReasons = $('#ParticularsForDA').val();

            if (employeeName == '') {
                alert('Please Select Employee Name.');
                return false;
            }
            else if (taAmount == '' && taReasons == '' && daAmount == '' && daReasons == '') {
                alert('Please Insert TA/DA Amount.');
                return false;
            }
            else if (taAmount == '' && taReasons != '') {
                alert('Please Insert TA Amount First.');
                return false;
            }
            else if (daAmount == '' && daReasons != '') {
                alert('Please Insert DA Amount First.');
                return false;
            }
            else if (taAmount == '0' || daAmount == '0') {
                alert('TA/DA Amount cannot be zero.');
                return false;
            }
            else if (taAmount != '' && taReasons == '') {
                alert('Please Insert TA Reasons.');
                return false;
            }
            else if (daAmount != '' && daReasons == '') {
                alert('Please Insert DA Reasons.');
                return false;
            }


            $.ajax({
                type: this.method,
                url: this.action,
                data: $(this).serialize(),
                cache: false,
                success: function (data) {
                    if (data[0].messageCode == "success") {
                        alert(data[0].message);

                        ClearAllControl();
                    }
                    else {
                        alert(data[0].message);
                    }
                },
                error: function () {
                    alert("Connection Failed. Please Try Again.");
                }
            });

            return false;
        });

        $("#gvTADADetails").delegate("a.EditEmployeeTADA", "click", function () {

            var tr = $(this).parent().parent();

            var DateOfTADA = $(tr).find("td:eq(0)").text();
            var TAAmount = $(tr).find("td:eq(1)").text();
            var ParticularsForTA = $(tr).find("td:eq(2)").text();
            var DAAmount = $(tr).find("td:eq(3)").text();
            var ParticularsForDA = $(tr).find("td:eq(4)").text();
            var DaysOfPendingEntry = $(tr).find("td:eq(5)").text();

            var EmployeeID = $(tr).find("td:eq(7)").text();

            $('#DateOfTADA').val(DateOfTADA);
            $('#TAAmount').val(TAAmount);
            $('#ParticularsForTA').val(ParticularsForTA);
            $('#DAAmount').val(DAAmount);
            $('#ParticularsForDA').val(ParticularsForDA);
            $('#DaysOfPendingEntry').val(DaysOfPendingEntry);

            if ($('#TAAmount').val() == '0') {
                $('#TAAmount').val("")
            }
            if ($('#DAAmount').val() == '0') {
                $('#DAAmount').val("");
            }

            $('#lblDateOfTADA').text(DateOfTADA);
            $('#lblDaysOfPendingEntry').text(DaysOfPendingEntry);

            $('#EditEmployee').val(EmployeeID);
            $('#EmployeeID').val(EmployeeID);

            return false;

        });

    });

    function LoadTADAGrid(tADAEntryMonth) {

        var employeeID = $('#EmployeeID').val();
        var params = {
            TADAEntryMonth: tADAEntryMonth,
            employeeID: employeeID
        };

        var grid = $("#gvTADADetails").data("tGrid");
        grid.dataSource._data = [];
        grid.ajaxRequest(params);
    }

    function SetParamaterForCsvDailyTADA() {

        var employeeID = $("#EmployeeID").val();
        var TADAEntryMonth = $("#TADAEntryMonth").val();

        if ($("#TADAEntryMonth").val() == "") {
            alert("Please Select A Month To See TA/DA Details");
            return false;
        }
        else if ($("#EmployeeID").val() == "") {
            alert("Please Select Employee See TA/DA Details");
            return false;
        }

        var grid = $("#gvTADADetails").data("tGrid");
        var $exportToPdf = $('#exportDailyTADAtoCsv');
        var href = $exportToPdf.attr("href");

        href = href.replace(/page=([^&]*)/, 'page=' + grid.currentPage);
        href = href.replace(/groupby=([^&]*)/, 'groupby=' + (grid.groupBy || '~'));
        href = href.replace(/orderby=([^&]*)/, 'orderby=' + (grid.orderBy || '~'));
        href = href.replace(/filter=([^&]*)/, 'filter=' + (grid.filterBy || '~'));
        href = href.replace(/TADAEntryMonth=([^&]*)/, 'TADAEntryMonth=' + (TADAEntryMonth || '~'));
        href = href.replace(/employeeID=([^&]*)/, 'employeeID=' + (employeeID || '~'));

        $exportToPdf.attr("href", href);

        return true;

    }

    function ClearAllControl() {
        $("#DailyTADAEntrySave")[0].reset();
        $('#EditEmployee').val("");

        $("#gvTADADetails").data().tGrid.total = 0;
        $("#gvTADADetails").data().tGrid.dataBind([]);
    }

    function RSFMenu(goFor) {
        window.location.replace(Helper.Menu("../../", goFor));
        return false;
    }
</script>
