<script type="text/javascript">

    var firstTime = true;

    function onDataBindingSubLedger(e) {
        if (firstTime) {
            e.preventDefault();
            firstTime = false;
        }
    }

    function onErrorSubLedger(e) {
        e.preventDefault();
    }


</script>

@{
    ViewBag.Title = "Payment Voucher";
    Layout = "~/Areas/Financial/Views/Shared/_AccountingLayout.cshtml";

    if (false)
    {
    <script src="../../../../Scripts/jquery-1.5.1.min.js" type="text/javascript"></script>
    <script src="../../../../Scripts/RASolarCustomFunction.js" type="text/javascript"></script>    
    }
}
@section TopMenu
{
    @Html.Partial((String)ViewBag.TopMenu)
}
@section LoginInfo
{
    <table cellpadding="0" cellspacing="0" border="0" style="text-align: right;" width="100%">
        <tr>
            <td style="width: 20%" align="left">
                @ViewBag.ZoneTitle&nbsp;@ViewBag.ZoneName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.RegionTitle&nbsp;@ViewBag.RegionName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.UnitTitle&nbsp;@ViewBag.UnitName
            </td>
            <td style="width: 40%" align="left">&nbsp;
            </td>
        </tr>
    </table>
}

<form id="paymentVoucherForm" method="post" action="AccountVoucher/SaveVoucher">
    <input id="hfSelectedOtherAccountNumber" type="hidden" />
    <input id="hfSearchOrTransferLocation" type="hidden" value="" />
    <input id="hfSearchLocationCode" type="hidden" value="" />
    <input id="hfResponsiblePersonEmployeeId" type="hidden" value="" />
    <input id="hfTransactionNo" type="hidden" value="" />
    <input id="hfRowNumberForEdit" type="hidden" value="" />
    <input id="hfDimensionValues" type="hidden" value="" />
    <input id="hfDimensionValuesCashBankAccount" type="hidden" value="" />

    <table cellpadding="0" cellspacing="0" border="0" width="100%" id="">
        <tr>
            <td>
                <fieldset>
                    <legend>General Journals - Cash/Bank Voucher</legend>
                    <table cellpadding="0" cellspacing="0" border="0" width="100%" id="">
                        <tr>
                            <td style="width: 33%;" valign="top">
                                <table cellpadding="0" cellspacing="0" border="0" width="100%" id="">
                                    <tr>
                                        <td align="left" class="VoucherTitleWide">Transaction Date:
                                        </td>
                                        <td align="left" class="VoucherInputField">
                                            @(Html.Telerik().DatePicker()
                                          .Name("txtTransactionDate")
                                          .Max(new DateTime(2999, 12, 31))
                                          .Format("dd-MMM-yyyy")
                                        )
                                        </td>
                                    </tr>
                                </table>
                            </td>
                            <td style="width: 33%;" valign="top">
                                <table cellpadding="0" cellspacing="0" border="0" width="100%" id="">
                                    <tr>
                                        <td align="left" class="VoucherTitleWide">Project
                                        </td>
                                        <td align="left" class="VoucherInputField">
                                            @Html.DropDownList("ddlProject", new SelectList(ViewBag.Project, "ProjectCode", "ProjectName", "100200"), "--Select--", new { @class = "VoucherDropDown" })
                                        </td>
                                    </tr>
                                </table>
                            </td>
                            <td style="width: 33%;" valign="top">
                                <table cellpadding="0" cellspacing="0" border="0" width="100%" id="">
                                    <tr>
                                        <td align="left" class="VoucherTitleWide">Transaction No
                                        </td>
                                        <td align="left" class="VoucherInputField">
                                            @Html.TextBox("txtTransactionNo", (string)ViewBag.VoucherTransactionNumber, new { @class = "VoucherTextBox", @readonly = true })
                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </td>
        </tr>

        <tr>
            <td>
                <fieldset>
                    <legend>Cash/Bank Information</legend>
                    <table cellpadding="0" cellspacing="2" border="0" width="100%" id="">
                        <tr>
                            <td style="width: 66%;" valign="top">
                                <table cellpadding="0" cellspacing="2" border="0" width="100%" id="">
                                    <tr>
                                        <td align="left" class="VoucherTitleWide">Cash/Bank Account
                                        </td>
                                        <td align="left">
                                            @Html.DropDownList("ddlCashOrBankAccount", new SelectList(ViewBag.AccountInfo, "AccountNo", "AccountName", ""), "--Select--", new { @class = "VoucherDropDown" })
                                            @Html.DropDownList("ddlCashOrBankAccountDimension", Enumerable.Empty<SelectListItem>(), "--Select--", new { @class = "VoucherDropDown" })
                                            @Html.DropDownList("ddlCashOrBankAccountForDimension", new SelectList(ViewBag.AccountInfo, "AccountNo", "DimensionCode", ""), "--Select--", new { @class = "VoucherDropDown", @style = "display:none;" })
                                        </td>
                                    </tr>
                                    <tr>
                                        <td align="left" class="VoucherTitleWide">Amount:
                                        </td>
                                        <td align="left">
                                            @Html.TextBox("txtBankAmount", "", new { @class = "VoucherTextBox" })
                                        </td>
                                    </tr>
                                    <tr>
                                        <td align="left" class="VoucherTitleWide">Particulars:
                                        </td>
                                        <td align="left">
                                            @Html.TextBox("txtBankParticulars", "", new { @class = "VoucherTextBoxBig", maxlength = 100 })
                                        </td>
                                    </tr>
                                </table>
                            </td>
                            <td style="width: 33%;" valign="top">
                                <table cellpadding="0" cellspacing="2" border="0" width="100%" id="">
                                    <tr>
                                        <td colspan="2" align="right">Credit&nbsp;@Html.RadioButton("radioCr", "CR", true)
                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </td>
        </tr>
        <tr>
            <td>
                <fieldset>
                    <table cellpadding="0" cellspacing="2" border="0" width="100%" id="">
                        <tr>
                            <td style="width: 66%;" valign="top">
                                <table cellpadding="0" cellspacing="2" border="0" width="100%" id="">
                                    <tr>
                                        <td align="left" class="VoucherTitleWide">Other Account
                                        </td>
                                        <td align="left">
                                            @Html.TextBox("txtOtherAccount", "", new { @class = "VoucherTextBoxBig", @readonly = true })
                                            @(Html.Telerik().Window().Name("dialogOtherAccountSelection")
                                          .Title("Select other account")
                                          .ClientEvents(events => events.OnClose("ClosedialogOtherAccountSelection"))
                                          .Draggable(false)
                                          .Resizable(resizing => resizing.Enabled(false)
                                                                         .MinHeight(500)
                                                                         .MinWidth(500)
                                                                         .MaxHeight(500)
                                                                         .MaxWidth(550)
                                                                         )
                                          .Modal(true)
                                          .Buttons(b => b.Close())
                                          .Content(@<p id="LoadOtherAccountSelectionWindow" style="height: 400px; width: 550px; padding: 0; margin: 0;">
                                          </p>
                                          )
                                          .Visible(false)
                                     )
                                        </td>
                                    </tr>
                                    <tr>
                                        <td align="left" class="VoucherTitleWide">Amount:
                                        </td>
                                        <td align="left">
                                            @Html.TextBox("txtOtherAmount", "", new { @class = "VoucherTextBox" })
                                            @Html.Partial("SubLedgerAccount")
                                        </td>
                                    </tr>
                                    <tr>
                                        <td align="left" class="VoucherTitleWide">Particulars:
                                        </td>
                                        <td align="left">
                                            @Html.TextBox("txtOtherParticulars", "", new { @class = "VoucherTextBoxBig", maxlength = 100 })
                                        </td>
                                    </tr>
                                </table>
                            </td>
                            <td style="width: 33%;" valign="top">
                                <table cellpadding="0" cellspacing="2" border="0" width="100%" id="">
                                    <tr>
                                        <td colspan="2" align="right">Debit&nbsp;@Html.RadioButton("radioDr", "DR", true)
                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </td>
        </tr>
        @Html.Partial("VoucherDetails")
        <tr>
            <td align="left">
                <input type="submit" value="Save" id="btnPaymentVoucherSave" />
            </td>
        </tr>
    </table>
</form>

<script type="text/javascript">

    var voucherOtherAccountSubLedger = new Array();
    var editLedgerSubHeads = new Array();
    var remainingSubHeads = new Array();

    $('#btnEdit').attr("disabled", true);

    function ClosedialogOtherAccountSelection(e) {

        $('#hfSelectedOtherAccountNumber').val($('#hfAccountNumber').val());
        $('#txtOtherAccount').val($('#hfAccountName').val());
        $('#hfDimensionValues').val($('#hfAccountDimensionValues').val());

        $('#hfAccountDimensionValues').val("");

        if ($('#hfDimensionValues').val() == "&nbsp;" || $('#hfDimensionValues').val() == "") {
            $('#btnSubLedger').attr("disabled", true);
            $("#txtOtherAmount").attr("disabled", false);
            $('#btnSubLedger').attr("class", '');
            $('#hfAccountDimensionValues').val("");
           //$("#hfDimensionValuesCashBankAccount").val(""); Stop By Md.Sultan Mahmud for Credit Update dimensionValue 
            
        }
        else {
            $("#txtOtherAmount").attr("disabled", true);
            $('#btnSubLedger').attr("disabled", false);
            $('#btnSubLedger').attr("class", 't-button');
        }

        $('#LoadOtherAccountSelectionWindow').html('');
    }

    function ClosingOtherAccountSubledgerDilaogNCalculateSum(e) {
    }

    function CloseOtherAccountSubLedgerWindow() {
        $("#txtOtherAmount").val($("#TotalDimensionAmount").text());

        var detailWindow = $("#dialogOtherAccountSubLedgerHead").data("tWindow");
        detailWindow.center().close();
    }

    function LoadOtherAccountDialog() {

        $.ajax({
            type: 'GET',
            url: '@Url.Action("OtherAccountSelectionPartial", "AccountVoucher")',
            data: { projectCode: $("#ddlProject").val() },
            dataType: 'html',
            cache: false,
            success: function (data) {
                $('#LoadOtherAccountSelectionWindow').html(data);
            },
            error: function () {
                Helper.AlertMessage("", "Connection Failed. Please Try Again");
            }
        });

        var detailWindow = $("#dialogOtherAccountSelection").data("tWindow");
        detailWindow.center().open();
    }

    $(document).ready(function () {

        $("#ddlCashOrBankAccount").change(function () {

            var cashBankAccount = $(this).val();
            $("#ddlCashOrBankAccountForDimension").val(cashBankAccount);

            var dimensionCode = $.trim($("#ddlCashOrBankAccountForDimension option:selected").text());

            if (dimensionCode != "") {

                $("#hfDimensionValuesCashBankAccount").val(dimensionCode);

                $("#ddlCashOrBankAccountDimension").get(0).options.length = 0;
                $("#ddlCashOrBankAccountDimension").get(0).options[0] = new Option('--Select--', "");

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("AccountWiseSubledgerHead", "AccountVoucher")',
                    data: { dimensionCode: dimensionCode },
                    cache: false,
                    success: function (data) {

                        $.map(data, function (item) {
                            $("#ddlCashOrBankAccountDimension").get(0).options[$("#ddlCashOrBankAccountDimension").get(0).options.length] = new Option(item.DimensionValueDesc, item.DimensionValueID);
                        });
                    },
                    error: function () { }
                });
            }
            else {
                $("#ddlCashOrBankAccountDimension").get(0).options.length = 0;
                $("#ddlCashOrBankAccountDimension").get(0).options[0] = new Option('--Select--', "");
            }
        });

        $('#txtOtherAccount').click(function () {
            $('#txtOtherAmount').val("");
            LoadOtherAccountDialog();            
        });

        $('#txtBankAmount').change(function () {

            if (Helper.IsDecimal2FloatPoint($('#txtBankAmount').val()) == false) {
                Helper.AlertMessage("", "Cash Bank Amount Cannot Be Negative/Character");
                $('#txtBankAmount').val("0");
                return false;
            }

            if ($('#txtBankAmount').val() == "")
                $('#totalCrAmount').text("0");
            else
                $('#totalCrAmount').text($('#txtBankAmount').val());
        });

        $('#txtOtherAmount').change(function () {

            if (Helper.IsDecimal2FloatPoint($('#txtOtherAmount').val()) == false) {
                Helper.AlertMessage("", "Other Amount Cannot Be Negative/Character");
                $('#txtOtherAmount').val("0");
                return false;
            }
        });

        $('#btnAdd').click(function () {

            if ($('#txtOtherAccount').val() == '') {
                Helper.AlertMessage("", 'Please insert Other Account.');
                return false;
            }
            else if ($('#txtOtherAmount').val() == '' || $('#txtOtherAmount').val() == '0') {
                Helper.AlertMessage("", 'Please insert Amount.');
                return false;
            }
            else if ($('#txtOtherParticulars').val() == '') {
                Helper.AlertMessage("", 'Please insert Particulars.');
                return false;
            }

            var otherAccount = $('#hfSelectedOtherAccountNumber').val();
            var otherAccountName = $('#txtOtherAccount').val();
            var otherParticulars = $('#txtOtherParticulars').val();
            var otherAmount = $('#txtOtherAmount').val();
            var dimensionCode = $('#hfDimensionValues').val();

            if ($("#gvVoucherDetails table > tbody tr").hasClass("t-no-data")) {
                $("#gvVoucherDetails table > tbody tr.t-no-data").remove();
            }

            var lastGridRow = $("#gvVoucherDetails tbody tr:last");
            var gridItems = $("#gvVoucherDetails tbody");
            var lastIsAlternateRow = lastGridRow.hasClass("t-alt");

            var editAnchor = "<a href=\"javascript:void(0)\" class=\"editVoucher\">Edit</a>";
            var deleteAnchor = "<a href=\"javascript:void(0)\" class=\"deleteVoucher\">Delete</a>";

            var rowClass = "";
            if (!lastIsAlternateRow)
                rowClass = "t-alt";

            gridItems.append("<tr class='" + rowClass + "'> " +
                             "<td>" + otherAccount + "</td>" +
                             "<td>" + otherAccountName + "</td>" +
                             "<td>" + otherParticulars + "</td>" +
                             "<td class=\"TdAlignRight\">" + otherAmount + "</td>" +
                             "<td class=\"TdAlignRight\">" + "" + "</td>" +
                             "<td class=\"TdDisplayNone\">" + $('#radioDr').val() + "</td>" +
                             "<td class=\"TdDisplayNone\">" + dimensionCode + "</td>" +
                             "<td>" + editAnchor + "</td>" +
                             "<td>" + deleteAnchor + "</td>" +
                             " </tr>");

            TotalCrDrCalculation();
            OtherAccountSubLedgerListCreate();

            $('#btnSubLedger').attr("disabled", false);
            $("#txtOtherAmount").attr("disabled", false);
            $('#btnSubLedger').attr("class", 't-button');
            $('#txtOtherAccount').val("");
            $('#txtOtherAmount').val("");
            $('#txtOtherParticulars').val("");
            $('#hfDimensionValues').val("");
        });

        $('#btnEdit').click(function () {

            if ($("#hfRowNumberForEdit").val() == "") {
                Helper.AlertMessage("", "No Data Found For Edit");
                return false;
            }

            if ($('#txtOtherAccount').val() == '') {
                Helper.AlertMessage("", 'Please insert Other Account.');
                return false;
            }
            else if ($('#txtOtherAmount').val() == '') {
                Helper.AlertMessage("", 'Please insert Amount.');
                return false;
            }
            else if ($('#txtOtherParticulars').val() == '') {
                Helper.AlertMessage("", 'Please insert Particulars.');
                return false;
            }

            var drOrCr = "", drAmount = "", crAmount = "";
            if ($('#radioDr').is(":checked") == true) {
                drOrCr = $('#radioDr').val();
                drAmount = $('#txtOtherAmount').val();
            }
            //            else if ($('#radioCr').is(":checked") == true) {
            //                drOrCr = $('#radioCr').val();
            //                crAmount = $('#txtOtherAmount').val();
            //            }

            if (drOrCr == "") {
                Helper.AlertMessage("", "Please Select Debit/Credit");
                return false;
            }

            var otherAccount = $('#hfSelectedOtherAccountNumber').val();
            var otherAccountName = $('#txtOtherAccount').val();
            var otherParticulars = $('#txtOtherParticulars').val();

            var rowNumner = parseInt($("#hfRowNumberForEdit").val());

            var tr = $("#gvVoucherDetails table tbody tr:eq(" + rowNumner + ")");

            $(tr).find("td:eq(0)").text(otherAccount);
            $(tr).find("td:eq(1)").text(otherAccountName);
            $(tr).find("td:eq(2)").text(otherParticulars);
            $(tr).find("td:eq(3)").text(drAmount);
            $(tr).find("td:eq(4)").text(crAmount);
            $(tr).find("td:eq(5)").text(drOrCr);

            TotalCrDrCalculation();

            if ($('#hfDimensionValues').val() != "") {
                voucherOtherAccountSubLedger = remainingSubHeads;
                OtherAccountSubLedgerListCreate();
                editLedgerSubHeads = [];
                remainingSubHeads = [];
            }

            $("#txtOtherAmount").attr("disabled", false);
            $("#gvOtherAccountSubLedgerHeadDetails > .t-grid-content tbody").html("");

            $('#hfDimensionValues').val("");
            $("#hfRowNumberForEdit").val("");
            $('#txtOtherAccount').val("");
            $('#txtOtherAmount').val("");
            $('#txtOtherParticulars').val("");

            $('#btnEdit').attr("disabled", true);
            $('#btnAdd').attr("disabled", false);
            $('#btnSubLedger').attr("disabled", false);
            $("#txtOtherAmount").attr("disabled", false);
            $('#btnSubLedger').attr("class", 't-button');
        });

        $("#btnCancel").click(function () {

            $("#hfRowNumberForEdit").val("");
            $('#txtOtherAccount').val("");
            $('#txtOtherAmount').val("");
            $('#txtOtherParticulars').val("");

            $('#btnEdit').attr("disabled", true);
            $('#btnAdd').attr("disabled", false);

            $("#gvOtherAccountSubLedgerHeadDetails > .t-grid-content tbody").html("");
            $('#hfDimensionValues').val("");
            $('#btnSubLedger').attr("disabled", false);
            $("#txtOtherAmount").attr("disabled", false);
            $('#btnSubLedger').attr("class", 't-button');

            editLedgerSubHeads = [];
            remainingSubHeads = [];
        });

        $("#btnSubLedger").click(function () {

            $("#txtOtherAmount").val("");

            var dimensionValue = $.trim($('#hfDimensionValues').val());

            if (dimensionValue != "") {

                $("#txtOtherAmount").attr("disabled", true);

                var param = {
                    dimensionCode: dimensionValue
                };

                var grid = $("#gvOtherAccountSubLedgerHeadDetails").data("tGrid");
                grid.dataSource._data = [];
                grid.ajaxRequest(param);

                var detailWindow = $("#dialogOtherAccountSubLedgerHead").data("tWindow");
                detailWindow.center().open();
            }
        });

        $("#gvVoucherDetails").delegate("a.editVoucher", "click", function () {

            var tr = $(this).parent().parent();
            var indexNumber = $(this).parent().parent().index();

            $("#hfRowNumberForEdit").val(indexNumber);

            var accountNumber = $(tr).find("td:eq(0)").text();
            var accountName = $(tr).find("td:eq(1)").text();
            var particulars = $(tr).find("td:eq(2)").text();
            var dimensionCode = $.trim($(tr).find("td:eq(6)").text());

            var drOrCrAmount = "";
            var drOrCr = $(tr).find("td:eq(5)").text();

            if ($.trim(drOrCr) == "DR") {
                drOrCrAmount = $(tr).find("td:eq(3)").text();
                $('#radioDr').attr("checked", true);
            }
            //            else if ($.trim(drOrCr) == "CR") {
            //                drOrCrAmount = $(tr).find("td:eq(4)").text();
            //                $('#radioCr').attr("checked", true);
            //            }

            $('#hfSelectedOtherAccountNumber').val(accountNumber);
            $('#hfDimensionValues').val(dimensionCode);
            $('#txtOtherAccount').val(accountName);
            $('#txtOtherAmount').val(drOrCrAmount);
            $('#txtOtherParticulars').val(particulars);

            if (dimensionCode != "") {
                editLedgerSubHeads = [];
                remainingSubHeads = [];
                SubledgerHeadOfOtherAccountEdit();
                $("#txtOtherAmount").attr("disabled", true);
            }
            else { $("#txtOtherAmount").attr("disabled", false); }

            $('#btnSubLedger').attr("disabled", true);
            $('#btnSubLedger').attr("class", '');

            $('#btnEdit').attr("disabled", false);
            $('#btnAdd').attr("disabled", true);
        });

        $("#gvVoucherDetails").delegate("a.deleteVoucher", "click", function () {

            var parentAccount = $(this).parent().parent().find("td:eq(0)").text()

            var len = voucherOtherAccountSubLedger.length, i = 0;
            for (i = 0; i < len; i++) {
                if (voucherOtherAccountSubLedger[i].ParentAccount == parentAccount) {
                    editLedgerSubHeads.push(voucherOtherAccountSubLedger[i]);
                }
                else {
                    remainingSubHeads.push(voucherOtherAccountSubLedger[i]);
                }
            }
            voucherOtherAccountSubLedger = remainingSubHeads;
            editLedgerSubHeads = [];
            remainingSubHeads = [];

            $(this).parent().parent().remove();
            TotalCrDrCalculation();
        });

        $("#paymentVoucherForm").submit(function () {

            if (FormValidationCheck() == false) {
                return false;
            }

            var transactionNo = $("#txtTransactionNo").val()
            var transactionDate = $('#txtTransactionDate').val();
            var projectCode = $('#ddlProject').val();
            var cashOrBankAccount = $('#ddlCashOrBankAccount').val();
            var bankAmount = $('#txtBankAmount').val();
            var bankParticulars = $('#txtBankParticulars').val();

            var otherAccount = $('#txtOtherAccount').val();
            var otherAmount = $('#txtOtherAmount').val();
            var otherParticulars = $('#txtOtherParticulars').val();
            var generalParticulars = $('#txtGeneralParticulars').val();

            var cashBankDimensionValueId = $("#ddlCashOrBankAccountDimension").val();
            var cashBankDimensionCode = $.trim($("#hfDimensionValuesCashBankAccount").val());

            var transactionDR = "", transactionCR = "";

            if ($("#radioCr").is(":checked") == true) {
                transactionCR = $("#radioCr").val();
            }

            if ($("#radioDr").is(":checked") == true) {
                transactionDR = $("#radioDr").val();
            }

            var objCashBankVoucher = {

                TransactionNo: transactionNo,
                ProjectCode: projectCode,
                TransactionDate: transactionDate,
                GeneralParticulars: generalParticulars
            };

            var lstOtherVoucher = new Array();

            lstOtherVoucher.push({

                TransactionNo: transactionNo,
                AccountNo: cashOrBankAccount,
                Particulars: bankParticulars,
                Amount: bankAmount,
                ProjectCode: projectCode,
                TransactionDate: transactionDate,
                TransactionType: transactionCR,
                DimensionCode: ""
            });

            $("#gvVoucherDetails table > tbody tr").each(function () {

                lstOtherVoucher.push({

                    TransactionNo: transactionNo,
                    AccountNo: $(this).find("td:eq(0)").text(),
                    Particulars: $(this).find("td:eq(2)").text(),
                    Amount: $(this).find("td:eq(3)").text(),
                    ProjectCode: projectCode,
                    TransactionDate: transactionDate,
                    TransactionType: $(this).find("td:eq(5)").text(),
                    DimensionCode: $(this).find("td:eq(6)").text()
                });

            });

            var subLedgerHeadDetailsList = new Array();

            if (cashBankDimensionCode != "") {

                subLedgerHeadDetailsList.push({
                    DimensionValueID: cashBankDimensionValueId,
                    DimensionValueDesc: "",
                    DimensionAmount: bankAmount,
                    AccountNo: cashOrBankAccount,
                    DimensionCode: cashBankDimensionCode,
                    TransactionType: transactionCR
                });
            }
            var dimensionValue = "", subledgerLength = voucherOtherAccountSubLedger.length, i = 0;

            if (subledgerLength > 0) {

                for (i = 0; i < subledgerLength; i++) {

                    if (voucherOtherAccountSubLedger[i].DimensionValue != "") {
                        subLedgerHeadDetailsList.push({
                            DimensionValueID: voucherOtherAccountSubLedger[i].DimensionAccount,
                            DimensionValueDesc: voucherOtherAccountSubLedger[i].DimensionName,
                            DimensionAmount: voucherOtherAccountSubLedger[i].DimensionValue,
                            AccountNo: voucherOtherAccountSubLedger[i].ParentAccount,
                            DimensionCode: voucherOtherAccountSubLedger[i].OriginDimensionAccount,
                            TransactionType: transactionDR
                        });
                    }
                }
            }

            $.ajax({

                type: "POST",
                url: '@Url.Action("SaveVoucher", "AccountVoucher")',
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({ objCashBankVoucher: objCashBankVoucher, lstOtherVoucher: lstOtherVoucher, voucherType: "P", lstSubLedgerHeadDetails: subLedgerHeadDetailsList }),
                cache: false,
                success: function (data) {
                    if (data[0].messageCode == "success") {
                        Helper.AlertMessage("", data[0].message);
                        $('#hfTransactionNo').val(data[0].id);
                        ClearAllControl();
                    }
                    else {
                        Helper.AlertMessage("", data[0].message);
                    }
                },
                error: function () {

                }
            });

            return false;
        });
    });

    function TotalCrDrCalculation() {

        var totalDr = 0;
        var totalCr = 0;
        $('#gvVoucherDetails table > tbody tr').each(function () {
            var DrAmount = $(this).find('td:eq(3)').text().trim();
            var CrAmount = $(this).find('td:eq(4)').text().trim();

            if (DrAmount == '')
                DrAmount = 0;

            if (CrAmount == '')
                CrAmount = 0;

            totalDr = totalDr + parseFloat(DrAmount);
            //totalCr = totalCr + parseFloat(CrAmount);
        });

        $('#totalDrAmount').html(totalDr);
        //$('#totalCrAmount').html(totalCr);
    }

    function FormValidationCheck() {

        if ($('#txtTransactionDate').val() == '') {
            Helper.AlertMessage("", 'Please insert Transaction Date.');
            return false;
        }
        else if ($('#ddlProject').val() == '') {
            Helper.AlertMessage("", 'Please select Project value.');
            return false;
        }
        else if ($('#ddlCashOrBankAccount').val() == '') {
            Helper.AlertMessage("", 'Please select Cash/Bank Account.');
            return false;
        }
        else if ($('#txtBankAmount').val() == '') {
            Helper.AlertMessage("", 'Please insert Bank Amount.');
            return false;
        }
        else if ($('#txtBankParticulars').val() == '') {
            Helper.AlertMessage("", 'Please insert Bank Particulars.');
            return false;
        }
        else if ($('#gvVoucherDetails table > tbody tr').length == 0 || $("#gvVoucherDetails table > tbody tr").hasClass("t-no-data")) {
            Helper.AlertMessage("", 'Please add other account information.');
            return false;
        }
        else if ($('#txtGeneralParticulars').val() == '') {
            Helper.AlertMessage("", 'Please insert General Particulars.');
            return false;
        }
        else if (parseFloat($('#totalCrAmount').text()) != parseFloat($('#totalDrAmount').text())) {
            Helper.AlertMessage("", 'Total Dr Amount and total Cr amount must be same.');
            return false;
        }

        var cashBankDimensionValueId = $("#ddlCashOrBankAccountDimension").val();
        var cashBankDimensionCode = $.trim($("#hfDimensionValuesCashBankAccount").val());

        if (cashBankDimensionCode != "") {
            if (cashBankDimensionValueId == "") {
                Helper.AlertMessage("", "Please Select Bank Account Number");
                return false;
            }
        }

        if (!confirm('Are You Sure to Save this Payment Voucher.')) {
            return false;
        }

        return true;
    }

    function CheckAmount(amount) {
        var previousAmount = 0;

        if (!Helper.IsDecimal2FloatPoint(amount)) {
            Helper.AlertMessage("", "Negative Value Does Not Allow");
        }

        $("#TotalDimensionAmount").text(CalculateTotalSubledger());
    }

    function CalculateTotalSubledger() {

        var value = "", total = 0;
        $("#gvOtherAccountSubLedgerHeadDetails > .t-grid-content  tbody  tr").each(function () {
            value = $.trim($(this).find("td:eq(2)").find("input").val());

            if (value != "" && Helper.IsDecimal2FloatPoint(value)) {
                total += parseFloat(value);
            }
        });

        return total;
    }

    function OtherAccountSubLedgerListCreate() {

        var dimensionAccount = "", dimensionName = "", dimensionValue = "", originDimensionAccoutn = "", parentAccount = "";

        originDimensionAccoutn = $('#hfDimensionValues').val();
        parentAccount = $('#hfSelectedOtherAccountNumber').val();

        $("#gvOtherAccountSubLedgerHeadDetails > .t-grid-content  tbody  tr").each(function () {

            dimensionAccount = $(this).find("td:eq(0)").text();
            dimensionName = $(this).find("td:eq(1)").text();
            dimensionValue = $.trim($(this).find("td:eq(2)").find("input").val());

            voucherOtherAccountSubLedger.push({
                ParentAccount: parentAccount,
                OriginDimensionAccount: originDimensionAccoutn,
                DimensionAccount: dimensionAccount,
                DimensionName: dimensionName,
                DimensionValue: dimensionValue
            });
        });

        $("#gvOtherAccountSubLedgerHeadDetails > .t-grid-content tbody").html("");
    }

    function SubledgerHeadOfOtherAccountEdit() {

        $("#gvOtherAccountSubLedgerHeadDetails > .t-grid-content tbody").html("");

        if ($("#gvOtherAccountSubLedgerHeadDetails > .t-grid-content  tbody tr").hasClass("t-no-data")) {
            $("#gvOtherAccountSubLedgerHeadDetails > .t-grid-content  tbody tr.t-no-data").remove();
        }

        var gridItems = $("#gvOtherAccountSubLedgerHeadDetails > .t-grid-content  tbody");
        var rowClass = "t-alt", tdClassLast = "t-last";

        var parentAccount = $('#hfSelectedOtherAccountNumber').val();

        var len = voucherOtherAccountSubLedger.length, i = 0;
        for (i = 0; i < len; i++) {
            if (voucherOtherAccountSubLedger[i].ParentAccount == parentAccount) {
                editLedgerSubHeads.push(voucherOtherAccountSubLedger[i]);
            }
            else {
                remainingSubHeads.push(voucherOtherAccountSubLedger[i]);
            }
        }

        for (i = 0; i < editLedgerSubHeads.length; i++) {

            gridItems.append("<tr class='" + ((i % 2 == 0) ? rowClass : "") + "'> " +
                             "<td class=\"TdDisplayNone\" >" + editLedgerSubHeads[i].OriginDimensionAccount + "</td>" +
                             "<td>" + editLedgerSubHeads[i].DimensionName + "</td>" +
                             "<td class = \"'" + tdClassLast + "'\">" + "<input type=\"text\" onblur=\"CheckAmount(this.value)\" style=\"width:115px;\" id=\"dimensionValue" + editLedgerSubHeads[i].DimensionAccount + "\" value = \"" + editLedgerSubHeads[i].DimensionValue + "\" />" + "</td>" +
                             " </tr>");
        }

        var detailWindow = $("#dialogOtherAccountSubLedgerHead").data("tWindow");
        detailWindow.center().open();
    }

    function ClearAllControl() {

        $('#paymentVoucherForm')[0].reset();

        $('#hfSelectedOtherAccountNumber').val("");
        $('#hfSearchOrTransferLocation').val("");
        $('#hfSearchLocationCode').val("");
        $('#hfResponsiblePersonEmployeeId').val("");

        $('#totalDrAmount').text("");
        $('#totalCrAmount').text("");

        $('#gvVoucherDetails').data().tGrid.total = 0;
        $('#gvVoucherDetails').data().tGrid.dataBind([]);

        $('#txtTransactionNo').val($('#hfTransactionNo').val());

        $("#hfDimensionValuesCashBankAccount").val("");
        $("#ddlCashOrBankAccountDimension").val("");
        $("#ddlCashOrBankAccountForDimension").val("");

        voucherOtherAccountSubLedger = [];
        editLedgerSubHeads = [];
        remainingSubHeads = [];
    }

    function RSFMenu(goFor) {
        window.location.replace(Helper.Menu("../../", goFor));
        return false;
    }

</script>
