<script type="text/javascript">
    var firstTime = true;
    function onDataBinding(e) {
        if (firstTime) {
            e.preventDefault();
            firstTime = false;
        }
        else {
            e.data = {
                fromDate: $('#txtStartDate').val(),
                toDate: $('#txtEndDate').val(),
                projectCode: $('#ddlProject').val()
            };
        }
    }

    function onError(e) {
        e.preventDefault();
    }

</script>
@{
    ViewBag.Title = "Income Statement";
    Layout = "~/Areas/Financial/Views/Shared/_AccountingLayout.cshtml";

    if (false)
    {
    <script src="../../../../Scripts/jquery-1.5.1.min.js" type="text/javascript"></script>
    }
}
@section TopMenu
{
    @Html.Partial((String)ViewBag.TopMenu)
}
@section LoginInfo
{
    <table cellpadding="0" cellspacing="0" border="0" style="text-align: right;" width="100%">
        <tr>
            <td style="width: 20%" align="left">
                @ViewBag.ZoneTitle&nbsp; @ViewBag.ZoneName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.RegionTitle&nbsp; @ViewBag.RegionName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.UnitTitle&nbsp; @ViewBag.UnitName
            </td>
            <td style="width: 40%" align="left">
                @ViewBag.OpenMonthYear
            </td>
        </tr>
    </table>
}
<table cellpadding="0" cellspacing="0" border="0" width="100%">
    <tr>
        <td align="left" style="width: 33%;" valign="top">
            <table cellpadding="0" cellspacing="2" border="0" width="100%">
                <tr>
                    <td align="left" class="IsrlLeftColumn">Starting Date
                    </td>
                    <td align="left">
                        @(Html.Telerik().DatePicker()
                        .Name("txtStartDate")
                        .Max(new DateTime(2999, 12, 31))
                        .Format("dd-MMM-yyyy")
                        )
                    </td>
                </tr>
            </table>
        </td>
        <td align="left" style="width: 33%;" valign="top">
            <table cellpadding="0" cellspacing="2" border="0" width="100%">
                <tr>
                    <td align="left" class="IsrlLeftColumn">End Date
                    </td>
                    <td align="left">
                        @(Html.Telerik().DatePicker()
                         .Name("txtEndDate")
                         .Max(new DateTime(2999, 12, 31))
                         .Format("dd-MMM-yyyy")
                         )
                    </td>
                </tr>
            </table>
        </td>
        <td align="left" style="width: 33%;" valign="top">
            <table cellpadding="0" cellspacing="2" border="0" width="100%">
                <tr>
                    <td align="left" class="IsrlLeftColumn">Project
                    </td>
                    <td align="left">
                        @Html.DropDownList("ddlProject", new SelectList((System.Collections.ArrayList)TempData["Projects"], "Value", "Display", "0"), new { @class = "IsrlDropDown" })
                    </td>
                </tr>
                <tr>
                    <td align="right" colspan="3">
                        <input type="submit" id="btnShowTrialBalance" value="Show" />
                    </td>
                </tr>
            </table>
        </td>
    </tr>
    <tr>
        <td colspan="3">
            @(Html.Telerik().Grid<RASolarERP.DomainModel.AMSModel.AccountIncomeStatement>()
              .Name("gvAccountIncomeStatement")
              .DataKeys(keys => keys.Add(k => k.AccountNo))
              .Columns(column =>
              {
                  column.Bound(i => i.AccountNo);
                  column.Bound(i => i.AccountName);
                  column.Bound(i => i.PeriodicAmount).HtmlAttributes(new { @class = "A. GridColumnRightAlign" }).Format("{0:0,0}");
                  column.Bound(i => i.PeriodicAmountPercentageOnRevenue).Title("% On Revenue").HtmlAttributes(new { @class = "A. GridColumnRightAlign" }).Format("{0:0}");
                  column.Bound(i => i.YearToDateAmount).Title("Cumulative").HtmlAttributes(new { @class = "A. GridColumnRightAlign" }).Format("{0:0,0}");
                  column.Bound(i => i.YearToDateAmountPercentageOnRevenue).Title("% On Revenue").HtmlAttributes(new { @class = "A. GridColumnRightAlign" }).Format("{0:0}");
              })
              .DataBinding(dbBindings => dbBindings.Ajax().Select("_IncomeStatementShow", "AccountingReport"))
              .ClientEvents(events =>
              {
                  events.OnDataBinding("onDataBinding");
                  events.OnError("onError");

              })
              .Scrollable(scroll => scroll.Height(400))
              .Pageable(pageSize => pageSize.PageSize(100))
              .ToolBar(commands =>
                {
                    commands.Custom().HtmlAttributes(new { id = "exportIncomeStatementToPdf", onclick = "return SetParamaterForPdfIncomeStatement();" }).Text("Export To PDF Income Statement").Action("ExportToPdfIncomeStatement", "AccountingReport", new { page = 1, groupby = "~", orderby = "~", filter = "~", fromDate = "~", toDate = "~", projectCode = "~", projectName = "~" });
                })
              )
        </td>
    </tr>
</table>
<script type="text/javascript">

    $(document).ready(function () {

        $('#btnShowTrialBalance').click(function () {

            var params = {
                fromDate: $('#txtStartDate').val(),
                toDate: $('#txtEndDate').val(),
                projectCode: $('#ddlProject').val()
            };

            var grid = $('#gvAccountIncomeStatement').data("tGrid");
            grid.dataSource._data = [];
            grid.ajaxRequest(params);

        });
    });


    function SetParamaterForPdfIncomeStatement() {

        var grid = $("#gvAccountIncomeStatement").data("tGrid");
        var $exportToPdf = $('#exportIncomeStatementToPdf');
        var href = $exportToPdf.attr("href");

        var fromDate = $('#txtStartDate').val();
        var toDate = $('#txtEndDate').val();
        var projectCode = $('#ddlProject').val();

        href = href.replace(/page=([^&]*)/, 'page=' + grid.currentPage);
        href = href.replace(/groupby=([^&]*)/, 'groupby=' + (grid.groupBy || '~'));
        href = href.replace(/orderby=([^&]*)/, 'orderby=' + (grid.orderBy || '~'));
        href = href.replace(/filter=([^&]*)/, 'filter=' + (grid.filterBy || '~'));

        href = href.replace(/fromDate=([^&]*)/, 'fromDate=' + $('#txtStartDate').val());
        href = href.replace(/toDate=([^&]*)/, 'toDate=' + $('#txtEndDate').val());
        href = href.replace(/projectCode=([^&]*)/, 'projectCode=' + $('#ddlProject').val());
        href = href.replace(/projectName=([^&]*)/, 'projectName=' + $('#ddlProject option:selected').text());
        

        $exportToPdf.attr("href", href);

        return true;
    }

    function RSFMenu(goFor) {
        window.location.replace(Helper.Menu("../../", goFor));
        return false;
    }

</script>
