@using RASolarERP.Model;
@{
    ViewBag.Title = "Day Open/Close";
    Layout = "~/Areas/Financial/Views/Shared/_AccountingLayout.cshtml";

    if (false)
    {
    <script src="../../../../Scripts/jquery-1.5.1.min.js" type="text/javascript"></script>
    <script src="../../../../Scripts/RASolarCustomFunction.js" type="text/javascript"></script>   
    }
}
@section TopMenu
{
    @Html.Partial((String)ViewBag.TopMenu)
}
@section LoginInfo
{
    <table cellpadding="0" cellspacing="1" border="0" style="text-align: right;" width="100%">
        <tr>
            <td style="width: 20%" align="left">
                @ViewBag.ZoneTitle&nbsp; @ViewBag.ZoneName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.RegionTitle&nbsp; @ViewBag.RegionName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.UnitTitle&nbsp; @ViewBag.UnitName
            </td>
            <td style="width: 40%" align="left">
                @ViewBag.OpenMonthYear
            </td>
        </tr>
    </table>
}
@{

    List<REPSummaryForTheDayClosingForSales> lstREPSummaryForTheDayClosingForSalesData = new List<REPSummaryForTheDayClosingForSales>();
    lstREPSummaryForTheDayClosingForSalesData = (List<REPSummaryForTheDayClosingForSales>)TempData["DayClosingForSales"];

    List<SummaryForTheDayClosingForCollectionInfo> lstSummaryForCollectionInfo = new List<SummaryForTheDayClosingForCollectionInfo>();
    lstSummaryForCollectionInfo = (List<SummaryForTheDayClosingForCollectionInfo>)TempData["DayClosingForCollection"];

    List<SummaryForTheDayClosingForAccountingInfo> lstSummaryAccountingInfo = new List<SummaryForTheDayClosingForAccountingInfo>();
    lstSummaryAccountingInfo = (List<SummaryForTheDayClosingForAccountingInfo>)TempData["DayClosingForAccounting"];
  
}
<input id="hfCheckSalesCheckBox" type="hidden" value="" />
<input id="hfCheckCollectionCheckBox" type="hidden" value="" />
<input id="hfCheckInventoryCheckBox" type="hidden" value="" />
<input id="hfCheckAccountingCheckBox" type="hidden" value="" />
<input id="hfLoginLocation" type="hidden" value="@ViewBag.Location" />

@{
    if (TempData["PeriodOpenClose"].ToString() == string.Empty)
    {
     <br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />
        <span style="font-size: 25px; color:Red;">Day Is Not Open</span>
    }
    else
    {   


    <form id="form1" action="SaveSummaryForTheDayClose" method="post">

        <table cellpadding="0" cellspacing="1" width="100%">
            <tr>
                <td align="left" width="15%">Day Open &nbsp;
                </td>
                <td align="left" style="background-color: #DBD7D9">
                    <span id="lblTransactionDate" style="font-size: medium">@(TempData["PeriodOpenClose"].ToString() != null ? TempData["PeriodOpenClose"].ToString() : "")</span>
                </td>
            </tr>
        </table>
        @{    
        string loginArea = ViewBag.Location;
    
        if (loginArea == "Unit")
        {
    

            <table width="100%" cellspacing="1" cellpadding="0">
                <tr>
                    <td colspan="5" class="IDCOLHeader" align="left">Sales
                    </td>
                </tr>
                <tr>
                    <td colspan="5" align="right">
                        <label for="CheckBoxSales">
                            <strong>All Entries are Completed </strong>
                        </label>
                        <input id="CheckBoxSales" name="CheckBox" type="checkbox" value="false" />
                        &nbsp;
                    </td>
                </tr>
                <tr>
                    <td colspan="3">
                        @(Html.Telerik().Grid(lstREPSummaryForTheDayClosingForSalesData)
                .Name("grvAccounting")
                .DataKeys(keys => keys.Add(k => k.Package))
                .Columns(column =>
                {
                    column.Bound(t => t.Package).Title("Package");
                    column.Bound(t => t.NumberOfSalesUptoYesterday).Title("Achievement Upto Yesterday");
                    column.Bound(t => t.NumberOfSalesToday).Title("Achievement Today");
                }).Selectable()
        )
                    </td>
                    <td>&nbsp;
                    </td>
                    <td>&nbsp;
                    </td>
                </tr>
                <tr>
                    <td>
                        <table width="100%" class="TableRowTableData" cellpadding="0" cellspacing="1">
                            <tr>
                                <td>&nbsp;
                                </td>
                                <td align="right">
                                    <strong>@Html.Label("lblAchievementUpToYesterDay", (string)ViewBag.AchievementUpToYesterday)</strong>
                                </td>
                                <td align="right">
                                    <strong>@Html.Label("lblAchievementToday", (string)ViewBag.AchievementToday)</strong>
                                </td>
                                <td align="right">
                                    <strong>@Html.Label("lblCurrentMonthTarget", @lstREPSummaryForTheDayClosingForSalesData[0].SalesTargetThisMonth.ToString())
                                    </strong>
                                </td>
                                <td align="right">
                                    <strong>@ViewBag.AchievementStatus% </strong>
                                </td>
                            </tr>
                            <tr>
                                <td>&nbsp;
                                </td>
                                <td align="right">
                                    <strong>&nbsp; Achievement Upto Yesterday</strong>
                                </td>
                                <td align="right">
                                    <strong>&nbsp; Achievement Today</strong>
                                </td>
                                <td align="right">
                                    <strong>&nbsp; Current Month Target </strong>
                                </td>
                                <td align="right">
                                    <strong>&nbsp; Achievement Status % </strong>
                                </td>
                            </tr>
                            <tr>
                                <td align="left">Number of System Return
                                </td>
                                <td align="right">
                                    @Html.Label("lblNoSystemReturn", Convert.ToDecimal(@lstREPSummaryForTheDayClosingForSalesData[0].SystemReturnThisMonth_Value).ToString("0."))
                                </td>
                                <td colspan="3">&nbsp;
                                </td>
                            </tr>
                            <tr>
                                <td align="left">System Return Value
                                </td>
                                <td align="right">
                                    @Html.Label("lblSystemReturn", Convert.ToDecimal(@lstREPSummaryForTheDayClosingForSalesData[0].SystemReturnThisMonth_Value).ToString("0."))
                                </td>
                                <td colspan="3">&nbsp;
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>
            </table>
            <table width="100%" class="TableRowTableData" cellspacing="1" cellpadding="0">
                <tr>
                    <td class="IDCOLHeader" align="left" colspan="5">
                        <strong>Collection</strong>
                    </td>
                </tr>
                <tr>
                    <td align="right" colspan="5">
                        <label for="CheckBoxCollection">
                            <strong>All Entries are Completed </strong>
                        </label>
                        <input id="CheckBoxCollection" name="CheckBox" type="checkbox" value="false" />
                        &nbsp;
                    </td>
                </tr>
                <tr>
                    <td align="left">
                        <strong>Collection</strong>
                    </td>
                    <td align="right">
                        <strong>Achievement Upto Today </strong>
                    </td>
                    <td align="right">
                        <strong>Current Month Target</strong>
                    </td>
                    <td align="right">
                        <strong>Achievement Status (%)</strong>
                    </td>
                </tr>
                <tr>
                    <td align="left">Current Collection
                    </td>
                    <td align="right">
                        @Html.Label("lblCurrentCollectionAchievementUptoToday", lstSummaryForCollectionInfo != null ? Convert.ToDecimal(lstSummaryForCollectionInfo[0].CurrentCollectionAchievementThisMonthUptoToday).ToString("0.") : "0")
                    </td>
                    <td align="right">
                        @Html.Label("lblCurrentCollectionTargetThisMonth", lstSummaryForCollectionInfo != null ? Convert.ToDecimal(lstSummaryForCollectionInfo[0].CurrentCollectionTargetThisMonth).ToString("0.") : "0")
                    </td>
                    <td align="right">
                        @ViewBag.CurrentCollectionAchievementStatus%
                    </td>
                </tr>
                <tr>
                    <td align="left">Overdue Collection
                    </td>
                    <td align="right">
                        @Html.Label("lblOverdueCollectionAchievementUptoToday", lstSummaryForCollectionInfo != null ? Convert.ToDecimal(lstSummaryForCollectionInfo[0].OverdueCollectionAchievementThisMonthUptoToday).ToString("0.") : "")
                    </td>
                    <td align="right">
                        @Html.Label("lblOverdueCollectionTargetThisMonth", lstSummaryForCollectionInfo != null ? Convert.ToDecimal(lstSummaryForCollectionInfo[0].OverdueCollectionTargetThisMonth).ToString("0.") : "")
                    </td>
                    <td align="right">
                        @ViewBag.OverdueCollectionAchievementStatus%
                    </td>
                </tr>
            </table>

        }
        }
        <table width="100%" cellpadding="0" cellspacing="1">
            <tr>
                <td class="IDCOLHeader" align="left" colspan="2">Inventory
                </td>
            </tr>
            <tr>
                <td align="right" colspan="2">
                    <label for="CheckBoxInventory">
                        <strong>All Entries are Completed </strong>
                    </label>
                    <input id="CheckBoxInventory" name="CheckBox" type="checkbox" value="false" />
                    &nbsp;
                </td>
            </tr>
            <tr>
                <td align="left" width="15%">Store Location
                </td>
                <td align="left">
                    @Html.DropDownList("ddlStoreLocation", new SelectList(ViewBag.StoreLocation, "StoreLocationID", "Description"), new { @class = "IRDropDown" })
                    <input id="btnShowtemList" type="submit" value="Show" onclick="return ShowItemList();"
                        style="width: 60px;" />
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    @(Html.Telerik().Grid<SummaryForTheDayClosingForInventoryInfo>()
                    .Name("grvInventoryInformation")
                     .DataKeys(keys => keys.Add(k => k.ItemCategory))
                    .Columns(column =>
                    {
                        column.Bound(t => t.ItemCategory).Title("Item Category");
                        column.Bound(t => t.OpeningBalance).Title("Opening Balance");
                        column.Bound(t => t.ReceivedUptoYesterday).Title("Received Upto Yesterday");
                        column.Bound(t => t.ReceivedToday).Title("Received Today");
                        column.Bound(t => t.IssuedUptoYesterday).Title("Issue Upto Yesterday");
                        column.Bound(t => t.IssuedToday).Title("Issued Today");
                        column.Bound(t => t.ClosingBalance).Title("Closing Balance");

                    })
                    .DataBinding(settings => settings.Ajax().Select("__LoadInventoryItemLocationWise", "SalesMonitoring"))
                    .Scrollable(scroll => scroll.Height(250))
                    .Selectable()
                    .Footer(false)
            )
                </td>
            </tr>
        </table>
        <table width="100%" class="TableRowTableData" cellspacing="1" cellpadding="0">
            <tr>
                <td colspan="5" class="IDCOLHeader" align="left">Accounting
                </td>
            </tr>
            <tr>
                <td width="10%" align="left">
                    <a href="../SalesMonitoring/MonthlyAccountSummaryStatement" target="_blank">Show Details</a>
                    @*<a href="@(@Url.Action("UnitWiseMonthyAccountSummaryStatement", "AccountingReport") + "?unitCode=")@ViewBag.UnitCode" target="_blank">Show Details</a>       *@
                </td>
                <td align="right" colspan="4" width="90%">
                    <label for="CheckBoxAccounting">
                        <strong>All Entries are Completed </strong>
                    </label>
                    <input id="CheckBoxAccounting" name="CheckBox" type="checkbox" value="false" />
                    &nbsp;
                </td>
            </tr>
            <tr>
                <td colspan="5">
                    <table width="100%" cellspacing="1" cellpadding="0">
                        <tr>
                            <td>&nbsp;
                            </td>
                            <td align="right">
                                <strong>Opening Balance</strong>
                            </td>
                            <td align="right">
                                <strong>In Flow</strong>
                            </td>
                            <td align="right">
                                <strong>Out Flow</strong>
                            </td>
                            <td align="right">
                                <strong>Closing Balance</strong>
                            </td>
                        </tr>
                        <tr>
                            <td align="left">Cash In Hand
                            </td>
                            <td align="right">
                                @Html.Label("lblCashOpeningBalance", lstSummaryAccountingInfo[0] != null ? Convert.ToDecimal(lstSummaryAccountingInfo[0].CashInHandOpeningBalance).ToString("0.") : "0")
                            </td>
                            <td align="right">
                                @Html.Label("lblCashInflow", lstSummaryAccountingInfo[0] != null ? Convert.ToDecimal(lstSummaryAccountingInfo[0].CashInHandInFlow).ToString("0.") : "0")
                            </td>
                            <td align="right">
                                @Html.Label("lblCashOutflow", lstSummaryAccountingInfo[0] != null ? Convert.ToDecimal(lstSummaryAccountingInfo[0].CashInHandOutFlow).ToString("0.") : "0")
                            </td>
                            <td align="right">
                                @Html.Label("lblCashClosingBalance", lstSummaryAccountingInfo[0] != null ? Convert.ToDecimal(lstSummaryAccountingInfo[0].CashInHandClosingBalance).ToString("0.") : "0")
                            </td>
                        </tr>
                        <tr>
                            <td align="left">Cash At Bank
                            </td>
                            <td align="right">
                                @Html.Label("lblBankOpeningBalance", lstSummaryAccountingInfo != null ? Convert.ToDecimal(lstSummaryAccountingInfo[0].CashAtBankOpeningBalance).ToString("0.") : "0")
                            </td>
                            <td align="right">
                                @Html.Label("lblBankInflow", lstSummaryAccountingInfo != null ? Convert.ToDecimal(lstSummaryAccountingInfo[0].CashAtBankInFlow).ToString("0.") : "0")
                            </td>
                            <td align="right">
                                @Html.Label("lblBankOutflow", lstSummaryAccountingInfo != null ? Convert.ToDecimal(lstSummaryAccountingInfo[0].CashAtBankOutFlow).ToString("0.") : "0")
                            </td>
                            <td align="right">
                                @Html.Label("lblBankClosingBalance", lstSummaryAccountingInfo != null ? Convert.ToDecimal(lstSummaryAccountingInfo[0].CashAtBankClosingBalance).ToString("0.") : "0")
                            </td>
                        </tr>
                        <tr>
                            <td align="left">
                                <strong>Total :</strong>
                            </td>
                            <td align="right">
                                <strong>@ViewBag.OpeningBalance</strong>
                            </td>
                            <td align="right">
                                <strong>@ViewBag.Inflow </strong>
                            </td>
                            <td align="right">
                                <strong>@ViewBag.OutFlow</strong>
                            </td>
                            <td align="right">
                                <strong>@ViewBag.ClosingBalance</strong>
                            </td>
                        </tr>
                        <tr>
                            <td align="left">Collection Reconcilation
                            </td>
                            <td align="right" style="color: Red">
                                <strong>@Html.Label("lblCollectionreconcilation", lstSummaryAccountingInfo != null ? Convert.ToDecimal(lstSummaryAccountingInfo[0].CollectionReconciliationBalance).ToString("0.") : "0")</strong>
                            </td>
                            <td align="right" colspan="3">&nbsp;
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr>
                <td colspan="5" align="right">
                    <input id="closeThisDay" type="submit" value="Close This Day" onclick="return SummaryForTheDayClosing();" />
                </td>
            </tr>
        </table>
    </form>

    }

}

<script type="text/javascript">

    function SummaryForTheDayClosing() {

        var loginLocation = $('#hfLoginLocation').val();

        var salesEntryStatus = false;
        var collectionStatus = false;
        var inventoryStatus = false;
        var accountingStatus = false;

        salesEntryStatus = $('#CheckBoxSales').is(':checked');
        collectionStatus = $('#CheckBoxCollection').is(':checked');
        inventoryStatus = $('#CheckBoxInventory').is(':checked');
        accountingStatus = $('#CheckBoxAccounting').is(':checked');


        if (loginLocation == "Unit") {

            if (salesEntryStatus != true) {
                alert("Please Select Sales Entry CheckBox");
                return false;
            }

            if (collectionStatus != true) {
                alert("Please Select Collection Entry CheckBox");
                return false;
            }
        }

        if (inventoryStatus != true) {
            alert("Please Select Inventory Status Checkbox");
            return false;
        }

        if (accountingStatus != true) {
            alert("Please Select Accounting Status Checkbox");
            return false;
        }

        return true;
    }

    $('#form1').submit(function () {

        var salesEntryStatus = false;
        var collectionStatus = false;
        var inventoryStatus = false;
        var accountingStatus = false;
        var TransactionDate = "";

        $('#hfCheckSalesCheckBox').val = $('#CheckBoxSales').is(':checked');
        $('#hfCheckCollectionCheckBox').val = $('#CheckBoxCollection').is(':checked');
        $('#hfCheckInventoryCheckBox').val = $('#CheckBoxInventory').is(':checked');
        $('#hfCheckAccountingCheckBox').val = $('#CheckBoxAccounting').is(':checked');

        salesEntryStatus = $('#CheckBoxSales').is(':checked');
        collectionStatus = $('#CheckBoxCollection').is(':checked');
        inventoryStatus = $('#CheckBoxInventory').is(':checked');
        accountingStatus = $('#CheckBoxAccounting').is(':checked');
        TransactionDate = $('#lblTransactionDate').text();

        $.post('@Url.Action("SaveSummaryForTheDayClose", "SalesMonitoring")', {
            salesEntryStatus: salesEntryStatus, collectionStatus: collectionStatus,
            inventoryStatus: inventoryStatus, accountingStatus: accountingStatus, TransactionDate: TransactionDate
        }, function (data) {

            if (data[0].messageCode == "success") {
                alert(data[0].message);
                ClearControl();
            }
            else {
                alert(data[0].message);
            }
        });
        return false;

    });

    function ShowItemList() {
        var params = {
            storeLocation: $('#ddlStoreLocation').val()
        };

        var grid = $('#grvInventoryInformation').data('tGrid');
        grid.dataSource._data = [];
        grid.ajaxRequest(params);
        return false;
    }

    function ClearControl() {
        $('#CheckBoxSales').attr("checked", false);
        $('#CheckBoxCollection').attr("checked", false);
        $('#CheckBoxInventory').attr("checked", false);
        $('#CheckBoxAccounting').attr("checked", false);

        location.reload();
    }

    function RSFMenu(goFor) {
        window.location.replace(Helper.Menu("../../", goFor));
        return false;
    }

</script>
