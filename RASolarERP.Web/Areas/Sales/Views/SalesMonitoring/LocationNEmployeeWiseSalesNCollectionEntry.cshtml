@using RASolarHelper;
@model IEnumerable<RASolarERP.Model.LocationAndEmployeeWiseWeeklySalesAndCollectionEntry>
@{
    ViewBag.Title = "Weekly Overdue Collection Entry For Tracker";


    Layout = "~/Areas/Sales/Views/Shared/_SalesLayout.cshtml";

    if (false)
    {
    <script src="../../../../Scripts/jquery-1.5.1.min.js" type="text/javascript"></script>
    <script src="../../../../Scripts/RASolarCustomFunction.js" type="text/javascript"></script>    
    }
}
@section TopMenu
{
    @Html.Partial((String)ViewBag.TopMenu)
}
@section LoginInfo
{
    <table cellpadding="0" cellspacing="0" border="0" style="text-align: right;" width="100%">
        <tr>
            <td style="width: 20%" align="left">
                @ViewBag.ZoneTitle&nbsp; @ViewBag.ZoneName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.RegionTitle&nbsp; @ViewBag.RegionName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.UnitTitle&nbsp; @ViewBag.UnitName
            </td>
            <td style="width: 40%" align="left">
                @ViewBag.OpenMonthYear
            </td>
        </tr>
    </table>
}
<input id="hfWeeklyTarget" type="hidden" value="0" />
<input id="hdInitial" type="hidden" value="@ViewBag.Initial" />
<table cellpadding="0" cellspacing="0" border="0">
    <tr>
        <td align="left">
            <table cellpadding="0" cellspacing="0" border="0" width="100%">
                <tr>
                    <td>
                        Year Week: @ViewBag.YearWeek
                    </td>
                    <td>
                        Start Date: @ViewBag.WeekStartDate
                    </td>
                    <td>
                        End Date: @ViewBag.WeekEndDate
                    </td>
                    <td>
                        <a href="../../OverdueCollectionGuide/GuideLine.html" style="font-size: 14px; font-weight: bold;"
                            target="_blank">Guide Line</a>
                    </td>
                </tr>
            </table>
        </td>
    </tr>
    <tr>
        <td>
            <div class="DataGridXScroll">
                @(Html.Telerik().Grid(Model)
              .Name("grvLocationAndEmployeeWiseWeeklySalesAndCollectionEntry")
              .DataKeys(keys => keys.Add(k => k.EmployeeID))
              .Columns(column =>
              {
                  column.Bound(w => w.EmployeeID).Hidden(true).Width(90);
                  column.Bound(w => w.EmployeeName).Title("Employee Name").Width(145);
                  column.Template(@<p id="@("weeklyTarget" + item.EmployeeID)" style="text-align:right">@item.WeeklyTarget.ToString("0.00")</p>).Title("Target (A)").Width(70);

                  column.Template(@<p id="@("weeeklyAchievement" + item.EmployeeID)" style="text-align:right">@item.WeeklyAchievement.ToString("0.00")</p>).Title("Achievement (B)").Width(65);

                  column.Template(@<p id="@("varianceInAmount" + item.EmployeeID)" style="text-align:right">@item.VarianceInAmount.ToString("0.00")</p>).Title("Difference in Amount (C=A-B)").Width(90);
                  column.Template(@<p id="@("varianceInPercentage" + item.EmployeeID)" style="text-align:right">@item.VarianceInPercentage.ToString("0.00")</p>).Title("Difference in % (D=(C*100/A))").Width(90);
                  column.Template(@<p id="@("cumulativeTarget" + item.EmployeeID)" style="text-align:right">@item.CumulativeTarget.ToString("0.00")</p>).Title("Cum. Target (E)").Width(80);
                  column.Template(@<p id="@("cumulativeAchievement" + item.EmployeeID)" style="text-align:right">@item.CumulativeAchievement.ToString("0.00")</p>).Title(" Cum. Achievement (F)").Width(80);
                  column.Template(@<p id="@("cumVarianceInAmount" + item.EmployeeID)" style="text-align:right">@item.CumVarianceInAmount.ToString("0.00")</p>).Title("Cum. Difference in Amount (G=E-F)").Width(90);
                  column.Template(@<p id="@("cumVarianceInPercentage" + item.EmployeeID)" style="text-align:right">@item.CumVarianceInPercentage.ToString("0.00")</p>).Title("Cum. Difference in % (H=(G*100/E))").Width(90);

                  column.Template(@<input type="text" id="@("remarks" + item.EmployeeID)" value="@item.Remarks" />).Title("Remarks").Width(100);

              })

            )
            </div>
        </td>
    </tr>
    <tr>
        <td align="left">
            <input type="submit" value="Show Overdue Customer List" onclick="return ShowCustomerWiseOverdue();" />
        </td>
    </tr>
    <tr id="showCustomerDue">
        <td style="padding-top: 5px;">
            @(Html.Telerik().Grid<CustomerWiseOverdueBalanceTracker>()
                              .Name("gvCustomerWiseOverdueBalanceTracker")
                              .DataKeys(keys => keys.Add(k => k.CustomerCode))
                              .Columns(column =>
                              {
                                  column.Bound(c => c.CustomerCode).Title("Customer Code").Width(90);
                                  column.Bound(c => c.CustomerName).Title("Customer Name").Width(200);
                                  column.Bound(c => c.OverdueBalance).Title("Overdue Balance").Width(180)
                                       .Format("{0:0.00}")
                                       .HtmlAttributes(new { @class = "GridColumnRightAlign" });

                                  column.Bound(c => c.ODRecoveredUpToLastWeek).Title("OD Recovered up to Last week").Width(180)
                                      .Format("{0:0.00}")
                                      .HtmlAttributes(new { @class = "GridColumnRightAlign" });

                                  column.Bound(c => c.RemainingODToBeRecovered).Title("Remaining OD To Be Recovered").Width(180)
                                     .Format("{0:0.00}")
                                     .HtmlAttributes(new { @class = "GridColumnRightAlign" });

                                  column.Bound(c => c.CustomerCode).ClientTemplate("<input type='text' style=\" width:95px; \" id='collectedOD<#= Helper.CustomerIdWithoutHiPen(Helper.WhiteSpaceRemove(CustomerCode))#>' value='<#=ODRecoveredThisWeek#>' />").Title("OD Recovered This week").Width(100);
                                  column.Bound(c => c.CustomerCode).ClientTemplate("<a href=\"#\" onclick=\"return CustomerOverDueSave('<#=CustomerCode#>', '<#=ODRecoveredThisWeek#>');\">Save</a>").Width(50).Title("");

                                  column.Bound(c => c.CustomerCode).ClientTemplate("<p id='collectedODDB<#= Helper.CustomerIdWithoutHiPen(Helper.WhiteSpaceRemove(CustomerCode))#>'><#=ODRecoveredThisWeek#></p>").Title("OD DB").Width(10).Hidden(true);

                              })
                        .DataBinding(dbBindings => dbBindings.Ajax().Select("_CustomerWiseOverdueBalance", "SalesMonitoring"))
                        .ClientEvents(events => events.OnDataBound("Grid_onDataBound"))
                        .Scrollable(scroll => scroll.Height(200)).Pageable(pages => pages.PageSize(20))

               )
        </td>
    </tr>
</table>
<script type="text/javascript">

    if ($('#hfWeeklyTarget').val() != "1") {
        $('#showCustomerDue').css("display", "none");
    }
    else {
        $('#showCustomerDue').css("display", "");
    }

    function SaveWeeklyTarget() {

        var weeklyTarget = "";
        var rowsCount = rowsCnt = $("#grvLocationAndEmployeeWiseWeeklySalesAndCollectionEntry tbody tr").length;

        for (var i = 0; i < rowsCount; i++) {
            var tr = $("#grvLocationAndEmployeeWiseWeeklySalesAndCollectionEntry tbody tr:eq(" + i + ")");
            var empployeeId = $(tr).find('td:eq(0)').text();
            var regColcAchievement = $(tr).find('td:eq(3)').find('input').val();
            var remarks = $(tr).find('td:eq(10)').find('input').val();

            if (weeklyTarget != "") {
                weeklyTarget = weeklyTarget + "#" + empployeeId + "_" + regColcAchievement + "_" + remarks;
            }
            else {
                weeklyTarget = weeklyTarget + empployeeId + "_" + regColcAchievement + "_" + remarks;
            }

            $('#hfWeeklyTarget').val(weeklyTarget);
        }

        $.ajax({
            type: "POST",
            url: '@Url.Action("SaveLocationNEmployeeWiseSalesNCollectionEntry", "SalesMonitoring")',
            data: "{'weeklyTarget':'" + weeklyTarget + "'}",
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: false,
            success: function (data) {
                if (data != "") {
                    alert(data.toString());
                }
            },
            error: function () {
                alert("Failed to load Item");
            }
        });
    }

    function CalculateTarget(weeklyAcievementNew, weeklyAchievementOld, employeeID) {

        var weeklyAchievement = parseFloat(weeklyAcievementNew);
        var weeklyAchievementDb = parseFloat(weeklyAchievementOld);

        var tr = $("#grvLocationAndEmployeeWiseWeeklySalesAndCollectionEntry tbody tr:eq(0)");
        var weeklyTarget = parseFloat($(tr).find('td:eq(2)').text());
        var cumulativeTarget = parseFloat($(tr).find('td:eq(6)').text());
        var cumulativeAchievement = parseFloat($(tr).find('td:eq(7)').text());

        var varianceInAmount = Math.round(parseFloat(weeklyTarget) - parseFloat(weeklyAchievement)).toFixed(2);
        var varianceInParcentage = 0;
        var cumVarianceInPercentage = 0;

        if (parseFloat(weeklyTarget) != 0)
            varianceInParcentage = ((varianceInAmount * 100) / parseFloat(weeklyTarget)).toFixed(2);

        var cumulativeAchievementNew = Math.round((parseFloat(cumulativeAchievement) + parseFloat(weeklyAchievement)) - parseFloat(weeklyAchievementDb)).toFixed(2);

        var cumVarianceInAmount = Math.round(parseFloat(cumulativeTarget) - cumulativeAchievementNew).toFixed(2);

        if (parseFloat(cumulativeTarget) != 0)
            cumVarianceInPercentage = ((cumVarianceInAmount * 100) / parseFloat(cumulativeTarget)).toFixed(2);


        $('#varianceInAmount' + employeeID).text(varianceInAmount);
        $('#varianceInPercentage' + employeeID).text(varianceInParcentage);
        $('#cumulativeAchievement' + employeeID).text(cumulativeAchievementNew);
        $('#cumVarianceInAmount' + employeeID).text(cumVarianceInAmount);
        $('#cumVarianceInPercentage' + employeeID).text(cumVarianceInPercentage);
    }

    function ShowCustomerWiseOverdue() {

        var params = {
            unitCode: $('#hfWeeklyTarget').val()
        }

        var grid = $('#gvCustomerWiseOverdueBalanceTracker').data('tGrid');
        grid.dataSource._data = [];

        grid.ajaxRequest(params);

        $('#hfWeeklyTarget').val("2")
        $('#showCustomerDue').css("display", "");
    }

    function Grid_onDataBound(e) {

    }

    function TotalOverDueCalculation() {

        var rowsCnt = 0;
        var od = 0.00;
        var tt = 0.00;

        rowsCnt = $("#gvCustomerWiseOverdueBalanceTracker").data('tGrid').data.length;

        for (var i = 1; i < rowsCnt; i++) {

            var tr = $("#gvCustomerWiseOverdueBalanceTracker tbody tr:eq(" + i + ")");

            od = parseFloat($(tr).find('td:eq(2)').text());

            tt = tt + od;
        }

        $("#overdueTotal").text(tt.toFixed(2));
    }



    function CustomerOverDueSave(customerCode) {

        var customerId = Helper.CustomerIdWithoutHiPen(customerCode);
        customerId = Helper.WhiteSpaceRemove(customerId);

        var odRecoveredCurrentWeek = parseFloat($('#collectedOD' + customerId).val());
        var odRecoveredThisWeekDB = parseFloat($('#collectedODDB' + customerId).text());

        var tr = $("#grvLocationAndEmployeeWiseWeeklySalesAndCollectionEntry tbody tr:eq(0)");
        var employeeId = $(tr).find('td:eq(0)').text();

        var weeklyAcievement = parseFloat($('#weeeklyAchievement' + employeeId).text());

        var weeklyAcievementOld = weeklyAcievement;

        if (weeklyAcievement > 0) {
            weeklyAcievement = weeklyAcievement - odRecoveredThisWeekDB;
        }

        weeklyAcievement = weeklyAcievement + odRecoveredCurrentWeek;

        var remarksRSF = $('#remarks' + employeeId).val();

        $.ajax({
            type: "POST",
            url: '@Url.Action("SaveLocationNEmployeeWiseSalesNCollectionEntry", "SalesMonitoring")',
            data: "{'customerCode':'" + customerCode + "','odRecoveredCurrentWeek':'" + odRecoveredCurrentWeek + "','weeklyAcievement':'" + weeklyAcievement + "','remarksRSF':'" + remarksRSF + "'}",
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: false,
            success: function (data) {

                $.map(data, function (item) {
                    if (item.messageCode == "success") {
                        alert(item.message);
                        $('#collectedODDB' + customerId).text(odRecoveredCurrentWeek.toFixed(2));
                        $('#weeeklyAchievement' + employeeId).text(weeklyAcievement.toFixed(2));
                    }
                    else {
                        alert(item.message);
                    }
                });
            },
            error: function () {
                alert("Failed to load Item");
            }
        });

        return false;
    }

    function RSFMenu(goFor) {
        window.location.replace(Helper.Menu("../../", goFor));
        return false;
    } 

</script>
