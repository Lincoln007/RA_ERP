<script type="text/javascript">
    var firstTime1 = true;
    function onDataBinding1(e) {
        if (firstTime1) {
            e.preventDefault();
            firstTime1 = false;
        }
    }

    function onError1(e) {
        e.preventDefault();
    }

    var firstTime2 = true;
    function onDataBinding2(e) {
        if (firstTime2) {
            e.preventDefault();
            firstTime2 = false;
        }
    }

    function onError2(e) {
        e.preventDefault();
    }

    var firstTime3 = true;
    function onDataBinding3(e) {
        if (firstTime3) {
            e.preventDefault();
            firstTime3 = false;
        }
    }

    function onError3(e) {
        e.preventDefault();
    }

    var firstTime4 = true;
    function onDataBinding4(e) {
        if (firstTime4) {
            e.preventDefault();
            firstTime4 = false;
        }
    }

    function onError4(e) {
        e.preventDefault();
    }

    var firstTime5 = true;
    function onDataBinding5(e) {
        if (firstTime5) {
            e.preventDefault();
            firstTime5 = false;
        }
    }

    function onError5(e) {
        e.preventDefault();
    }

    var firstTime6 = true;
    function onDataBinding6(e) {
        if (firstTime6) {
            e.preventDefault();
            firstTime6 = false;
        }
    }

    function onError6(e) {
        e.preventDefault();
    }

    var firstTime7 = true;
    function onDataBinding7(e) {
        if (firstTime7) {
            e.preventDefault();
            firstTime7 = false;
        }
    }

    function onError7(e) {
        e.preventDefault();
    }

    var firstTime8 = true;
    function onDataBinding8(e) {
        if (firstTime8) {
            e.preventDefault();
            firstTime8 = false;
        }
    }

    function onError8(e) {
        e.preventDefault();
    }

</script>
@using RASolarERP.Model
@{
    ViewBag.Title = "Sales & Collection Target Vs. Achievement in Graph";

    Layout = "~/Areas/Sales/Views/Shared/_SalesLayout.cshtml";

    if (false)
    {
    <script src="../../../../Scripts/jquery-1.5.1.min.js" type="text/javascript"></script>
    <script src="../../../../Scripts/RASolarCustomFunction.js" type="text/javascript"></script>   
    }
}
@section TopMenu
{
    @Html.Partial((String)ViewBag.TopMenu)
}
@section LoginInfo
{
    <table cellpadding="0" cellspacing="0" border="0" style="text-align: right;" width="100%">
        <tr>
            <td style="width: 20%" align="left">
                @ViewBag.ZoneTitle&nbsp; @ViewBag.ZoneName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.RegionTitle&nbsp; @ViewBag.RegionName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.UnitTitle&nbsp; @ViewBag.UnitName
            </td>
            <td style="width: 40%" align="left">
                @ViewBag.OpenMonthYear
            </td>
        </tr>
    </table>
}
<table cellpadding="0" cellspacing="0" width="100%">
    <tr>
        <td>
            <fieldset class="sagGroupBox">
                <legend>Graph Generate Information</legend>
                <table cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td style="width: 33%;" valign="top">
                            @if (@ViewBag.ModuleName == "Unit Module")
                            {
                                <table cellspacing="0" cellpadding="2" width="100%">
                                    <tr>
                                        <td>For:
                                        </td>
                                        <td>
                                            @Html.DropDownList("ddlReportType", new List<SelectListItem> { 
                                                new SelectListItem { Text = "Unit Summary", Value= "UNITSUMMARY"},
                                                new SelectListItem { Text = "For An Employee", Value= "FORANEMPLOYEE"} 
                                            }, new { @style = "width:150px;" })
                                        </td>
                                    </tr>
                                </table>
                            }
                            else
                            {
                                <table cellspacing="0" cellpadding="2" width="100%">
                                    <tr>
                                        <td>For:
                                        </td>
                                        <td>
                                            @Html.DropDownList("ddlReportType", new List<SelectListItem> { 
                                                new SelectListItem { Text = "RSF Summary", Value = "RSFSUMMARY" },
                                                new SelectListItem{Text="Zone Summary", Value="ZONESUMMARY"},                                                
                                                new SelectListItem { Text = "Unit Summary", Value= "UNITSUMMARY"},
                                                new SelectListItem { Text = "For An Employee", Value= "FORANEMPLOYEE"} 
                                            }, new { @style = "width:150px;" })
                                        </td>
                                    </tr>
                                </table>
                            }
                        </td>
                        <td style="width: 33%;" valign="top">
                            <table cellspacing="2" cellpadding="0" width="100%">
                                <tr>
                                    <td class="LocationTitle">Zone
                                    </td>
                                    <td>
                                        @Html.DropDownList("ddlZone", Enumerable.Empty<SelectListItem>(), "--Select--", new { @style = "width:150px;" })
                                    </td>
                                </tr>
                                <tr>
                                    <td class="LocationTitle">Region
                                    </td>
                                    <td>
                                        @Html.DropDownList("ddlRegion", Enumerable.Empty<SelectListItem>(), "--Select--", new { @style = "width:150px;" })
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td style="width: 33%;" valign="top">
                            <table cellspacing="2" cellpadding="0" width="100%">
                                <tr>
                                    <td class="LocationTitle">Unit
                                    </td>
                                    <td>
                                        @Html.DropDownList("ddlUnit", Enumerable.Empty<SelectListItem>(), "--Select--", new { @style = "width:150px;" })
                                    </td>
                                </tr>
                                <tr>
                                    <td class="LocationTitle">Employee
                                    </td>
                                    <td>
                                        @Html.DropDownList("ddlEmployee", Enumerable.Empty<SelectListItem>(), "--Select--", new { @style = "width:150px;" })
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </td>
    </tr>
    <tr>
        <td>
            <fieldset class="sagGroupBox">
                <legend>Graph Display Information</legend>
                <table cellpadding="0" cellspacing="0" width="100%">
                    <tr>
                        <td style="width: 33%;" valign="top">
                            <table cellspacing="0" cellpadding="0" width="100%">
                                <tr>
                                    <td colspan="2" align="left">
                                        <input type="submit" value="Display Graph" id="btnSubmitGraph">
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td style="width: 33%;" valign="top">
                            <table cellspacing="0" cellpadding="0" width="100%">
                                <tr>
                                    <td>View Types:
                                    </td>
                                    <td>
                                        @Html.DropDownList("ddlReportViewType", new List<SelectListItem> { 
                                        new SelectListItem { Text = "Sales Target Only", Value = "SALESCOLLECTIONONLY" },
                                        new SelectListItem { Text = "Collection Target Only", Value = "TARGETCOLLECTIONONLY" },
                                        new SelectListItem { Text = "Sales Target VS Achievement", Value= "SALESTARGETVSACHIEVEMENT"},
                                        new SelectListItem { Text = "Collection Target VS Achievement", Value= "COLLECTIONTARGETVSACHIEVEMENT"} 
                                    }, new { @style = "width:150px;" })
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td style="width: 33%;" valign="top"></td>
                    </tr>
                </table>
            </fieldset>
        </td>
    </tr>
    <tr>
        <td id="salesCollectionOnly" width="100%" align="left">
            <table cellpadding="0" cellspacing="0" width="100%">
                <tr>
                    <td>
                        @(Html.Telerik().Chart<SalSalesNCollectionTargetVsAchievementForGraph>()
                      .Name("chrtSalesCollectionOnly")
                      .Legend(legend => legend.Position(ChartLegendPosition.Top))

                      .Series(series =>
                      {
                          series.Line(s => s.TargetForSales).Name("Sales Target");

                      })
                     .CategoryAxis(axis => axis
                     .Categories(c => c.Day)
                     .Labels(labels => labels.Rotation(-90))

                     )

                    .ValueAxis(axis => axis
                     .Numeric().Min(0).Max(600).MajorUnit(30))

                     .HtmlAttributes(new { style = "width: 1000px; height: 500px; margin: auto;" })
                     .DataBinding(dataBinding => dataBinding.Ajax().Select("ProgressReviewGraphRelod", "SalesMonitoring"))
                             .ClientEvents(events => events
                              .OnDataBinding("onDataBinding1")
                              .OnError("onError1")
                             )
        )
                    </td>
                </tr>
            </table>
        </td>
    </tr>
    <tr>
        <td id="salesCollectionOnlyForUnit" width="100%" align="left">
            <table cellpadding="0" cellspacing="0" width="100%">
                <tr>
                    <td>
                        @(Html.Telerik().Chart<SalSalesNCollectionTargetVsAchievementForGraph>()
                       .Name("chrtSalesCollectionOnlyForUnit")
                      .Legend(legend => legend.Position(ChartLegendPosition.Top))

                      .Series(series =>
                      {
                          series.Line(s => s.TargetForSales).Name("Sales Target");

                      })
                     .CategoryAxis(axis => axis
                     .Categories(c => c.Day)
                     .Labels(labels => labels.Rotation(-90))

                     )

                    .ValueAxis(axis => axis
                     .Numeric().Min(0).Max(25).MajorUnit(1))

                     .HtmlAttributes(new { style = "width: 1000px; height: 500px; margin: auto;" })
                     .DataBinding(dataBinding => dataBinding.Ajax().Select("ProgressReviewGraphRelod", "SalesMonitoring"))
                             .ClientEvents(events => events
                              .OnDataBinding("onDataBinding5")
                              .OnError("onError5")
                             )
        )
                    </td>
                </tr>
            </table>
        </td>
    </tr>
    <tr>
        <td id="targetCollectionOnly" width="100%" align="left">
            <table cellpadding="0" cellspacing="0" width="100%">
                <tr>
                    <td>
                        @(Html.Telerik().Chart<SalSalesNCollectionTargetVsAchievementForGraph>()
                      .Name("chrtTargetCollectionOnly")
                      .Legend(legend => legend.Position(ChartLegendPosition.Top))

                      .Series(series =>
                      {
                          series.Line(s => s.TargetForRegularCollection).Name("Regular Collection Target");
                          series.Line(s => s.TargetForODCollection).Name("OD Collection Target");

                      })
                     .CategoryAxis(axis => axis
                     .Categories(c => c.Day)
                     .Labels(labels => labels.Rotation(-90))

                     )

                    .ValueAxis(axis => axis
                     .Numeric().Min(0).Max(15000).MajorUnit(500)
                     .Title("In Thousand")
                     )

                     .HtmlAttributes(new { style = "width: 1000px; height: 500px; margin: auto;" })
                     .DataBinding(dataBinding => dataBinding.Ajax().Select("ProgressReviewGraphRelod", "SalesMonitoring"))
                             .ClientEvents(events => events
                              .OnDataBinding("onDataBinding2")
                              .OnError("onError2")
                     )
                )
                    </td>
                </tr>
            </table>
        </td>
    </tr>
    <tr>
        <td id="targetCollectionOnlyForUnit" width="100%" align="left">
            <table cellpadding="0" cellspacing="0" width="100%">
                <tr>
                    <td>
                        @(Html.Telerik().Chart<SalSalesNCollectionTargetVsAchievementForGraph>()
                       .Name("chrtTargetCollectionOnlyForUnit")
                      .Legend(legend => legend.Position(ChartLegendPosition.Top))

                      .Series(series =>
                      {
                          series.Line(s => s.TargetForRegularCollection).Name("Regular Collection Target");
                          series.Line(s => s.TargetForODCollection).Name("OD Collection Target");

                      })
                     .CategoryAxis(axis => axis
                     .Categories(c => c.Day)
                     .Labels(labels => labels.Rotation(-90))

                     )

                    .ValueAxis(axis => axis
                     .Numeric().Min(0).Max(15000).MajorUnit(500))

                     .HtmlAttributes(new { style = "width: 1000px; height: 500px; margin: auto;" })
                     .DataBinding(dataBinding => dataBinding.Ajax().Select("ProgressReviewGraphRelod", "SalesMonitoring"))
                             .ClientEvents(events => events
                              .OnDataBinding("onDataBinding6")
                              .OnError("onError6")
                             )
                )
                    </td>
                </tr>
            </table>
        </td>
    </tr>
    <tr>
        <td id="salesTargetVSAchievement" width="100%" align="left">
            <table cellpadding="0" cellspacing="0" width="100%">
                <tr>
                    <td>
                        @(Html.Telerik().Chart<SalSalesNCollectionTargetVsAchievementForGraph>()
                          .Name("chrtSalesTargetVSAchievement")
                      .Legend(legend => legend.Position(ChartLegendPosition.Top))

                      .Series(series =>
                      {
                          series.Line(s => s.TargetForSales).Name("Sales Target");

                          series.Line(s => s.AchievementForSales).Name("Sales Achievement");

                      })
                     .CategoryAxis(axis => axis
                     .Categories(c => c.Day)
                     .Labels(labels => labels.Rotation(-90))

                     )

                    .ValueAxis(axis => axis
                     .Numeric().Min(0).Max(600).MajorUnit(30))

                     .HtmlAttributes(new { style = "width: 1000px; height: 500px; margin: auto;" })
                     .DataBinding(dataBinding => dataBinding.Ajax().Select("ProgressReviewGraphRelod", "SalesMonitoring"))
                    .ClientEvents(events => events
                    .OnDataBinding("onDataBinding3")
                    .OnError("onError3")
                    )
                   )
                    </td>
                </tr>
            </table>
        </td>
    </tr>
    <tr>
        <td id="salesTargetVSAchievementForUnit" width="100%" align="left">
            <table cellpadding="0" cellspacing="0" width="100%">
                <tr>
                    <td>
                        @(Html.Telerik().Chart<SalSalesNCollectionTargetVsAchievementForGraph>()
                          .Name("chrtSalesTargetVSAchievementForUnit")
                      .Legend(legend => legend.Position(ChartLegendPosition.Top))

                      .Series(series =>
                      {
                          series.Line(s => s.TargetForSales).Name("Sales Target");

                          series.Line(s => s.AchievementForSales).Name("Sales Achievement");

                      })
                     .CategoryAxis(axis => axis
                     .Categories(c => c.Day)
                     .Labels(labels => labels.Rotation(-90))

                     )

                    .ValueAxis(axis => axis
                     .Numeric().Min(0).Max(25).MajorUnit(1))

                     .HtmlAttributes(new { style = "width: 1000px; height: 500px; margin: auto;" })
                     .DataBinding(dataBinding => dataBinding.Ajax().Select("ProgressReviewGraphRelod", "SalesMonitoring"))
                    .ClientEvents(events => events
                    .OnDataBinding("onDataBinding7")
                    .OnError("onError7")
                    )
                   )
                    </td>
                </tr>
            </table>
        </td>
    </tr>
    <tr>
        <td id="collectionTargetVSAchievement" width="100%" align="left">
            <table cellpadding="0" cellspacing="0" width="100%">
                <tr>
                    <td>
                        @(Html.Telerik().Chart<SalSalesNCollectionTargetVsAchievementForGraph>()
                           .Name("chrtCollectionTargetVSAchievement")
                      .Legend(legend => legend.Position(ChartLegendPosition.Top))

                      .Series(series =>
                      {
                          series.Line(s => s.TargetForRegularCollection).Name("Regular Collection Target");
                          series.Line(s => s.AchievementForRegularCollection).Name("Regular Collection Achievement");

                          series.Line(s => s.TargetForODCollection).Name("OD Collection Target");
                          series.Line(s => s.AchievementForODCollection).Name("OD Collection Achievement");

                      })
                     .CategoryAxis(axis => axis
                     .Categories(c => c.Day)
                     .Labels(labels => labels.Rotation(-90))

                     )
                    .ValueAxis(axis => axis
                    .Numeric().Min(0).Max(15000).MajorUnit(500)
                    .Title("In Thousand")
                    )
                    .HtmlAttributes(new { style = "width: 1000px; height: 500px; margin: auto;" })
                    .DataBinding(dataBinding => dataBinding.Ajax().Select("ProgressReviewGraphRelod", "SalesMonitoring"))
                    .ClientEvents(events => events
                      .OnDataBinding("onDataBinding4")
                      .OnError("onError4")
                     )
                 )
                    </td>
                </tr>
            </table>
        </td>
    </tr>
    <tr>
        <td id="collectionTargetVSAchievementForUnit" width="100%" align="left">
            <table cellpadding="0" cellspacing="0" width="100%">
                <tr>
                    <td>
                        @(Html.Telerik().Chart<SalSalesNCollectionTargetVsAchievementForGraph>()
                           .Name("chrtCollectionTargetVSAchievementForUnit")
                      .Legend(legend => legend.Position(ChartLegendPosition.Top))

                      .Series(series =>
                      {
                          series.Line(s => s.TargetForRegularCollection).Name("Regular Collection Target");
                          series.Line(s => s.AchievementForRegularCollection).Name("Regular Collection Achievement");

                          series.Line(s => s.TargetForODCollection).Name("OD Collection Target");
                          series.Line(s => s.AchievementForODCollection).Name("OD Collection Achievement");

                      })
                     .CategoryAxis(axis => axis
                     .Categories(c => c.Day)
                     .Labels(labels => labels.Rotation(-90))

                     )
                    .ValueAxis(axis => axis
                    .Numeric().Min(0).Max(15000).MajorUnit(500)
                    )
                    .HtmlAttributes(new { style = "width: 1000px; height: 500px; margin: auto;" })
                    .DataBinding(dataBinding => dataBinding.Ajax().Select("ProgressReviewGraphRelod", "SalesMonitoring"))
                    .ClientEvents(events => events
                      .OnDataBinding("onDataBinding8")
                      .OnError("onError8")
                     )
                 )
                    </td>
                </tr>
            </table>
        </td>
    </tr>
</table>
<script type="text/javascript">

    $('#ddlZone').attr("disabled", true);
    $('#ddlRegion').attr("disabled", true);
    $('#ddlUnit').attr("disabled", true);
    $('#ddlEmployee').attr("disabled", true);

    $('#salesCollectionOnly').css('display', 'none');
    $('#targetCollectionOnly').css('display', 'none');
    $('#salesTargetVSAchievement').css('display', 'none');
    $('#collectionTargetVSAchievement').css('display', 'none');

    $('#salesCollectionOnlyForUnit').css('display', 'none');
    $('#targetCollectionOnlyForUnit').css('display', 'none');
    $('#salesTargetVSAchievementForUnit').css('display', 'none');
    $('#collectionTargetVSAchievementForUnit').css('display', 'none');

    $(document).ready(function () {

        $('#ddlReportType').change(function () {

            if (this.value == "RSFSUMMARY" || this.value == "") {
                $('#ddlZone').attr("disabled", true);
                $('#ddlRegion').attr("disabled", true);
                $('#ddlUnit').attr("disabled", true);
            }
            else if (this.value == "ZONESUMMARY") {
                $('#ddlZone').attr("disabled", false);
                $('#ddlRegion').attr("disabled", true);
                $('#ddlUnit').attr("disabled", true);
                $('#ddlEmployee').attr("disabled", true);

                LoadZone(this.value);
            }
            else if (this.value == "UNITSUMMARY") {
                $('#ddlZone').attr("disabled", false);
                $('#ddlRegion').attr("disabled", false);
                $('#ddlUnit').attr("disabled", false);
                $('#ddlEmployee').attr("disabled", true);

                LoadZone(this.value);
            }
            else if (this.value == "FORANEMPLOYEE") {
                $('#ddlZone').attr("disabled", false);
                $('#ddlRegion').attr("disabled", false);
                $('#ddlUnit').attr("disabled", false);
                $('#ddlEmployee').attr("disabled", false);

                LoadZone(this.value);
            }
        });

        $('#ddlReportViewType').change(function () {

            var locationCode = "";

            if ($('#ddlReportType').val() == "ZONESUMMARY") {
                locationCode = $('#ddlZone').val();
            }
            else if ($('#ddlReportType').val() == "UNITSUMMARY") {
                locationCode = $('#ddlUnit').val();
            }

            var params = {
                reportType: $('#ddlReportType').val(),
                locationCode: locationCode,
                employeeId: $('#ddlEmployee').val()
            };

            if (this.value == "SALESCOLLECTIONONLY") {

                if ($('#ddlReportType').val() == "UNITSUMMARY" || $('#ddlReportType').val() == "FORANEMPLOYEE") {
                    $('#salesCollectionOnlyForUnit').css('display', '');
                    $('#salesCollectionOnly').css('display', 'none');

                    $("#chrtSalesCollectionOnlyForUnit").data("tChart").rebind(params);
                }
                else {
                    $('#salesCollectionOnly').css('display', '');
                    $('#salesCollectionOnlyForUnit').css('display', 'none');

                    $("#chrtSalesCollectionOnly").data("tChart").rebind(params);
                }

                $('#targetCollectionOnly').css('display', 'none');
                $('#salesTargetVSAchievement').css('display', 'none');
                $('#collectionTargetVSAchievement').css('display', 'none');
                $('#targetCollectionOnlyForUnit').css('display', 'none');
                $('#salesTargetVSAchievementForUnit').css('display', 'none');
                $('#collectionTargetVSAchievementForUnit').css('display', 'none');
            }
            else if (this.value == "TARGETCOLLECTIONONLY") {

                if ($('#ddlReportType').val() == "UNITSUMMARY" || $('#ddlReportType').val() == "FORANEMPLOYEE") {
                    $('#targetCollectionOnlyForUnit').css('display', '');
                    $('#targetCollectionOnly').css('display', 'none');

                    $("#chrtTargetCollectionOnlyForUnit").data("tChart").rebind(params);
                }
                else {
                    $('#targetCollectionOnly').css('display', '');
                    $('#targetCollectionOnlyForUnit').css('display', 'none');

                    $("#chrtTargetCollectionOnly").data("tChart").rebind(params);
                }

                $('#salesCollectionOnly').css('display', 'none');
                $('#salesCollectionOnlyForUnit').css('display', 'none');
                $('#salesTargetVSAchievement').css('display', 'none');
                $('#collectionTargetVSAchievement').css('display', 'none');
                $('#salesTargetVSAchievementForUnit').css('display', 'none');
                $('#collectionTargetVSAchievementForUnit').css('display', 'none');
            }
            else if (this.value == "SALESTARGETVSACHIEVEMENT") {

                if ($('#ddlReportType').val() == "UNITSUMMARY" || $('#ddlReportType').val() == "FORANEMPLOYEE") {
                    $('#salesTargetVSAchievementForUnit').css('display', '');
                    $('#salesTargetVSAchievement').css('display', 'none');

                    $("#chrtSalesTargetVSAchievementForUnit").data("tChart").rebind(params);
                }
                else {
                    $('#salesTargetVSAchievement').css('display', '');
                    $('#salesTargetVSAchievementForUnit').css('display', 'none');

                    $("#chrtSalesTargetVSAchievement").data("tChart").rebind(params);
                }

                $('#salesCollectionOnly').css('display', 'none');
                $('#targetCollectionOnly').css('display', 'none');
                $('#collectionTargetVSAchievement').css('display', 'none');
                $('#salesCollectionOnlyForUnit').css('display', 'none');
                $('#targetCollectionOnlyForUnit').css('display', 'none');
                $('#collectionTargetVSAchievementForUnit').css('display', 'none');
            }
            else if (this.value == "COLLECTIONTARGETVSACHIEVEMENT") {

                if ($('#ddlReportType').val() == "UNITSUMMARY" || $('#ddlReportType').val() == "FORANEMPLOYEE") {
                    $('#collectionTargetVSAchievementForUnit').css('display', '');
                    $('#collectionTargetVSAchievement').css('display', 'none');

                    $("#chrtCollectionTargetVSAchievementForUnit").data("tChart").rebind(params);
                }
                else {
                    $('#collectionTargetVSAchievement').css('display', '');
                    $('#collectionTargetVSAchievementForUnit').css('display', 'none');

                    $("#chrtCollectionTargetVSAchievement").data("tChart").rebind(params);
                }

                $('#salesCollectionOnly').css('display', 'none');
                $('#targetCollectionOnly').css('display', 'none');
                $('#salesTargetVSAchievement').css('display', 'none');
                $('#salesCollectionOnlyForUnit').css('display', 'none');
                $('#targetCollectionOnlyForUnit').css('display', 'none');
                $('#salesTargetVSAchievementForUnit').css('display', 'none');
            }
        });

        $('#ddlZone').change(function () {

            if ($('#ddlReportType').val() == "RSFSUMMARY" || $('#ddlReportType').val() == "ZONESUMMARY" || $('#ddlReportType').val() == "") {
                return false;
            }
            LoadRegion(this.value);
        });

        $('#ddlRegion').change(function () {

            if ($('#ddlReportType').val() == "RSFSUMMARY" || $('#ddlReportType').val() == "") {
                return false;
            }
            LoadUnit(this.value);
        });

        $('#ddlUnit').change(function () {

            if ($('#ddlReportType').val() == "RSFSUMMARY" || $('#ddlReportType').val() == "UNITSUMMARY" || $('#ddlReportType').val() == "") {
                return false;
            }
            LoadEmployee(this.value);
        });


        $('#btnSubmitGraph').click(function () {
            var locationCode = "";

            if ($('#ddlReportType').val() == "ZONESUMMARY") {
                locationCode = $('#ddlZone').val();
            }
            else if ($('#ddlReportType').val() == "UNITSUMMARY") {
                locationCode = $('#ddlUnit').val();
            }

            var params = {
                reportType: $('#ddlReportType').val(),
                locationCode: locationCode,
                employeeId: $('#ddlEmployee').val()
            };


            if ($('#ddlReportViewType').val() == "SALESCOLLECTIONONLY") {

                if ($('#ddlReportType').val() == "UNITSUMMARY" || $('#ddlReportType').val() == "FORANEMPLOYEE") {
                    $('#salesCollectionOnlyForUnit').css('display', '');
                    $('#salesCollectionOnly').css('display', 'none');

                    $("#chrtSalesCollectionOnlyForUnit").data("tChart").rebind(params);
                }
                else {
                    $('#salesCollectionOnly').css('display', '');
                    $('#salesCollectionOnlyForUnit').css('display', 'none');

                    $("#chrtSalesCollectionOnly").data("tChart").rebind(params);
                }

                $('#targetCollectionOnly').css('display', 'none');
                $('#salesTargetVSAchievement').css('display', 'none');
                $('#collectionTargetVSAchievement').css('display', 'none');
                $('#targetCollectionOnlyForUnit').css('display', 'none');
                $('#salesTargetVSAchievementForUnit').css('display', 'none');
                $('#collectionTargetVSAchievementForUnit').css('display', 'none');
            }
            else if ($('#ddlReportViewType').val() == "TARGETCOLLECTIONONLY") {

                if ($('#ddlReportType').val() == "UNITSUMMARY" || $('#ddlReportType').val() == "FORANEMPLOYEE") {
                    $('#targetCollectionOnlyForUnit').css('display', '');
                    $('#targetCollectionOnly').css('display', 'none');

                    $("#chrtTargetCollectionOnlyForUnit").data("tChart").rebind(params);
                }
                else {
                    $('#targetCollectionOnly').css('display', '');
                    $('#targetCollectionOnlyForUnit').css('display', 'none');

                    $("#chrtTargetCollectionOnly").data("tChart").rebind(params);
                }

                $('#salesCollectionOnly').css('display', 'none');
                $('#salesCollectionOnlyForUnit').css('display', 'none');
                $('#salesTargetVSAchievement').css('display', 'none');
                $('#collectionTargetVSAchievement').css('display', 'none');
                $('#salesTargetVSAchievementForUnit').css('display', 'none');
                $('#collectionTargetVSAchievementForUnit').css('display', 'none');
            }
            else if ($('#ddlReportViewType').val() == "SALESTARGETVSACHIEVEMENT") {

                if ($('#ddlReportType').val() == "UNITSUMMARY" || $('#ddlReportType').val() == "FORANEMPLOYEE") {
                    $('#salesTargetVSAchievementForUnit').css('display', '');
                    $('#salesTargetVSAchievement').css('display', 'none');

                    $("#chrtSalesTargetVSAchievementForUnit").data("tChart").rebind(params);
                }
                else {
                    $('#salesTargetVSAchievement').css('display', '');
                    $('#salesTargetVSAchievementForUnit').css('display', 'none');

                    $("#chrtSalesTargetVSAchievement").data("tChart").rebind(params);
                }

                $('#salesCollectionOnly').css('display', 'none');
                $('#targetCollectionOnly').css('display', 'none');
                $('#collectionTargetVSAchievement').css('display', 'none');
                $('#salesCollectionOnlyForUnit').css('display', 'none');
                $('#targetCollectionOnlyForUnit').css('display', 'none');
                $('#collectionTargetVSAchievementForUnit').css('display', 'none');
            }
            else if ($('#ddlReportViewType').val() == "COLLECTIONTARGETVSACHIEVEMENT") {

                if ($('#ddlReportType').val() == "UNITSUMMARY" || $('#ddlReportType').val() == "FORANEMPLOYEE") {
                    $('#collectionTargetVSAchievementForUnit').css('display', '');
                    $('#collectionTargetVSAchievement').css('display', 'none');

                    $("#chrtCollectionTargetVSAchievementForUnit").data("tChart").rebind(params);
                }
                else {
                    $('#collectionTargetVSAchievement').css('display', '');
                    $('#collectionTargetVSAchievementForUnit').css('display', 'none');

                    $("#chrtCollectionTargetVSAchievement").data("tChart").rebind(params);
                }

                $('#salesCollectionOnly').css('display', 'none');
                $('#targetCollectionOnly').css('display', 'none');
                $('#salesTargetVSAchievement').css('display', 'none');
                $('#salesCollectionOnlyForUnit').css('display', 'none');
                $('#targetCollectionOnlyForUnit').css('display', 'none');
                $('#salesTargetVSAchievementForUnit').css('display', 'none');
            }

            return false;
        });

    });

    function LoadZone() {

        $.ajax({
            type: "POST",
            url: '@Url.Action("LoadZone", "../RSFSecurity")',
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: false,
            success: function (data) {
                $('#ddlZone').get(0).options.length = 0;
                $('#ddlZone').get(0).options[0] = new Option("--Select--", "0");

                $.map(data, function (item) {
                    $('#ddlZone').get(0).options[$('#ddlZone').get(0).options.length] = new Option(item.Display, item.Value);
                });
            },
            error: function () {
                alert("Failed to load Item");
            }
        });
    }

    function LoadRegion(zoneCode) {

        $.ajax({
            type: "POST",
            url: '@Url.Action("LoadRegion", "../RSFSecurity")',
            data: "{'zoneCode':'" + zoneCode + "'}",
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: false,
            success: function (data) {
                $('#ddlRegion').get(0).options.length = 0;
                $('#ddlRegion').get(0).options[0] = new Option("--Select--", "0");

                $.map(data, function (item) {
                    $('#ddlRegion').get(0).options[$('#ddlRegion').get(0).options.length] = new Option(item.Display, item.Value);
                });
            },
            error: function () {
                alert("Failed to load Item");
            }
        });
    }

    function LoadUnit(regionCode) {

        $.ajax({
            type: "POST",
            url: '@Url.Action("LoadUnit", "../RSFSecurity")',
            data: "{'regionCode':'" + regionCode + "'}",
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: false,
            success: function (data) {
                $('#ddlUnit').get(0).options.length = 0;
                $('#ddlUnit').get(0).options[0] = new Option("--Select--", "0");

                $.map(data, function (item) {
                    $('#ddlUnit').get(0).options[$('#ddlUnit').get(0).options.length] = new Option(item.Display, item.Value);
                });
            },
            error: function () {
                alert("Failed to load Item");
            }
        });
    }

    function LoadEmployee(unitCode) {

        $.ajax({
            type: "POST",
            url: '@Url.Action("LoadEmployee", "SalesMonitoring")',
            data: "{'unitCode':'" + unitCode + "'}",
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: false,
            success: function (data) {
                $('#ddlEmployee').get(0).options.length = 0;
                $('#ddlEmployee').get(0).options[0] = new Option("--Select--", "0");

                $.map(data, function (item) {
                    $('#ddlEmployee').get(0).options[$('#ddlEmployee').get(0).options.length] = new Option(item.Display, item.Value);
                });
            },
            error: function () {
                alert("Failed to load Item");
            }
        });
    }

    function RSFMenu(goFor) {
        window.location.replace(Helper.Menu("../../", goFor));
        return false;
    }

</script>
