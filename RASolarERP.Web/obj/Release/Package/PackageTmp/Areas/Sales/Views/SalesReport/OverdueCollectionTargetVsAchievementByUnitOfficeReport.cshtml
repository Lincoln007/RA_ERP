@model IEnumerable<RASolarERP.Model.OverdueCollectionTargetVsAchievementByUnitOffice>
@{
    ViewBag.Title = "Overdue Collection Target Vs Achievement By Unit Office";
    
    
    Layout = "~/Areas/Sales/Views/Shared/_SalesLayout.cshtml";

    if (false)
    {
    <script src="../../../../Scripts/jquery-1.5.1.min.js" type="text/javascript"></script>
    <script src="../../../../Scripts/RASolarCustomFunction.js" type="text/javascript"></script>    
    }
}
@section TopMenu
{
    @Html.Partial((String)ViewBag.TopMenu)
}
@section LoginInfo
{
    <table cellpadding="0" cellspacing="0" border="0" style="text-align: right;" width="100%">
        <tr>
            <td style="width: 20%" align="left">
                @ViewBag.LocationTitle&nbsp; @ViewBag.Location
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.ZoneTitle&nbsp; @ViewBag.ZoneName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.RegionTitle&nbsp; @ViewBag.RegionName
            </td>
            <td style="width: 40%" align="left">
                @ViewBag.UnitTitle&nbsp; @ViewBag.UnitName
            </td>
        </tr>
    </table>
}
<div class="DataGridXScroll">
    @(Html.Telerik().Grid(Model)
                .Name("grvOverdueCollectionVsAchievement")
                .Columns(column =>
                {
                    column.Bound(a => a.Zone_Name).Width(100).Title("Zone Name")
                        .GroupHeaderTemplate(@<text>Zone: @item.Key </text>).Hidden(true);
                    column.Bound(a => a.Reg_Name).Width(100).Title("Region Name")
                        .GroupHeaderTemplate(@<text>Region: @item.Key </text>).Hidden(true);

                    column.Bound(a => a.Unit_Name).Width(100).Title("Unit Name")
                    .GroupFooterTemplate(@<text> Total </text>);

                    column.Bound(a => a.Unit_Code).Width(100).Title("Unit Code");

                    column.Bound(a => a.OverdueCollectionTargetInCurrentMonth).Width(130).HtmlAttributes(new { @class = "GridColumnRightAlign" }).Title("Target For This Month")
                       .Aggregate(aggreages => aggreages.Sum())
                .Format("{0:N}")
                .FooterTemplate(@<text> @item.Sum.Format("{0:N}") </text>)
                .GroupFooterTemplate(@<text>@item.Sum.Format("{0:N}")</text>);

                    column.Bound(a => a.AchievementInCurrentMonth_Cash).Width(130).HtmlAttributes(new { @class = "GridColumnRightAlign" }).Title("Achievement (Cash)")
                      .Aggregate(aggreages => aggreages.Sum())
                .Format("{0:N}")
                .FooterTemplate(@<text>@item.Sum.Format("{0:N}")</text>)
                .GroupFooterTemplate(@<text>@item.Sum.Format("{0:N}")</text>);

                    column.Bound(a => a.AchievementInCurrentMonth_Return).Width(130).HtmlAttributes(new { @class = "GridColumnRightAlign" }).Title("Achievement (Return)")
                        .Aggregate(aggreages => aggreages.Sum())
                .Format("{0:N}")
                .FooterTemplate(@<text>@item.Sum.Format("{0:N}")</text>)
                .GroupFooterTemplate(@<text>@item.Sum.Format("{0:N}")</text>);

                    column.Bound(a => a.AchievementInCurrentMonth_Total).Width(130).HtmlAttributes(new { @class = "GridColumnRightAlign" }).Title("Total Achievement")
                         .Aggregate(aggreages => aggreages.Sum())
                .Format("{0:N}")
                .FooterTemplate(@<text>@item.Sum.Format("{0:N}")</text>)
                .GroupFooterTemplate(@<text>@item.Sum.Format("{0:N}")</text>);

                    column.Bound(a => a.NewOverdue).Width(130).HtmlAttributes(new { @class = "GridColumnRightAlign" }).Title("New Overdue")
                        .Aggregate(aggreages => aggreages.Sum())
                .Format("{0:N}")
                .FooterTemplate(@<text>@item.Sum.Format("{0:N}")</text>)
                .GroupFooterTemplate(@<text>@item.Sum.Format("{0:N}")</text>);

                    column.Bound(a => a.DifferenceAmount).Width(130).HtmlAttributes(new { @class = "GridColumnRightAlign" }).Title("Difference Amount")
                        .Aggregate(aggreages => aggreages.Sum())
                .Format("{0:N}")
                .FooterTemplate(@<text>@item.Sum.Format("{0:N}")</text>)
                .GroupFooterTemplate(@<text>@item.Sum.Format("{0:N}")</text>);

                })
                .Groupable(settings => settings.Groups(groups =>
                {
                    groups.Add(g => g.Zone_Name);
                    groups.Add(g => g.Reg_Name);

                }).Visible(false))
                .Scrollable(scroll => scroll.Height(300))


)
</div>
<script type="text/javascript">

    function RSFMenu(goFor) {
        window.location.replace(Helper.Menu("../../", goFor));
        return false;
    } 

</script>
