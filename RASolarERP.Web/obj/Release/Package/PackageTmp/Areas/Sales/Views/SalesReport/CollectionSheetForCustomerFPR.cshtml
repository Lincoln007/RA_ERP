<script type="text/javascript">
    var firstTime = true;
    function onDataBinding(e) {
        if (firstTime) {
            e.preventDefault();
            firstTime = false;
        }
        else {
            e.data = {
                customerFPR: $('#CustomerFPR').val(),
            };
        }
    }

    function onError(e) {
        e.preventDefault();
        alert("CustomerFPR is Missing for some Customers which is Invalid for ALL Option! Please set FPR and try again for All Option.");
    }

</script>
@model IEnumerable<RASolarERP.DomainModel.SalesModel.CollectionSheetForCustomerFPR>
@{
    ViewBag.Title = "Collection Sheet For Customer FPR.";


    Layout = "~/Areas/Sales/Views/Shared/_SalesLayout.cshtml";
    if (false)
    {
    <script src="../../../../Scripts/jquery-1.5.1.min.js" type="text/javascript"></script>
    <script src="../../../../Scripts/RASolarCustomFunction.js" type="text/javascript"></script>    
    }
}
@section TopMenu
{
    @Html.Partial((String)ViewBag.TopMenu)
}
@section LoginInfo
{
    <table cellpadding="0" cellspacing="0" border="0" style="text-align: right;" width="100%">
        <tr>
            <td style="width: 20%" align="left">
                @ViewBag.LocationTitle&nbsp; @ViewBag.Location
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.ZoneTitle&nbsp; @ViewBag.ZoneName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.RegionTitle&nbsp; @ViewBag.RegionName
            </td>
            <td style="width: 40%" align="left">
                @ViewBag.UnitTitle&nbsp; @ViewBag.UnitName
            </td>
        </tr>
    </table>
}
<table cellpadding="0" cellspacing="3" border="0" width="100%" id="reportMode">
    <tr>
        <td style="width: 33%;">
            <table cellpadding="0" cellspacing="0" border="0" width="100%">
                <tr>
                    <td align="left">Customer FPR:
                    </td>
                    <td align="left">
                         @Html.DropDownList("CustomerFPR", new SelectList(@ViewBag.CustomerFPR, "EmployeeID", "EmployeeName"), "---ALL---", new { @class = "TaDaDropDownFieldSmall" })
                    </td>
                </tr>
            </table>
        </td>
        <td style="width: 33%;">
            <table cellpadding="0" cellspacing="0" border="0" width="100%">
                <tr>
                    <td align="left">
                        <input type="submit" value="Show" id="btnShowCollectionSheetForCustomerFPR" />
                    </td>
                </tr>
            </table>
        </td>
    </tr>
</table>

<div class="DataGridXScroll">
    @(Html.Telerik().Grid(Model)
    .Name("gvCollectionSheetForCustomerFPR")
    .DataKeys(keys => keys.Add(k => k.CustomerCode))
    .Columns(column =>
    {
        column.Bound(c => c.CustomerCode).Title("Customer ID").Width(90);
        column.Bound(c => c.CustomerName).Title("Customer Name").Width(180);
        column.Bound(c => c.Village).Width(90);
        column.Bound(c => c.SystemSize).Width(50).Title("WP");
        column.Bound(c => c.ODCustomerGrade).Width(60).Title("Customer Grade");
        column.Bound(c => c.ScheduledCollectionDay).Title("Collection Day").Width(60);
        column.Bound(c => c.CurrentReceivable).Format("{0:0}").HtmlAttributes(new { @class = "GridColumnRightAlign" }).Width(60).Title("CM Rec");
        column.Bound(c => c.OverdueReceivable).Format("{0:0}").HtmlAttributes(new { @class = "GridColumnRightAlign" }).Width(60).Title("OD Rec");
        column.Bound(c => c.TotalReceivable).Format("{0:0}").HtmlAttributes(new { @class = "GridColumnRightAlign" }).Width(90).Title("Total Rec");
    })

       .DataBinding(dbBindings => dbBindings.Ajax().Select("GetCollectionSheetForCustomerFPR", "SalesReport"))
       .ClientEvents(events =>
       {
           events.OnDataBinding("onDataBinding");
           events.OnError("onError");
       })
       .Scrollable(scroll => scroll.Height(300))
       .Pageable(pages => pages.PageSize(100))
       .Selectable()
       .ToolBar(commands =>
          {
              commands.Custom().HtmlAttributes(new { id = "exportCollectionSheetToPdf", onclick = "return SetParamaterForPdfCollectionSheet();" }).Text("Export To PDF").Action("ExportToPdfCollectionSheet1", "SalesReport", new { page = 1, groupby = "~", orderby = "~", filter = "~", customerFPR = "~" });
          })
       .Footer(true)
       )
</div>

<script type="text/javascript">


    $('#btnShowCollectionSheetForCustomerFPR').click(function () {

        var customerFPRName = $('#CustomerFPR').val();
        var params = {
            customerFPR: $('#CustomerFPR').val(),
        };

        var grid = $('#gvCollectionSheetForCustomerFPR').data("tGrid");
        grid.rebind(params);

    });


    function SetParamaterForPdfCollectionSheet() {

        var customerFPR = $('#CustomerFPR').val();

        var grid = $("#gvCollectionSheetForCustomerFPR").data("tGrid");
        var $exportToPdf = $('#exportCollectionSheetToPdf');
        var href = $exportToPdf.attr("href");

        href = href.replace(/page=([^&]*)/, 'page=' + grid.currentPage);
        href = href.replace(/groupby=([^&]*)/, 'groupby=' + (grid.groupBy || '~'));
        href = href.replace(/orderby=([^&]*)/, 'orderby=' + (grid.orderBy || '~'));
        href = href.replace(/filter=([^&]*)/, 'filter=' + (grid.filterBy || '~'));
        href = href.replace(/customerFPR=([^&]*)/, 'customerFPR=' + (customerFPR || '~'));


        $exportToPdf.attr("href", href);

        return true;

    }


    function RSFMenu(goFor) {
        window.location.replace(Helper.Menu("../../", goFor));
        return false;
    } 
 

</script>