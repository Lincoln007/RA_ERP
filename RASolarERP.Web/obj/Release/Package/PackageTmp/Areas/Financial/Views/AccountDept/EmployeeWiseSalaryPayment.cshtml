<script type="text/javascript">

    var firstTime = true;
    function onDataBinding(e) {
        if (firstTime == true) {
            e.preventDefault();
            firstTime = false;
        }
    }

    function onError(e) {
        e.preventDefault();
    }

</script>

@{
    ViewBag.Title = "Employee Wise Salary Payment";
    Layout = "~/Areas/Financial/Views/Shared/_AccountingLayout.cshtml";

    if (false)
    {
    <script src="../../../../Scripts/jquery-1.5.1.min.js" type="text/javascript"></script>
    }
}
@section TopMenu
{
    @Html.Partial((String)ViewBag.TopMenu)
}
@section LoginInfo
{
    <table cellpadding="0" cellspacing="0" border="0" style="text-align: right;" width="100%">
        <tr>
            <td style="width: 20%" align="left">
                @ViewBag.ZoneTitle&nbsp; @ViewBag.ZoneName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.RegionTitle&nbsp; @ViewBag.RegionName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.UnitTitle&nbsp; @ViewBag.UnitName
            </td>
            <td style="width: 40%" align="left">
                @ViewBag.OpenMonthYear
            </td>
        </tr>
    </table>
}

<table border="0" cellpadding="0" cellspacing="0" width="100%">
    <tr>
        <td>
            <table border="0" cellpadding="0" cellspacing="4" width="100%">
                <tr>
                    <td width="50%">
                        <table border="0" cellpadding="0" cellspacing="0" width="100%">
                            <tr>
                                <td style="width: 120px;">Payment from:
                                </td>
                                <td>
                                    @Html.DropDownList("ddlPaymentFrom", new SelectList(ViewBag.PaymentFrom, "Display", "Value"), "--Select--", new { @style = "width:157px; float:left;" })
                                </td>
                            </tr>
                        </table>
                    </td>
                    <td width="50%">
                        <table border="0" cellpadding="0" cellspacing="0" width="100%">
                            <tr>
                                <td style="width: 120px;">List Of Bank Account:
                                </td>
                                <td>
                                    @Html.DropDownList("ddlListOfBankAccount", Enumerable.Empty<SelectListItem>(), "--Select--", new { @style = "width:195px;" })
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>
                <tr>
                    <td width="50%">
                        <table border="0" cellpadding="0" cellspacing="0" width="100%">
                            <tr>
                                <td style="width: 120px;">Transaction Date:</td>
                                <td>
                                    <input id="txtTransactionDate" type="text" name="txtTransactionDate" value="@ViewBag.TransactionOpenDate" readonly="readonly" style="width:150px; float:left;"/>
                                </td>
                            </tr>
                        </table>
                    </td>
                    <td width="50%">
                        <table border="0" cellpadding="0" cellspacing="0" width="100%">
                            <tr>
                                <td style="width: 120px;">Project:
                                </td>
                                <td>
                                    @Html.DropDownList("ddlProject", new SelectList(ViewBag.Project, "ProjectCode", "ProjectName", "100200"), "--Select--", new { @class = "VoucherDropDown", @disabled = true })
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>
                <tr>
                    <td align="left">
                        <input id="btnSubmitAccountInfo" type="submit" value="Show Salary Payment List" />
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        @(Html.Telerik().Grid<RASolarERP.DomainModel.AMSModel.EmployeeWiseSalaryPayment>()
                         .Name("gvEmployeeWiseSalaryPayment")
                         .DataKeys(keys => keys.Add(k => k.EmployeeID))
                         .Columns(column =>
                         {
                             column.Bound(s => s.EmployeeID).FooterTemplate(@<b>Total:</b>);
                             column.Bound(s => s.EmployeeName);
                             column.Bound(s => s.YearMonth);
                             column.Bound(s => s.SalaryOtherThanTADAAmount).HtmlAttributes(new { @class = "GridColumnRightAlign" }).Title("Salary Amount")
                                 .FooterTemplate(@<b id='salaryOtherThanTADAAmount'></b>);
                             column.Bound(s => s.TADAAmount).HtmlAttributes(new { @class = "GridColumnRightAlign" })
                                 .FooterTemplate(@<b id='tADAAmount'></b>);
                             column.Bound(s => s.BonusAmount).HtmlAttributes(new { @class = "GridColumnRightAlign" })
                                 .FooterTemplate(@<b id='bonusAmount'></b>);
                             column.Bound(s => s.TotalSalaryAmount).HtmlAttributes(new { @class = "GridColumnRightAlign" }).Title("Total Paybale Amount")
                                 .FooterTemplate(@<b id='totalAmount'></b>);
                             column.Bound(s => s.EmployeeID).ClientTemplate("<input id=\"<#=EmployeeID#>\" type=\"checkbox\" name=\"salaryAmount\" value=\"<#=TotalSalaryAmount#>\" onclick =\"return getTotalSalary($(this), '<#= SalaryOtherThanTADAAmount #>','<#= TADAAmount #>','<#= BonusAmount #>')\" />").Width(100).Title("Paid / Not Paid");
                             //column.Template(@<input id="@(item.EmployeeID)" type="checkbox" name="salaryAmount" value="@(item.TotalSalaryAmount)" onclick ="return getTotalSalary($(this), '@item.SalaryOtherThanTADAAmount    ','@item.TADAAmount    ','@item.BonusAmount    ')" />).Width(100).Title("Paid / Not Paid");
                         })
                            .DataBinding(dbBindings => dbBindings.Ajax().Select("LoadEmployeeWiseSalaryPayment", "AccountDept"))
                            .ClientEvents(events =>
                            {
                                events.OnDataBinding("onDataBinding");
                                events.OnError("onError");
                            })
                            .Selectable()
                            //.Pageable(pages => pages.PageSize(100))
                            .Scrollable(scroll => scroll.Height(350))
                            .Footer(true)
                        )
                    </td>
                </tr>
            </table>
        </td>
    </tr>
    <tr>
        <td style="float: right;">
            <input id="btnSave" type="button" value="Save" name="saveButton" />
        </td>
    </tr>
</table>


<script type="text/javascript">

    $(document).ready(function () {

        $("#btnSubmitAccountInfo").click(function () {

            paymentType = $("#ddlPaymentFrom").val();

            if (paymentType == "") {
                Helper.AlertMessage("", "Please Select Payment Option");
                return false;
            }

            var params = {
                paymentType: paymentType
            };

            var grid = $("#gvEmployeeWiseSalaryPayment").data("tGrid");
            grid.dataSource._data = [];
            grid.ajaxRequest(params);

        });

        $('#btnSave').click(function () {

            var totalAmount = $.trim($('#totalAmount').text());

            if (totalAmount == "" || totalAmount == "0") {
                Helper.AlertMessage("", "Select Employee For Payment");
                return false;
            }
            else if ($("#ddlPaymentFrom").val() == "") {
                Helper.AlertMessage("", "Select Payment Type");
                return false;
            }
            else if ($("#ddlListOfBankAccount").val() == "") {
                Helper.AlertMessage("", "Select Payment Type");
                return false;
            }

            var bankAccount = $('#ddlListOfBankAccount').val();
            var paymentFrom = $('#ddlPaymentFrom').val();
            var transactionDate = $('#txtTransactionDate').val();
            var projectCode = $('#ddlProject').val();

            var totlalSalaryOtherThanTADAAmount = $('#salaryOtherThanTADAAmount').text();
            var totalTADAAmount = $('#tADAAmount').text();
            var totalBonusAmount = $('#bonusAmount').text();

            var mrrGridLength = $('#gvEmployeeWiseSalaryPayment').data('tGrid').data.length;
            var checkedDataOrNot = false;


            var objCashBankVoucher = {
                ProjectCode: projectCode,
                TransactionDate: transactionDate
            };

            var lstOtherVoucher = new Array();
            var lstEmployeeWiseSalary = new Array();

            if (totlalSalaryOtherThanTADAAmount != "" && totlalSalaryOtherThanTADAAmount != "0") {
                lstOtherVoucher.push({
                    AccountNo: '204010150',
                    Particulars: 'Salary Payable Paid',
                    Amount: totlalSalaryOtherThanTADAAmount,
                    ProjectCode: projectCode,
                    TransactionDate: transactionDate,
                    TransactionType: "DR"
                });
            }

            if (totalBonusAmount != "" && totalBonusAmount != "0") {
                lstOtherVoucher.push({
                    AccountNo: '204010155',
                    Particulars: 'Festival Bonus Payable Paid',
                    Amount: totalBonusAmount,
                    ProjectCode: projectCode,
                    TransactionDate: transactionDate,
                    TransactionType: "DR"
                });
            }

            if (totalTADAAmount != "" && totalTADAAmount != "0") {
                lstOtherVoucher.push({
                    AccountNo: '204010175',
                    Particulars: 'TADA Amount Payable Paid',
                    Amount: totalTADAAmount,
                    ProjectCode: projectCode,
                    TransactionDate: transactionDate,
                    TransactionType: "DR"
                });
            }

            if (totalAmount != "" && totalAmount != "0") {
                lstOtherVoucher.push({
                    AccountNo: $('#ddlListOfBankAccount').val(),
                    Particulars: 'Salary Advice Paid',
                    Amount: totalAmount,
                    ProjectCode: projectCode,
                    TransactionDate: transactionDate,
                    TransactionType: "CR"
                });
            }


            var i = 0;

            for (i = 0; i <= mrrGridLength; i++) {

                var tr = $("#gvEmployeeWiseSalaryPayment tbody tr:eq(" + i + ")");

                checkedDataOrNot = tr.find("td:eq(7)").find('input');

                if (checkedDataOrNot.is(':checked') == true) {

                    lstEmployeeWiseSalary.push({

                        EmployeeID: $.trim(tr.find("td:eq(0)").text()),
                        EmployeeName: $.trim(tr.find("td:eq(1)").text()),
                        YearMonth: $.trim(tr.find("td:eq(2)").text()),
                        SalaryOtherThanTADAAmount: $.trim(tr.find("td:eq(3)").text()),
                        TADAAmount: $.trim(tr.find("td:eq(4)").text()),
                        BonusAmount: $.trim(tr.find("td:eq(5)").text()),
                        TotalSalaryAmount: $.trim(tr.find("td:eq(6)").text()),
                        ProjectCode: projectCode,
                        TransactionDate: transactionDate

                    });

                    //yearMonth = $.trim(tr.find('td:eq(2)').text());
                }
            }

            //$("#gvEmployeeWiseSalaryPayment table > tbody tr").each(function () {

            //    if ($("#" + $(this).find("td:eq(0)").text()).is(':checked')) {
            //        lstEmployeeWiseSalary.push({
            //            EmployeeID: $(this).find("td:eq(0)").text(),
            //            EmployeeName: $(this).find("td:eq(1)").text(),
            //            YearMonth: $(this).find("td:eq(2)").text(),
            //            SalaryOtherThanTADAAmount: $(this).find("td:eq(3)").text(),
            //            TADAAmount: $(this).find("td:eq(4)").text(),
            //            BonusAmount: $(this).find("td:eq(5)").text(),
            //            TotalSalaryAmount: $(this).find("td:eq(6)").text()
            //        });
            //    }
            //});

            $.ajax({
                type: "POST",
                url: '@Url.Action("SaveEmployeeWiseSalaryPayment", "AccountVoucher")',
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({ objCashBankVoucher: objCashBankVoucher, lstOtherVoucher: lstOtherVoucher, lstEmployeeWiseSalary: lstEmployeeWiseSalary, voucherType: "P" }),
                cache: false,
                success: function (data) {
                    if (data[0].messageCode == "success") {
                        //Helper.AlertMessage("", data[0].message);
                        alert("Save Is Succeed");
                        ClearAllControl();
                    }
                    else {
                        Helper.AlertMessage("", data[0].message);
                    }
                },
                error: function () {
                    Helper.AlertMessage("", "Connection Failed. Please Try Again");
                }
            });
        });


        $('#ddlPaymentFrom').change(function () {

            var paymentType = $(this).val();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetAccountForEmployeeWiseSalaryPayment", "AccountDept")',
                data: { paymentType: paymentType },
                cache: false,
                success: function (data) {
                    $('#ddlListOfBankAccount').get(0).options.length = 0;
                    $.map(data, function (item) {
                        $('#ddlListOfBankAccount').get(0).options[$('#ddlListOfBankAccount').get(0).options.length] = new Option(item.AccountName, item.AccountNo);
                    });
                },
                error: function () {
                }
            });
            
            // start for doing o for tatalamount, tada etc in footer

            $('#gvEmployeeWiseSalaryPayment tbody tr').each(function () {

                $(this).find("td:eq(7)").find('input').attr('checked', false);
            });

              totalSalaryAmount = 0;
              totlalSalaryOtherThanTADAAmount = 0;
              totalTADAAmount = 0;
              totalBonusAmount = 0;
           // $('.checkboxForAmount').is(':checked', false);
            $('#totalAmount').text('');
            $('#salaryOtherThanTADAAmount').text('');
            $('#tADAAmount').text('');
            $('#bonusAmount').text('');
            $('#salaryOtherThanTADAAmount').val("0");
            $('#tADAAmount').val("0");
            $('#bonusAmount').val("0");
            $('#totalAmount').val("0");

            // end for doing o for tatalamount, tada etc in footer
        });
    });

    var totalSalaryAmount = 0;
    var totlalSalaryOtherThanTADAAmount = 0;
    var totalTADAAmount = 0;
    var totalBonusAmount = 0;

    function getTotalSalary(obj, salaryOtherThanTADAAmount, tADAAmount, bonusAmount) {

        if (obj.is(':checked')) {
            totalSalaryAmount = parseFloat(totalSalaryAmount) + parseFloat(obj.val());
            totlalSalaryOtherThanTADAAmount = parseFloat(totlalSalaryOtherThanTADAAmount) + parseFloat(salaryOtherThanTADAAmount);
            totalTADAAmount = parseFloat(totalTADAAmount) + parseFloat(tADAAmount);
            totalBonusAmount = parseFloat(totalBonusAmount) + parseFloat(bonusAmount);
        }
        else {
            if (totalSalaryAmount != 0) {
                totalSalaryAmount = parseFloat(totalSalaryAmount) - parseFloat(obj.val());
                totlalSalaryOtherThanTADAAmount = parseFloat(totlalSalaryOtherThanTADAAmount) - parseFloat(salaryOtherThanTADAAmount);
                totalTADAAmount = parseFloat(totalTADAAmount) - parseFloat(tADAAmount);
                totalBonusAmount = parseFloat(totalBonusAmount) - parseFloat(bonusAmount);
            }
        }
        $('#totalAmount').text(totalSalaryAmount);
        $('#salaryOtherThanTADAAmount').text(totlalSalaryOtherThanTADAAmount);
        $('#tADAAmount').text(totalTADAAmount);
        $('#bonusAmount').text(totalBonusAmount);

    }
   


    function ClearAllControl() {
        $('.checkboxForAmount').is(':checked', false);
        $('#ddlPaymentFrom').val("");
        $('#salaryOtherThanTADAAmount').val("0");
        $('#tADAAmount').val("0");
        $('#bonusAmount').val("0");
        $('#totalAmount').val("0");

        var href = $('.t-refresh').attr('href');
        window.location.href = href;
    }

    function RSFMenu(goFor) {
        window.location.replace(Helper.Menu("../../", goFor));
        return false;
    }

</script>
