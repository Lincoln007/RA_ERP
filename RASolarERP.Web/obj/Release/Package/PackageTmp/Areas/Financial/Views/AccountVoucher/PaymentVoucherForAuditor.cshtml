<script type="text/javascript">

    var firstTime = true;

    function onDataBindingSubLedger(e) {
        if (firstTime) {
            e.preventDefault();
            firstTime = false;
        }
    }

    function onErrorSubLedger(e) {
        e.preventDefault();
    }


</script>

@{
    ViewBag.Title = "Payment Voucher For Auditor";
    Layout = "~/Areas/Financial/Views/Shared/_AccountingLayout.cshtml";


    if (false)
    {
    <script src="../../../../Scripts/jquery-1.5.1.min.js" type="text/javascript"></script>
    <script src="../../../../Scripts/RASolarCustomFunction.js" type="text/javascript"></script>    
    }
}
@section TopMenu
{
    @Html.Partial((String)ViewBag.TopMenu)
}
@section LoginInfo
{
    <table cellpadding="0" cellspacing="0" border="0" style="text-align: right;" width="100%">
        <tr>
            <td style="width: 20%" align="left">
                @ViewBag.ZoneTitle&nbsp;@ViewBag.ZoneName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.RegionTitle&nbsp;@ViewBag.RegionName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.UnitTitle&nbsp;@ViewBag.UnitName
            </td>
            <td style="width: 40%" align="left">&nbsp;
            </td>
        </tr>
    </table>
}

<form id="paymentVoucherForm" method="post" action="AccountVoucher/SavePaymentVoucherForAudit">
    <input id="hfSelectedOtherAccountNumber" type="hidden" />
    <input id="hfSearchOrTransferLocation" type="hidden" value="" />
    <input id="hfSearchLocationCode" type="hidden" value="" />
    <input id="hfResponsiblePersonEmployeeId" type="hidden" value="" />
    <input id="hfTransactionNo" type="hidden" value="" />
    <input id="hfRowNumberForEdit" type="hidden" value="" />
    <input id="hfDimensionValues" type="hidden" value="" />

    <table cellpadding="0" cellspacing="0" border="0" width="100%" id="">
        <tr>
            <td>
                <fieldset>
                    <legend>General Journals - Cash/Bank Voucher</legend>
                    <table cellpadding="0" cellspacing="0" border="0" width="100%" id="">
                        <tr>
                            <td style="width: 33%;" valign="top">
                                <table cellpadding="0" cellspacing="0" border="0" width="100%" id="">
                                    <tr>
                                        <td align="left" class="VoucherTitleWide">Transaction Date:
                                        </td>
                                        <td align="left" class="VoucherInputField">
                                            @(Html.Telerik().DatePicker()
                                          .Name("txtTransactionDate")
                                          .Max(new DateTime(2999, 12, 31))
                                          .Format("dd-MMM-yyyy")
                                        )
                                        </td>
                                    </tr>
                                </table>
                            </td>
                            <td style="width: 33%;" valign="top">
                                <table cellpadding="0" cellspacing="0" border="0" width="100%" id="">
                                    <tr>
                                        <td align="left" class="VoucherTitleWide">Project
                                        </td>
                                        <td align="left" class="VoucherInputField">
                                            @Html.DropDownList("ddlProject", new SelectList(ViewBag.Project, "ProjectCode", "ProjectName", "100200"), "--Select--", new { @class = "VoucherDropDown" })
                                        </td>
                                    </tr>
                                </table>
                            </td>
                            <td style="width: 33%;" valign="top">
                                <table cellpadding="0" cellspacing="0" border="0" width="100%" id="">
                                    <tr>
                                        <td align="left" class="VoucherTitleWide">Transaction No
                                        </td>
                                        <td align="left" class="VoucherInputField">
                                            @Html.TextBox("txtTransactionNo", (string)ViewBag.VoucherTransactionNumber, new { @class = "VoucherTextBox", @readonly = true })
                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </td>
        </tr>
        <tr>
            <td>
                <fieldset>
                    <table cellpadding="0" cellspacing="0" border="0" width="100%" id="">
                        <tr>
                            <td style="width: 33%;" valign="top">
                                <table cellpadding="0" cellspacing="2" border="0" width="100%" id="">
                                    <tr>
                                        <td align="left" class="VoucherTitleWide">Audit Reason
                                        </td>
                                        <td align="left">
                                            @Html.DropDownList("ddlAuditReason", new SelectList(ViewBag.AuditReasons, "ReasonCode", "ReasonDescription"), "--Select--", new { @class = "VoucherDropDown" })
                                        </td>
                                    </tr>
                                    <tr>
                                        <td align="left" class="VoucherTitleWide">Reference Date:
                                        </td>
                                        <td align="left">
                                            @(Html.Telerik().DatePicker()
                                          .Name("txtReferenceDate")
                                          .Max(new DateTime(2999, 12, 31))
                                          .Format("dd-MMM-yyyy")
                                        )
                                        </td>
                                    </tr>
                                </table>
                            </td>
                            <td style="width: 33%;" valign="top">
                                <table cellpadding="0" cellspacing="2" border="0" width="100%" id="">
                                    <tr>
                                        <td align="left" class="VoucherTitleWide">Responsible Person
                                        </td>
                                        <td align="left">
                                            @Html.TextBox("txtResponsiblePerson", "", new { @class = "VoucherTextBox" })
                                            @(Html.Telerik().Window()
                                              .Name("dialogEmployeeSelection")
                                              .Title("Select An Employee")
                                              .ClientEvents(evenets => evenets.OnClose("CloseDialogEmployeeSelection"))
                                              .Draggable(false)
                                              .Resizable(resizing =>
                                                        resizing.Enabled(false)
                                                                .MinHeight(500)
                                                                .MinWidth(970)
                                                                .MaxHeight(500)
                                                                .MaxWidth(970)
                                              )
                                              .Modal(true)
                                              .Buttons(b => b.Close())
                                              .Content(@<p id="LoadEmployeeSelection" style="margin: 0; padding: 0; width: 970px; height: 425px;">
                                              </p>)
                                             .Visible(false)
                                        )
                                        </td>
                                    </tr>
                                    <tr>
                                        <td align="left" class="VoucherTitleWide">Remarks
                                        </td>
                                        <td>
                                            @Html.TextBox("txtRemarks", "", new { maxlength = 100 })
                                        </td>
                                    </tr>
                                </table>
                            </td>
                            <td style="width: 33%;" valign="top">
                                <table cellpadding="0" cellspacing="2" border="0" width="100%" id="">
                                    <tr>
                                        <td align="left" class="VoucherTitleWide">Claim/Correction
                                        </td>
                                        <td align="left">
                                            @Html.TextBox("txtClaimOrCorrection", "", new { @class = "VoucherTextBox" })
                                        </td>
                                    </tr>
                                    <tr>
                                        <td></td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </td>
        </tr>
        <tr>
            <td>
                <fieldset>
                    <legend>Cash/Bank Information</legend>
                    <table cellpadding="0" cellspacing="2" border="0" width="100%" id="">
                        <tr>
                            <td style="width: 66%;" valign="top">
                                <table cellpadding="0" cellspacing="2" border="0" width="100%" id="">
                                    <tr>
                                        <td align="left" class="VoucherTitleWide">Cash/Bank Account
                                        </td>
                                        <td align="left">
                                            @Html.DropDownList("ddlCashOrBankAccount", new SelectList(ViewBag.AccountInfo, "AccountNo", "AccountName", ""), "--Select--", new { @class = "VoucherDropDown" })
                                        </td>
                                    </tr>
                                    <tr>
                                        <td align="left" class="VoucherTitleWide">Amount:
                                        </td>
                                        <td align="left">
                                            @Html.TextBox("txtBankAmount", "", new { @class = "VoucherTextBox" })
                                        </td>
                                    </tr>
                                    <tr>
                                        <td align="left" class="VoucherTitleWide">Particulars:
                                        </td>
                                        <td align="left">
                                            @Html.TextBox("txtBankParticulars", "", new { @class = "VoucherTextBoxBig", maxlength = 100 })
                                        </td>
                                    </tr>
                                </table>
                            </td>
                            <td style="width: 33%;" valign="top">
                                <table cellpadding="0" cellspacing="2" border="0" width="100%" id="">
                                    <tr>
                                        <td colspan="2" align="right">Credit&nbsp;@Html.RadioButton("radioCr", "CR", true)
                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </td>
        </tr>
        <tr>
            <td>
                <fieldset>
                    <table cellpadding="0" cellspacing="2" border="0" width="100%" id="">
                        <tr>
                            <td style="width: 66%;" valign="top">
                                <table cellpadding="0" cellspacing="2" border="0" width="100%" id="">
                                    <tr>
                                        <td align="left" class="VoucherTitleWide">Other Account
                                        </td>
                                        <td align="left">
                                            @Html.TextBox("txtOtherAccount", "", new { @class = "VoucherTextBoxBig", @readonly = true })
                                            @(Html.Telerik().Window().Name("dialogOtherAccountSelection")
                                          .Title("Select other account")
                                          .ClientEvents(events => events.OnClose("ClosedialogOtherAccountSelection"))
                                          .Draggable(false)
                                          .Resizable(resizing => resizing.Enabled(false)
                                                                         .MinHeight(500)
                                                                         .MinWidth(500)
                                                                         .MaxHeight(500)
                                                                         .MaxWidth(550)
                                                                         )
                                          .Modal(true)
                                          .Buttons(b => b.Close())
                                          .Content(@<p id="LoadOtherAccountSelectionWindow" style="height: 400px; width: 550px; padding: 0; margin: 0;">
                                          </p>
                                          )
                                          .Visible(false)
                                     )
                                        </td>
                                    </tr>
                                    <tr>
                                        <td align="left" class="VoucherTitleWide">Amount:
                                        </td>
                                        <td align="left">
                                            @Html.TextBox("txtOtherAmount", "", new { @class = "VoucherTextBox" })
                                            <input type="button" id="btnSubLedger" value="Sub Ledger Head" style="display:none;" class="t-button" />

                                            @(Html.Telerik().Window().Name("dialogOtherAccountSubLedgerHead")
                                              .Title("Sub Ledger Head")
                                              .ClientEvents(events => events.OnClose("ClosingOtherAccountSubledgerDilaogNCalculateSum"))
                                              .Draggable(false)
                                              .Resizable(resizing => resizing.Enabled(false)
                                                                           .MinHeight(500)
                                                                           .MinWidth(490)
                                                                           .MaxHeight(500)
                                                                           .MaxWidth(490)
                                                                            )
                                              .Modal(true)
                                              .Buttons(b => b.Close())
                                              .Content(@<div id="LoadSubledgerDetails" style="height: 465px; width: 483px; padding: 0; margin: 0;">

                                                  @(Html.Telerik().Grid<RASolarERP.DomainModel.AMSModel.SubLedgerHeadDetails>()
                                                        .Name("gvOtherAccountSubLedgerHeadDetails")
                                                        .DataKeys(keys => keys.Add(k => k.DimensionValueID))
                                                        .Columns(column =>
                                                        {
                                                            column.Bound(s => s.DimensionValueID).Hidden(true);
                                                            column.Bound(s => s.DimensionValueDesc).Width(250);
                                                            column.Bound(s => s.DimensionValueID).ClientTemplate("<input type=\"text\" id=\"dimensionValue<#=DimensionValueID#>\" style=\"width:115px;\" onblur=\"CheckAmount(this.value)\" />").Width(125).Title("Amount")
                                                                  .ClientFooterTemplate("<b id=\"TotalDimensionAmount\"></b>");
                                                        })
                                                        .DataBinding(dbBindings => dbBindings.Ajax().Select("SubLedgerHeadDetailsLoad", "AccountVoucher"))
                                                        .ClientEvents(cevents =>
                                                        {
                                                            cevents.OnDataBinding("onDataBindingSubLedger");
                                                            cevents.OnError("onErrorSubLedger");
                                                        })
                                                        .Scrollable(scroll => scroll.Height(350))
                                                        .Footer(true)
                                                  )
                                                  <div style="text-align: right; padding-top: 3px;">
                                                      <input id="btnOkSubLedger" type="button" value="Ok" class="t-button" onclick="return CloseOtherAccountSubLedgerWindow();" />
                                                  </div>
                                              </div>)
                                            .Visible(false)
                                        )


                                        </td>
                                    </tr>
                                    <tr>
                                        <td align="left" class="VoucherTitleWide">Particulars:
                                        </td>
                                        <td align="left">
                                            @Html.TextBox("txtOtherParticulars", "", new { @class = "VoucherTextBoxBig", maxlength = 100 })
                                        </td>
                                    </tr>
                                </table>
                            </td>
                            <td style="width: 33%;" valign="top">
                                <table cellpadding="0" cellspacing="2" border="0" width="100%" id="">
                                    <tr>
                                        <td colspan="2" align="right">Debit&nbsp;@Html.RadioButton("radioDr", "DR", true)
                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </td>
        </tr>
        <tr>
            <td align="left">
                <input type="button" value="Add" id="btnAdd" class="button" />
                <input type="button" value="Edit" id="btnEdit" class="button" />
                <input type="button" value="Cancel" id="btnCancel" class="button" />
            </td>
        </tr>
        <tr>
            <td colspan="2" align="right" style="padding-right: 2px;">Total Dr:&nbsp;<b id="totalDrAmount"></b>&nbsp;&nbsp;&nbsp;Total Cr:&nbsp;<b id="totalCrAmount"></b>
            </td>
        </tr>
        <tr>
            <td>
                @(Html.Telerik().Grid<RASolarERP.DomainModel.HRMSModel.CashOrBankVoucherForAuditorAccountsDetails>()
                         .Name("gvPaymentVoucher")
                         .DataKeys(keys => keys.Add(k => k.AccountNo))
                         .Columns(column =>
                         {
                             column.Bound(m => m.AccountNo).Title("Account No");
                             column.Bound(m => m.AccountName).Title("Account Name");
                             column.Bound(m => m.Particulars).Title("Particulars");
                             column.Bound(m => m.DrAmount).Title("Dr Amount");
                             column.Bound(m => m.CrAmount).Title("Cr Amount");
                             column.Bound(m => m.AccountNo).Title("DrOrCr").Hidden(true);
                             column.Bound(m => m.DimensionCode).Hidden(true);
                             column.Bound(m => m.AccountNo).Title("").Template(@<a href="javascript:void(0)" class="editVoucher">Edit</a>);
                             column.Bound(m => m.AccountNo).Title("").Template(@<a href="javascript:void(0)" class="deleteVoucher">Delete</a>);
                         })
                                    .Selectable()
                                    .Footer(false)
                                 )
            </td>
        </tr>
        <tr>
            <td>
                <table cellpadding="0" cellspacing="2" border="0" width="100%" id="">
                    <tr>
                        <td style="width: 66%;" valign="top">
                            <table cellpadding="0" cellspacing="2" border="0" width="100%" id="">
                                <tr>
                                    <td align="left" class="VoucherTitleWide">General Particulars:
                                    </td>
                                    <td align="left">
                                        @Html.TextBox("txtGeneralParticulars", "", new { @class = "VoucherTextBoxBig", maxlength = 100 })
                                        @(Html.Telerik().Window().Name("dialogEmployeeLocationSelection")
                                          .Title("Select A Location For Load Employee")
                                          .ClientEvents(events => events.OnClose("CloseDialogEmployeeLocationSelection"))
                                          .Draggable(false)
                                          .Resizable(resizing => resizing.Enabled(false)
                                                                         .MinHeight(155)
                                                                         .MinWidth(355)
                                                                         .MaxHeight(500)
                                                                         .MaxWidth(500)
                                                                         )
                                          .Modal(true)
                                          .Buttons(b => b.Close())
                                          .Content(@<p id="LoadEmployeeLocationSelectionWindow" style="height: 153px; width: 342px; padding: 0; margin: 0;">
                                          </p>
                                          )
                                          .Visible(false)
                                     )
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td style="width: 33%;" valign="top"></td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td align="left">
                <input type="submit" value="Save" id="btnPaymentVoucherSave" />
            </td>
        </tr>
    </table>
</form>

<script type="text/javascript">

    var paymentVoucherOtherAccountSubLedger = new Array();
    var editLedgerSubHeads = new Array();
    var remainingSubHeads = new Array();

    $('#btnEdit').attr("disabled", true);

    function ClosedialogOtherAccountSelection(e) {

        $('#hfSelectedOtherAccountNumber').val($('#hfAccountNumber').val());
        $('#txtOtherAccount').val($('#hfAccountName').val());
        $('#hfDimensionValues').val($('#hfAccountDimensionValues').val());

        $('#hfAccountDimensionValues').val("");

        if ($('#hfDimensionValues').val() == "&nbsp;") {
            $('#btnSubLedger').attr("disabled", true);
            $("#txtOtherAmount").attr("disabled", false);
            $('#btnSubLedger').attr("class", '');
            $('#hfAccountDimensionValues').val("");
        }
        else {
            $("#txtOtherAmount").attr("disabled", false);
            $('#btnSubLedger').attr("disabled", false);
            $('#btnSubLedger').attr("class", 't-button');
        }

        $('#LoadOtherAccountSelectionWindow').html('');
    }

    function ClosingOtherAccountSubledgerDilaogNCalculateSum(e) {
    }

    function CloseOtherAccountSubLedgerWindow() {
        $("#txtOtherAmount").val($("#TotalDimensionAmount").text());

        var detailWindow = $("#dialogOtherAccountSubLedgerHead").data("tWindow");
        detailWindow.center().close();
    }

    function LoadOtherAccountDialog() {

        $.ajax({
            type: 'GET',
            url: '@Url.Action("OtherAccountSelectionPartial", "AccountVoucher")',
            data: { projectCode: $("#ddlProject").val() },
            dataType: 'html',
            cache: false,
            success: function (data) {
                $('#LoadOtherAccountSelectionWindow').html(data);
            },
            error: function () {
                alert("Connection Failed. Please Try Again");
            }
        });
    }

    $(document).ready(function () {

        $('#txtOtherAccount').click(function () {
            LoadOtherAccountDialog();

            var detailWindow = $("#dialogOtherAccountSelection").data("tWindow");
            detailWindow.center().open();
        });

        $('#txtResponsiblePerson').click(function () {
            LoadEmployeeSearchWindow();
        });

        $('#txtBankAmount').change(function () {

            if (Helper.IsInt($('#txtBankAmount').val()) == false) {
                alert("Cash Bank Amount Cannot Be Negative/Character");
                $('#txtBankAmount').val("0");
                return false;
            }

            if ($('#txtBankAmount').val() == "")
                $('#totalCrAmount').text("0");
            else
                $('#totalCrAmount').text($('#txtBankAmount').val());
        });

        $('#txtOtherAmount').change(function () {

            if (Helper.IsInt($('#txtOtherAmount').val()) == false) {
                alert("Other Amount Cannot Be Negative/Character");
                $('#txtOtherAmount').val("0");
                return false;
            }
        });

        $('#ddlAuditReason').change(function () {

            var auditReason = $(this).val();
            if (auditReason == "AUDCLAMSET" || auditReason == "EXAMTPAIDC" || auditReason == "FAKEBANKDP" || auditReason == "FAKEBIOINS" || auditReason == "PHYCASHSHT" || auditReason == "UNAUTEXPEN" || auditReason == "UNRECORDIN") {
                $('#txtClaimOrCorrection').attr("disabled", false);
                $('#txtResponsiblePerson').attr("disabled", false);
            }
            else {
                $('#txtClaimOrCorrection').attr("disabled", true);
                $('#txtResponsiblePerson').attr("disabled", true);
            }
        });

        $('#btnAdd').click(function () {

            if ($('#txtOtherAccount').val() == '') {
                alert('Please insert Other Account.');
                return false;
            }
            else if ($('#txtOtherAmount').val() == '') {
                alert('Please insert Amount.');
                return false;
            }
            else if ($('#txtOtherParticulars').val() == '') {
                alert('Please insert Particulars.');
                return false;
            }

            var otherAccount = $('#hfSelectedOtherAccountNumber').val();
            var otherAccountName = $('#txtOtherAccount').val();
            var otherParticulars = $('#txtOtherParticulars').val();
            var otherAmount = $('#txtOtherAmount').val();
            var dimensionCode = $('#hfDimensionValues').val();

            if ($("#gvPaymentVoucher table > tbody tr").hasClass("t-no-data")) {
                $("#gvPaymentVoucher table > tbody tr.t-no-data").remove();
            }

            var lastGridRow = $("#gvPaymentVoucher tbody tr:last");
            var gridItems = $("#gvPaymentVoucher tbody");
            var lastIsAlternateRow = lastGridRow.hasClass("t-alt");

            var editAnchor = "<a href=\"javascript:void(0)\" class=\"editVoucher\">Edit</a>";
            var deleteAnchor = "<a href=\"javascript:void(0)\" class=\"deleteVoucher\">Delete</a>";

            var rowClass = "";
            if (!lastIsAlternateRow)
                rowClass = "t-alt";

            gridItems.append("<tr class='" + rowClass + "'> " +
                             "<td>" + otherAccount + "</td>" +
                             "<td>" + otherAccountName + "</td>" +
                             "<td>" + otherParticulars + "</td>" +
                             "<td class=\"TdAlignRight\">" + otherAmount + "</td>" +
                             "<td class=\"TdAlignRight\">" + "" + "</td>" +
                             "<td class=\"TdDisplayNone\">" + $('#radioDr').val() + "</td>" +
                             "<td class=\"TdDisplayNone\">" + dimensionCode + "</td>" +
                             "<td>" + editAnchor + "</td>" +
                             "<td>" + deleteAnchor + "</td>" +
                             " </tr>");

            TotalCrDrCalculation();

            OtherAccountSubLedgerListCreate();

            $('#btnSubLedger').attr("disabled", false);
            $("#txtOtherAmount").attr("disabled", false);
            $('#btnSubLedger').attr("class", 't-button');
            $("#txtOtherAmount").attr("disabled", false);
            $('#txtOtherAccount').val("");
            $('#txtOtherAmount').val("");
            $('#txtOtherParticulars').val("");
            $('#hfDimensionValues').val("");
        });

        $('#btnEdit').click(function () {

            if ($("#hfRowNumberForEdit").val() == "") {
                alert("No Data Found For Edit");
                return false;
            }

            if ($('#txtOtherAccount').val() == '') {
                alert('Please insert Other Account.');
                return false;
            }
            else if ($('#txtOtherAmount').val() == '') {
                alert('Please insert Amount.');
                return false;
            }
            else if ($('#txtOtherParticulars').val() == '') {
                alert('Please insert Particulars.');
                return false;
            }

            var drOrCr = "", drAmount = "", crAmount = "";
            if ($('#radioDr').is(":checked") == true) {
                drOrCr = $('#radioDr').val();
                drAmount = $('#txtOtherAmount').val();
            }
            //            else if ($('#radioCr').is(":checked") == true) {
            //                drOrCr = $('#radioCr').val();
            //                crAmount = $('#txtOtherAmount').val();
            //            }

            if (drOrCr == "") {
                alert("Please Select Debit/Credit");
                return false;
            }

            var otherAccount = $('#hfSelectedOtherAccountNumber').val();
            var otherAccountName = $('#txtOtherAccount').val();
            var otherParticulars = $('#txtOtherParticulars').val();

            var rowNumner = parseInt($("#hfRowNumberForEdit").val());

            var tr = $("#gvPaymentVoucher table tbody tr:eq(" + rowNumner + ")");

            $(tr).find("td:eq(0)").text(otherAccount);
            $(tr).find("td:eq(1)").text(otherAccountName);
            $(tr).find("td:eq(2)").text(otherParticulars);
            $(tr).find("td:eq(3)").text(drAmount);
            $(tr).find("td:eq(4)").text(crAmount);
            $(tr).find("td:eq(5)").text(drOrCr);

            TotalCrDrCalculation();

            if ($('#hfDimensionValues').val() != "") {
                paymentVoucherOtherAccountSubLedger = remainingSubHeads;
                OtherAccountSubLedgerListCreate();
                editLedgerSubHeads = [];
                remainingSubHeads = [];
            }

            $("#txtOtherAmount").attr("disabled", false);
            $("#gvOtherAccountSubLedgerHeadDetails > .t-grid-content tbody").html("");

            $('#hfDimensionValues').val("");
            $("#hfRowNumberForEdit").val("");
            $('#txtOtherAccount').val("");
            $('#txtOtherAmount').val("");
            $('#txtOtherParticulars').val("");

            $('#btnEdit').attr("disabled", true);
            $('#btnAdd').attr("disabled", false);
            $('#btnSubLedger').attr("disabled", false);
            $("#txtOtherAmount").attr("disabled", false);
            $('#btnSubLedger').attr("class", 't-button');
        });

        $("#btnCancel").click(function () {

            $("#hfRowNumberForEdit").val("");
            $('#txtOtherAccount').val("");
            $('#txtOtherAmount').val("");
            $('#txtOtherParticulars').val("");

            $('#btnEdit').attr("disabled", true);
            $('#btnAdd').attr("disabled", false);

            $("#gvOtherAccountSubLedgerHeadDetails > .t-grid-content tbody").html("");
            $('#hfDimensionValues').val("");
            $('#btnSubLedger').attr("disabled", false);
            $("#txtOtherAmount").attr("disabled", false);
            $('#btnSubLedger').attr("class", 't-button');
            $("#txtOtherAmount").attr("disabled", false);

            editLedgerSubHeads = [];
            remainingSubHeads = [];
        });

        $("#btnSubLedger").click(function () {

            var dimensionValue = $.trim($('#hfDimensionValues').val());

            if (dimensionValue != "") {

                $("#txtOtherAmount").attr("disabled", true);

                var param = {
                    dimensionCode: dimensionValue
                };

                var grid = $("#gvOtherAccountSubLedgerHeadDetails").data("tGrid");
                grid.dataSource._data = [];
                grid.ajaxRequest(param);

                var detailWindow = $("#dialogOtherAccountSubLedgerHead").data("tWindow");
                detailWindow.center().open();
            }
        });

        $("#gvPaymentVoucher").delegate("a.editVoucher", "click", function () {

            var tr = $(this).parent().parent();
            var indexNumber = $(this).parent().parent().index();

            $("#hfRowNumberForEdit").val(indexNumber);

            var accountNumber = $(tr).find("td:eq(0)").text();
            var accountName = $(tr).find("td:eq(1)").text();
            var particulars = $(tr).find("td:eq(2)").text();
            var dimensionCode = $(tr).find("td:eq(6)").text();

            var drOrCrAmount = "";
            var drOrCr = $(tr).find("td:eq(5)").text();

            if ($.trim(drOrCr) == "DR") {
                drOrCrAmount = $(tr).find("td:eq(3)").text();
                $('#radioDr').attr("checked", true);
            }
            //            else if ($.trim(drOrCr) == "CR") {
            //                drOrCrAmount = $(tr).find("td:eq(4)").text();
            //                $('#radioCr').attr("checked", true);
            //            }

            $('#hfSelectedOtherAccountNumber').val(accountNumber);
            $('#hfDimensionValues').val(dimensionCode);
            $('#txtOtherAccount').val(accountName);
            $('#txtOtherAmount').val(drOrCrAmount);
            $('#txtOtherParticulars').val(particulars);

            if (dimensionCode != "") {
                editLedgerSubHeads = [];
                remainingSubHeads = [];
                SubledgerHeadOfOtherAccountEdit();
                $("#txtOtherAmount").attr("disabled", true);
            }

            $('#btnSubLedger').attr("disabled", true);
            $("#txtOtherAccount").attr("disabled", true);
            $('#btnSubLedger').attr("class", '');

            $('#btnEdit').attr("disabled", false);
            $('#btnAdd').attr("disabled", true);
        });

        $("#gvPaymentVoucher").delegate("a.deleteVoucher", "click", function () {

            var parentAccount = $(this).parent().parent().find("td:eq(0)").text()

            var len = paymentVoucherOtherAccountSubLedger.length, i = 0;
            for (i = 0; i < len; i++) {
                if (paymentVoucherOtherAccountSubLedger[i].ParentAccount == parentAccount) {
                    editLedgerSubHeads.push(paymentVoucherOtherAccountSubLedger[i]);
                }
                else {
                    remainingSubHeads.push(paymentVoucherOtherAccountSubLedger[i]);
                }
            }
            paymentVoucherOtherAccountSubLedger = remainingSubHeads;
            editLedgerSubHeads = [];
            remainingSubHeads = [];

            $(this).parent().parent().remove();
            TotalCrDrCalculation();
        });

        $("#paymentVoucherForm").submit(function () {

            if (FormValidationCheck() == false) {
                return false;
            }

            var transactionNo = $("#txtTransactionNo").val()
            var transactionDate = $('#txtTransactionDate').val();
            var projectCode = $('#ddlProject').val();
            var cashOrBankAccount = $('#ddlCashOrBankAccount').val();
            var bankAmount = $('#txtBankAmount').val();
            var bankParticulars = $('#txtBankParticulars').val();

            var otherAccount = $('#txtOtherAccount').val();
            var otherAmount = $('#txtOtherAmount').val();
            var otherParticulars = $('#txtOtherParticulars').val();
            var generalParticulars = $('#txtGeneralParticulars').val();

            var reasonCode = $('#ddlAuditReason').val();
            var refVoucherDate = null;
            var responsiblePersonEmployee = null;
            var claimOrCorrection = null;
            var remarks = $('#txtRemarks').val();

            if ($('#hfResponsiblePersonEmployeeId').val() != "")
                responsiblePersonEmployee = $('#hfResponsiblePersonEmployeeId').val();

            if ($('#txtClaimOrCorrection').val() != "")
                claimOrCorrection = $('#txtClaimOrCorrection').val();

            if ($('#txtReferenceDate').val() != "") {
                refVoucherDate = $('#txtReferenceDate').val();
            }

            var transactionType = "";

            if ($("#radioCr").is(":checked") == true) {
                transactionType = $("#radioCr").val();
            }

            var objCashBankVoucher = {

                TransactionNo: transactionNo,
                ProjectCode: projectCode,
                TransactionDate: transactionDate,
                GeneralParticulars: generalParticulars
            };

            var lstOtherVoucher = new Array();

            lstOtherVoucher.push({

                TransactionNo: transactionNo,
                AccountNo: cashOrBankAccount,
                Particulars: bankParticulars,
                Amount: bankAmount,
                ProjectCode: projectCode,
                TransactionDate: transactionDate,
                TransactionType: transactionType
            });

            if ($("#radioDr").is(":checked") == true) {
                transactionType = $("#radioDr").val();
            }

            $("#gvPaymentVoucher table > tbody tr").each(function () {

                lstOtherVoucher.push({

                    TransactionNo: transactionNo,
                    AccountNo: $(this).find("td:eq(0)").text(),
                    Particulars: $(this).find("td:eq(2)").text(),
                    Amount: $(this).find("td:eq(3)").text(),
                    ProjectCode: projectCode,
                    TransactionDate: transactionDate,
                    TransactionType: transactionType
                });

            });

            var voucherTransactionAudit = {

                TransDate: transactionDate,
                ProjectCode: projectCode,
                TransNo: transactionNo,
                ReasonCode: reasonCode,
                RefVoucherDate: refVoucherDate,
                ResponsibleEmployeeID: responsiblePersonEmployee,
                Remarks: remarks
            };

            var subLedgerHeadDetailsList = new Array();
            var dimensionValue = "", subledgerLength = paymentVoucherOtherAccountSubLedger.length, i = 0;

            //if (subledgerLength > 0) {

            //    for (i = 0; i < subledgerLength; i++) {
            //        subLedgerHeadDetailsList.push({
            //            DimensionValueID: paymentVoucherOtherAccountSubLedger[i].DimensionAccount,
            //            DimensionValueDesc: paymentVoucherOtherAccountSubLedger[i].DimensionName,
            //            DimensionAmount: paymentVoucherOtherAccountSubLedger[i].DimensionValue,
            //            AccountNo: paymentVoucherOtherAccountSubLedger[i].ParentAccount,
            //            DimensionCode: paymentVoucherOtherAccountSubLedger[i].OriginDimensionAccount
            //        });
            //    }
            //}


            var transactionType = "";

            if ($("#radioCr").is(":checked") == true) {
                transactionType = $("#radioCr").val();
            }

            if (subledgerLength > 0) {
                for (i = 0; i < subledgerLength; i++) {
                    subLedgerHeadDetailsList.push({
                        DimensionValueID: responsiblePersonEmployee,
                        DimensionValueDesc: paymentVoucherOtherAccountSubLedger[i].DimensionName,
                        DimensionAmount: $('#txtBankAmount').val(),
                        AccountNo: cashOrBankAccount,
                        DimensionCode: paymentVoucherOtherAccountSubLedger[i].OriginDimensionAccount,
                        TransactionType: transactionType
                    });
                }
            }


            if ($("#radioDr").is(":checked") == true) {
                transactionType = $("#radioDr").val();
            }

            $("#gvPaymentVoucher table > tbody tr").each(function () {

                subLedgerHeadDetailsList.push({
                    DimensionValueID: responsiblePersonEmployee,
                    DimensionValueDesc: paymentVoucherOtherAccountSubLedger[0].DimensionName,
                    AccountNo: $(this).find("td:eq(0)").text(),
                    DimensionCode: paymentVoucherOtherAccountSubLedger[0].OriginDimensionAccount,
                    DimensionAmount: $(this).find("td:eq(3)").text(),
                    TransactionType: transactionType
                });

            });



            $.ajax({

                type: "POST",
                url: '@Url.Action("SavePaymentVoucherForAudit", "AccountVoucher")',
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({ objCashBankVoucher: objCashBankVoucher, lstOtherVoucher: lstOtherVoucher, objvoucherTransactionAudit: voucherTransactionAudit, voucherType: "P", lstSubLedgerHeadDetails: subLedgerHeadDetailsList }),
                cache: false,
                success: function (data) {
                    if (data[0].messageCode == "success") {
                        alert(data[0].message);
                        $('#hfTransactionNo').val(data[0].id);
                        ClearAllControl();
                    }
                    else {
                        alert(data[0].message);
                    }
                },
                error: function () {

                }
            });

            return false;
        });
    });

    function TotalCrDrCalculation() {

        var totalDr = 0;
        var totalCr = 0;
        $('#gvPaymentVoucher table > tbody tr').each(function () {
            var DrAmount = $(this).find('td:eq(3)').text().trim();
            var CrAmount = $(this).find('td:eq(4)').text().trim();

            if (DrAmount == '')
                DrAmount = 0;

            if (CrAmount == '')
                CrAmount = 0;

            totalDr = totalDr + parseInt(DrAmount);
            //totalCr = totalCr + parseInt(CrAmount);
        });

        $('#totalDrAmount').html(totalDr);
        //$('#totalCrAmount').html(totalCr);
    }

    function LoadEmployeeSearchWindow() {

        $.ajax({
            type: 'GET',
            url: '@Url.Action("__LoadEmployeeSearchWindow", "../HRMS/EmployeeRegister")',
            dataType: 'html',
            cache: false,
            success: function (data) {
                $('#LoadEmployeeSelection').html(data);
            },
            error: function () {
                alert("Connection Failed. Please Try Again");
            }
        });

        var detailWindow = $("#dialogEmployeeSelection").data("tWindow");
        detailWindow.center().open();
    }

    function CloseDialogEmployeeSelection() {
    }

    function CloseDialogWindowEmployeeLocation() {

        var locationCode = "";
        var locationText = "";
        var regionLocationCode = "";


        if ($('#ddlLocationType').val() == "ho") {
            locationText = "[9000] Head Office";
            locationCode = "9000";
        }
        else if ($('#ddlLocationType').val() == "zone") {
            locationText = $('#ddlZone').find('option:selected').text();
            locationCode = $('#ddlZone').val();
        }
        else if ($('#ddlLocationType').val() == "unit") {
            locationText = $('#ddlUnit').find('option:selected').text();
            locationCode = $('#ddlUnit').val();
            regionLocationCode = $('#ddlRegion').val();
        }

        $('#hfSearchLocationCode').val(locationCode);
        $('#txtSearchLocationCode').val(locationText);
        $('#hfSearchOrTransferLocation').val("");

        var detailWindow = $("#dialogEmployeeLocationSelection").data("tWindow");
        detailWindow.center().close();

        $('#LoadEmployeeLocationSelectionWindow').html('');

        return false;
    }

    function CloseDialogEmployeeLocationSelection(e) {
        $('#LoadEmployeeLocationSelectionWindow').html('');
    }

    function OkCommandEmployeeSelectionWindow(employeeId, employeeName) {

        var detailWindow = $("#dialogEmployeeSelection").data("tWindow");
        detailWindow.center().close();

        $('#hfResponsiblePersonEmployeeId').val(employeeId);
        $('#txtResponsiblePerson').val(employeeName + ' [' + employeeId + ']');

        $('#LoadEmployeeSelection').html('');
        $('#hfSearchLocationCode').val("");

        return false;
    }

    function FormValidationCheck() {

        if ($('#txtTransactionDate').val() == '') {
            alert('Please insert Transaction Date.');
            return false;
        }
        else if ($('#ddlProject').val() == '') {
            alert('Please select Project value.');
            return false;
        }
        else if ($('#ddlAuditReason').val() == '') {
            alert('Please select Audit Reason.');
            return false;
        }
        else if ($('#ddlCashOrBankAccount').val() == '') {
            alert('Please select Cash/Bank Account.');
            return false;
        }
        else if ($('#txtBankAmount').val() == '') {
            alert('Please insert Bank Amount.');
            return false;
        }
        else if ($('#txtBankParticulars').val() == '') {
            alert('Please insert Bank Particulars.');
            return false;
        }
        else if ($('#gvPaymentVoucher table > tbody tr').length == 0 || $("#gvPaymentVoucher table > tbody tr").hasClass("t-no-data")) {
            alert('Please add other account information.');
            return false;
        }
        else if ($('#txtGeneralParticulars').val() == '') {
            alert('Please insert General Particulars.');
            return false;
        }
        else if (parseInt($('#totalCrAmount').text()) != parseInt($('#totalDrAmount').text())) {
            alert('Total Dr Amount and total Cr amount must be same.');
            return false;
        }

        var auditReason = $('#ddlAuditReason').val();
        if (auditReason == "AUDCLAMSET" || auditReason == "EXAMTPAIDC" || auditReason == "FAKEBANKDP" || auditReason == "FAKEBIOINS" || auditReason == "PHYCASHSHT" || auditReason == "UNAUTEXPEN" || auditReason == "UNRECORDIN") {

            if ($('#hfResponsiblePersonEmployeeId').val() == "") {
                alert("Please Select A Responsible Employee");
                return false;
            }
        }

        if (!confirm('Are You Sure that You want to Save this Adjustment Entry.')) {
            return false;
        }

        return true;
    }

    function CheckAmount(amount) {
        var previousAmount = 0;

        if (!Helper.IsInt(amount)) {
            Helper.AlertMessage("", "Negative Value Does Not Allow");
        }

        $("#TotalDimensionAmount").text(CalculateTotalSubledger());
    }

    function CalculateTotalSubledger() {

        var value = "", total = 0;
        $("#gvOtherAccountSubLedgerHeadDetails > .t-grid-content  tbody  tr").each(function () {
            value = $.trim($(this).find("td:eq(2)").find("input").val());

            if (value != "") {
                total += parseInt(value);
            }
        });

        return total;
    }

    function OtherAccountSubLedgerListCreate() {

        var dimensionAccount = "", dimensionName = "", dimensionValue = "", originDimensionAccoutn = "", parentAccount = "";

        originDimensionAccoutn = $('#hfDimensionValues').val();
        parentAccount = $('#hfSelectedOtherAccountNumber').val();

        $("#gvOtherAccountSubLedgerHeadDetails > .t-grid-content  tbody  tr").each(function () {

            dimensionAccount = $(this).find("td:eq(0)").text();
            dimensionName = $(this).find("td:eq(1)").text();
            dimensionValue = $.trim($(this).find("td:eq(2)").find("input").val());

            paymentVoucherOtherAccountSubLedger.push({
                ParentAccount: parentAccount,
                OriginDimensionAccount: originDimensionAccoutn,
                DimensionAccount: dimensionAccount,
                DimensionName: dimensionName,
                DimensionValue: dimensionValue
            });
        });

        $("#gvOtherAccountSubLedgerHeadDetails > .t-grid-content tbody").html("");
    }

    function SubledgerHeadOfOtherAccountEdit() {

        $("#gvOtherAccountSubLedgerHeadDetails > .t-grid-content tbody").html("");

        if ($("#gvOtherAccountSubLedgerHeadDetails > .t-grid-content  tbody tr").hasClass("t-no-data")) {
            $("#gvOtherAccountSubLedgerHeadDetails > .t-grid-content  tbody tr.t-no-data").remove();
        }

        var gridItems = $("#gvOtherAccountSubLedgerHeadDetails > .t-grid-content  tbody");
        var rowClass = "t-alt", tdClassLast = "t-last";

        var parentAccount = $('#hfSelectedOtherAccountNumber').val();

        var len = paymentVoucherOtherAccountSubLedger.length, i = 0;
        for (i = 0; i < len; i++) {
            if (paymentVoucherOtherAccountSubLedger[i].ParentAccount == parentAccount) {
                editLedgerSubHeads.push(paymentVoucherOtherAccountSubLedger[i]);
            }
            else {
                remainingSubHeads.push(paymentVoucherOtherAccountSubLedger[i]);
            }
        }

        for (i = 0; i < editLedgerSubHeads.length; i++) {

            gridItems.append("<tr class='" + ((i % 2 == 0) ? rowClass : "") + "'> " +
                             "<td class=\"TdDisplayNone\" >" + editLedgerSubHeads[i].OriginDimensionAccount + "</td>" +
                             "<td>" + editLedgerSubHeads[i].DimensionName + "</td>" +
                             "<td class = \"'" + tdClassLast + "'\">" + "<input type=\"text\" onblur=\"CheckAmount(this.value)\" style=\"width:115px;\" id=\"dimensionValue" + editLedgerSubHeads[i].DimensionAccount + "\" value = \"" + editLedgerSubHeads[i].DimensionValue + "\" />" + "</td>" +
                             " </tr>");
        }

        var detailWindow = $("#dialogOtherAccountSubLedgerHead").data("tWindow");
        detailWindow.center().open();
    }

    function ClearAllControl() {

        $('#paymentVoucherForm')[0].reset();

        $('#hfSelectedOtherAccountNumber').val("");
        $('#hfSearchOrTransferLocation').val("");
        $('#hfSearchLocationCode').val("");
        $('#hfResponsiblePersonEmployeeId').val("");

        $('#totalDrAmount').text("");
        $('#totalCrAmount').text("");

        $('#gvPaymentVoucher').data().tGrid.total = 0;
        $('#gvPaymentVoucher').data().tGrid.dataBind([]);

        $('#txtTransactionNo').val($('#hfTransactionNo').val());

        paymentVoucherOtherAccountSubLedger = [];
        editLedgerSubHeads = [];
        remainingSubHeads = [];
    }

    function RSFMenu(goFor) {
        window.location.replace(Helper.Menu("../../", goFor));
        return false;
    }

</script>
