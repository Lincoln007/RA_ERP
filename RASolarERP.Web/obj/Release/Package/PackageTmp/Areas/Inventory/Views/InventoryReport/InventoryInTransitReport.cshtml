@using RASolarERP.Model;
@using RASolarERP.Web.Models;
<script type="text/javascript">

    var firstTimeLoad = true;
    function onDataBinding(e) {
        if (firstTimeLoad) {
            e.preventDefault();
            firstTimeLoad = false;
        }
    }

    function onError(e) {
        e.preventDefault();
    }
</script>
@{
    ViewBag.Title = "Stock In - Transit Report";
    Layout = "~/Areas/Inventory/Views/Shared/_InventoryLayout.cshtml";

    if (false)
    {
    <script src="../../../../Scripts/jquery-1.5.1.min.js" type="text/javascript"></script>
    }
}
@section TopMenu
{
    @Html.Partial((String)ViewBag.TopMenu)
}
@section LoginInfo
{
    <table cellpadding="0" cellspacing="0" border="0" style="text-align: right;" width="100%">
        <tr>
            <td style="width: 20%" align="left">
                @ViewBag.ZoneTitle&nbsp; @ViewBag.ZoneName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.RegionTitle&nbsp; @ViewBag.RegionName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.UnitTitle&nbsp; @ViewBag.UnitName
            </td>
            <td style="width: 40%" align="left">
                @ViewBag.OpenMonthYear
            </td>
        </tr>
    </table>
}
@using (Html.BeginForm("InventoryInTransitReport", "InventoryReport", FormMethod.Post, null))
{
    <table cellspacing="0" cellpadding="0" width="100%">
        <tr>
            <td>
                Report Type:
            </td>
            <td align="left" class="IsrlMiddleColumn">
                @Html.DropDownList("ddlReportType", new List<SelectListItem> { 
                    new SelectListItem { Text = "Head Office Summary", Value = "HEADOFFICESUMMERY" },
                    new SelectListItem { Text = "Zone Summary", Value = "ZONESUMMARY" },
                    new SelectListItem{Text="Region Summarty", Value="REGIONSUMMARY"},
                    new SelectListItem { Text = "Unit Summary", Value= "UNITSUMMARY"}
            }, new { @style = "width:150px;" })
            </td>
        </tr>
        <tr>
            <td class="LocationTitle">
                Zone
            </td>
            <td align="left" class="IsrlMiddleColumn">
                @Html.DropDownList("ddlZone", Enumerable.Empty<SelectListItem>(), "--Select--", new { @style = "width:150px;" })
            </td>
            <td class="LocationTitle">
                Region
            </td>
            <td align="left" class="IsrlMiddleColumn">
                @Html.DropDownList("ddlRegion", Enumerable.Empty<SelectListItem>(), "--Select--", new { @style = "width:150px;" })
            </td>
            <td class="LocationTitle">
                Unit
            </td>
            <td align="left" class="IsrlMiddleColumn">
                @Html.DropDownList("ddlUnit", Enumerable.Empty<SelectListItem>(), "--Select--", new { @style = "width:150px;" })
            </td>
        </tr>
        <tr>
            <td align="left" class="IsrlLeftColumn">
                Item Type
            </td>
            <td align="left" class="IsrlMiddleColumn">
                @Html.DropDownList("ddlItemType", new SelectList(ViewBag.ItemType, "ItemTypeID", "Description"), "--Select--", new { @class = "IsrlDropDown" })
            </td>
            <td align="left" class="IsrlMiddleColumn">
                Item Category
            </td>
            <td align="left" class="IsrlMiddleColumn">
                @Html.DropDownList("ddlItemCategory", Enumerable.Empty<SelectListItem>(), new { @class = "IsrlDropDown" })
            </td>
            <td align="left" class="IsrlMiddleColumn">
                Item Name
            </td>
            <td align="left" class="IsrlMiddleColumn">
                @Html.DropDownList("ddlItem", Enumerable.Empty<SelectListItem>(), "--Select--",
                                        new { @class = "IRDropDown" })
            </td>
        </tr>
        <tr>
            <td class="IsrlRightColumn" align="left">
                From Date
            </td>
            <td class="IsrlRightColumn" align="left">
                @(Html.Telerik().DatePicker()
            .Name("txtStartDate")
            .Max(new DateTime(2999, 12, 31))
            .Format("dd-MMM-yyyy")
            )
            </td>
            <td class="IsrlRightColumn" align="left">
                To Date
            </td>
            <td class="IsrlRightColumn" align="left">
                @(Html.Telerik().DatePicker()
                .Name("txtEndDate")
                .Max(new DateTime(2999, 12, 31))
            .Format("dd-MMM-yyyy")
            )
            </td>
        </tr>
        <tr>
            <td align="left">
                <input type="submit" value="Show Report" id="btnTransitReport" onclick="return ShowItemList();" />
            </td>
        </tr>
    </table>
}
<table cellspacing="0" cellpadding="0" width="100%">
    <tr>
        <td>
            @(Html.Telerik().Grid<RASolarERP.DomainModel.InventoryModel.StockInTransitAtGlanceDetails>()
                .Name("gvInvItemInTransit")
                .DataKeys(keys => keys.Add(k => k.ChallanSeqNo))
                .Columns(column =>
                {
                    column.Bound(s => s.ChallanFromLocationName).Title("Challan From Location Name").Width(90);
                    column.Bound(s => s.ChallanFromLocationCode).Title("Challan From Location Code").Width(90);
                    column.Bound(s => s.ChallanToLocationName).Title("Challan To Location Name").Width(90);
                    column.Bound(s => s.ChallanToLocationCode).Title("Challan To Location Code").Width(80);
                    column.Bound(s => s.ChallanDate).Title("Challan Date").Format("{0:dd-MMM-yyyy}").Width(90);
                    column.Bound(s => s.ChallanSeqNo).Title("Challan Seq No").Width(90);
                    column.Bound(s => s.StoreLocationCode).Title("Store Location Code").Width(80);
                    column.Bound(s => s.ItemCode).Title("Item Code").Width(80);
                    column.Bound(s => s.ItemName).Title("Item Name").Width(140);
                    column.Bound(s => s.DeliveryQuantity).HtmlAttributes(new { @class = "GridColumnRightAlign" }).Title("Delivery Quantity").Width(50);
                    column.Bound(s => s.ReceiveQuantity).HtmlAttributes(new { @class = "GridColumnRightAlign" }).Title("Receive Quantity").Width(70);
                    column.Bound(s => s.InTransitQuantity).HtmlAttributes(new { @class = "GridColumnRightAlign" }).Title("In Transit Quantity").Width(50);
                })
                    .DataBinding(settings => settings.Ajax().Select("__loadInvItemInTransit", "InventoryReport"))
                    .ClientEvents(events => events
                            .OnDataBinding("onDataBinding")
                            .OnError("onError")
                            )
                    .Scrollable(scroll => scroll.Height(250))
                    .Selectable()
                    .Pageable(pages=> pages.PageSize(100))
                    .Footer(true)
            )
        </td>
    </tr>
</table>
<script type="text/javascript">

    $('#ddlRegion').attr("disabled", true);
    $('#ddlUnit').attr("disabled", true);
    $('#ddlZone').attr("disabled", true);

    function ShowItemList() {

        var itemDetails = "";
        var locationCode = "";

        if ($('#ddlReportType').val() == "HEADOFFICESUMMERY") {
            locationCode = 9000;
        }
        else if ($('#ddlReportType').val() == "ZONESUMMARY") {
            locationCode = $('#ddlZone').val();
        }
        else if ($('#ddlReportType').val() == "REGIONSUMMARY") {
            locationCode = $('#ddlRegion').val();
        }
        else {
            locationCode = $('#ddlUnit').val();
        }



        var params = {

            itemType: $('#ddlItemType').val(),
            location: locationCode,
            Item: $('#ddlItem').val(),
            fromDate: $('#txtStartDate').val(),
            toDate: $('#txtEndDate').val(),

            itemDetails: itemDetails
        };

        var grid = $('#gvInvItemInTransit').data('tGrid');
        grid.dataSource._data = [];

        grid.ajaxRequest(params);

        return false;
    }

    $('#ddlItemCategory').change(function () {

        var itemCategory = $('#ddlItemCategory').val();

        $.ajax({
            type: 'POST',
            url: '@Url.Action("ItemListByCategory", "InventoryDailyTransaction")',
            data: "{'itemCategory':'" + itemCategory + "'}",
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: false,
            success: function (data) {

                $('#ddlItem').get(0).options.length = 0;
                $('#ddlItem').get(0).options[0] = new Option('--Select--', '');

                $.map(data, function (item) {
                    $('#ddlItem').get(0).options[$('#ddlItem').get(0).options.length] = new Option(item.Display, item.Value);
                });

                if (data[0].IsItASerializableItem == "1") {
                    $('#btnMapSerial').attr('disabled', false);
                }
                else {
                    $('#btnMapSerial').attr('disabled', 'disabled');
                    $('#serialGrid tbody').html('');
                    $('#serialMapForIssue').css('display', 'none');
                }
            },
            error: function () {
                alert("Connection Failed. Please Try Again.");
            }
        });

    });

    LoadZone(this.value);
    $(document).ready(function () {

        $('#ddlReportType').change(function () {
            if (this.value == "HEADOFFICESUMMERY" || this.value == "") {
                $('#ddlZone').attr("disabled", true);
                $('#ddlRegion').attr("disabled", true);
                $('#ddlUnit').attr("disabled", true);
            }
            else if (this.value == "ZONESUMMARY" || this.value == "") {
                $('#ddlZone').attr("disabled", false);
                $('#ddlRegion').attr("disabled", true);
                $('#ddlUnit').attr("disabled", true);
            }
            else if (this.value == "REGIONSUMMARY") {
                $('#ddlZone').attr("disabled", false);
                $('#ddlRegion').attr("disabled", false);
                $('#ddlUnit').attr("disabled", true);

                LoadZone(this.value);
            }
            else if (this.value == "UNITSUMMARY") {
                $('#ddlZone').attr("disabled", false);
                $('#ddlRegion').attr("disabled", false);
                $('#ddlUnit').attr("disabled", false);

                LoadZone(this.value);
            }
        });

        $('#ddlZone').change(function () {

            if ($('#ddlReportType').val() == "ZONESUMMARY" || $('#ddlReportType').val() == "") {
                return false;
            }
            LoadRegion(this.value);
        });

        $('#ddlRegion').change(function () {

            if ($('#ddlReportType').val() == "ZONESUMMARY" || $('#ddlReportType').val() == "") {
                return false;
            }
            LoadUnit(this.value);
        });

    });



    function LoadZone() {

        $.ajax({
            type: "POST",
            url: '@Url.Action("LoadZone", "../RSFSecurity")',
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: false,
            success: function (data) {
                $('#ddlZone').get(0).options.length = 0;
                $('#ddlZone').get(0).options[0] = new Option("--Select--", "0");

                $.map(data, function (item) {
                    $('#ddlZone').get(0).options[$('#ddlZone').get(0).options.length] = new Option(item.Display, item.Value);
                });
            },
            error: function () {
                alert("Failed to load Item");
            }
        });
    }

    function LoadRegion(zoneCode) {

        $.ajax({
            type: "POST",
            url: '@Url.Action("LoadRegion", "../RSFSecurity")',
            data: "{'zoneCode':'" + zoneCode + "'}",
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: false,
            success: function (data) {
                $('#ddlRegion').get(0).options.length = 0;
                $('#ddlRegion').get(0).options[0] = new Option("--Select--", "0");

                $.map(data, function (item) {
                    $('#ddlRegion').get(0).options[$('#ddlRegion').get(0).options.length] = new Option(item.Display, item.Value);
                });
            },
            error: function () {
                alert("Failed to load Item");
            }
        });
    }

    function LoadUnit(regionCode) {

        $.ajax({
            type: "POST",
            url: '@Url.Action("LoadUnit", "../RSFSecurity")',
            data: "{'regionCode':'" + regionCode + "'}",
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: false,
            success: function (data) {
                $('#ddlUnit').get(0).options.length = 0;
                $('#ddlUnit').get(0).options[0] = new Option("--Select--", "0");

                $.map(data, function (item) {
                    $('#ddlUnit').get(0).options[$('#ddlUnit').get(0).options.length] = new Option(item.Display, item.Value);
                });
            },
            error: function () {
                alert("Failed to load Item");
            }
        });
    }
    $('#ddlItemType').change(function () {

        var itemTypeId = $('#ddlItemType').val();

        $.ajax({
            type: 'POST',
            url: '@Url.Action("ItemCategorySubCategoryList", "InventoryDailyTransaction")',
            data: "{'itemTypeId':'" + itemTypeId + "'}",
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            cache: false,
            success: function (data) {
                $('#ddlItemCategory').get(0).options.length = 0;
                $('#ddlItemCategory').get(0).options[0] = new Option('--Select--', '0');

                $.map(data, function (item) {
                    $('#ddlItemCategory').get(0).options[$('#ddlItemCategory').get(0).options.length] = new Option(item.Display, item.Value);
                    $('#hfIsItemSeralizable').val(item.IsSerializable);
                });
            },
            error: function () { alert("Item Does Not Load"); }
        });

    });
    function RSFMenu(goFor) {
        window.location.replace(Helper.Menu("../../", goFor));
        return false;
    } 

</script>
