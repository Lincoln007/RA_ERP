@model IEnumerable<RASolarERP.Model.InventoryDataEntryStatus>
@{  
    if (false)
    {
    <script src="../../../../Scripts/jquery-1.5.1.min.js" type="text/javascript"></script>
    }

    ViewBag.Title = "Inventory Data Entry Status";


    Layout = "~/Areas/Inventory/Views/Shared/_InventoryLayout.cshtml";
}
@section TopMenu
{
    @Html.Partial((String)ViewBag.TopMenu)
}
@section LoginInfo
{
    <table cellpadding="0" cellspacing="0" border="0" style="text-align: right;" width="100%">
        <tr>
            <td style="width: 20%" align="left">
                @ViewBag.ZoneTitle&nbsp; @ViewBag.ZoneName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.RegionTitle&nbsp; @ViewBag.RegionName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.UnitTitle&nbsp; @ViewBag.UnitName
            </td>
            <td style="width: 40%" align="left">
                @ViewBag.OpenMonthYear
            </td>
        </tr>
    </table>
}
<input id="hfIsAuthenticForSave" type="hidden" value="@ViewBag.IsAuthenticForSave" />

<div class="DataGridXScroll">
    @(Html.Telerik().Grid(Model)
    .Name("grvInventoryDataEntryStatus")
    .DataKeys(keys => keys.Add(k => k.LocationCode))
    .Columns(column =>
    {
        column.Bound(i => i.LocationCode).Width(140).HtmlAttributes(new { @class = "GridColumnLeftAlign" });
        column.Bound(i => i.Unit_Name).Width(300).HtmlAttributes(new { @class = "GridColumnLeftAlign" });
        column.Template(@<a href="http://172.25.40.50/MonthlyEntryInventory/InventoryReports.aspx?lc=@item.LocationCode&rt=@ViewBag.ReportType" target="_blank">Show</a>).Width(68);
        column.Bound(i => i.FinalizedByRM).Format("{0:dd-MMM-yy}").Width(140).HtmlAttributes(new { @class = "GridColumnLeftAlign" });
        column.Bound(i => i.FinalizedByZM).Format("{0:dd-MMM-yy}").Width(140).HtmlAttributes(new { @class = "GridColumnLeftAlign" });
        column.Bound(i => i.FinalizedByHO).Format("{0:dd-MMM-yy}").Width(140).HtmlAttributes(new { @class = "GridColumnLeftAlign" });
        column.Template(@<a href="#" onclick="return SaveInventoryEntryStatus('@item.LocationCode','@item.FinalizedByUM','@item.FinalizedByRM','@item.FinalizedByZM','@item.FinalizedByHO');">Save</a>).Width(68);
    }).Selectable()
      .Scrollable(scroll => scroll.Height(300))
)
</div>
<table cellpadding="0" cellspacing="0" border="0" style="padding: 15px;" width="100%">
    <tr>
        <td align="left">
            Total number of Units:&nbsp;&nbsp;@ViewBag.TotalNumberofUnits
        </td>
    </tr>
    <tr>
        <td align="left">
            Entry finalized by UM:&nbsp;&nbsp;@ViewBag.EntryFinalizedbyUM
        </td>
    </tr>
    <tr>
        <td align="left">
            Entry finalized by RM:&nbsp;&nbsp;@ViewBag.EntryfinalizedbyRM
        </td>
    </tr>
    <tr>
        <td align="left">
            Entry finalized by ZM:&nbsp;&nbsp;@ViewBag.EntryFinalizedbyZM
        </td>
    </tr>
    <tr>
        <td align="left">
            Entry finalized by HO:&nbsp;&nbsp;@ViewBag.EntryfinalizedbyHO
        </td>
    </tr>
</table>
<script type="text/javascript">
  
    function SaveInventoryEntryStatus(unitCode, FinalizedByUM, FinalizedByRM, FinalizedByZM, FinalizedByHO) {

        var locationType = @(Html.Raw(Json.Encode(ViewBag.Location)));;
        
        if($('#hfIsAuthenticForSave').val()=="False")
        {
            alert("You Are Not an Authentic Approver for This Location");
            return false;
        }

        if (locationType == "Region") {

             if (FinalizedByRM != "") {
                alert("You Already Confirm. Cannot Confirm Again.");
                return false;
            }
            else {
                SaveInventoryEntryStatusAjax(unitCode);
                return true;
            }
        }
        else if (locationType == "Zone") {

             if (FinalizedByRM == "") {
                alert("Cannot Save before RM Confirm.");
                return false;
            }
            else if (FinalizedByZM != "") {
                alert("You Already Confirm. Cannot Confirm Again.");
                return false;
            }
            else {
                SaveInventoryEntryStatusAjax(unitCode);
                return true;
            }
        }
        else if (locationType == "HO") {

            if (FinalizedByRM == "") {
                alert("Cannot Save before RM Confirm.");
                return false;
            }
            else if (FinalizedByZM == "") {
                alert("Cannot Save before ZM Confirm.");
                return false;
            }
            else if (FinalizedByHO != "") {
                alert("You Already Confirm. Cannot Confirm Again.");
                return false;
            }
            else {
                SaveInventoryEntryStatusAjax(unitCode);
                return true;
            }
        }
        else {
            return false;
        }

        return false;
    }

    function SaveInventoryEntryStatusAjax(unitCode) {

        $.ajax({
            type: "POST",
            url: '@Url.Action("SaveInventoryStatus", "InventoryDept")',
            data: "{'unitCode':'" + unitCode + "'}",
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: false,
            success: function (data) {

                if (data == "Succeed") {
                    alert("Confirmation is Succeed.");
                }
                else if (data == "NotSucceed")
                { alert("Confirmation is Succeed."); }

            },
            error: function () {
                alert("Failed to load Item");
            }
        });
    }

     function RSFMenu(goFor) {
        window.location.replace(Helper.Menu("../../", goFor));
        return false;
    }  

</script>
