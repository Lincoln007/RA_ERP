@using RASolarERP.Model;
@{
    ViewBag.Title = "Store Position View and Update";
    Layout = "~/Areas/Inventory/Views/Shared/_InventoryLayout.cshtml";

    if (false)
    {
    <script src="../../../../Scripts/jquery-1.5.1.min.js" type="text/javascript"></script>
    }
}
@section TopMenu
{
    @Html.Partial((String)ViewBag.TopMenu)
}
@section LoginInfo
{
    <table cellpadding="0" cellspacing="0" border="0" style="text-align: right;" width="100%">
        <tr>
            <td style="width: 20%" align="left">
                @ViewBag.ZoneTitle&nbsp; @ViewBag.ZoneName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.RegionTitle&nbsp; @ViewBag.RegionName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.UnitTitle&nbsp; @ViewBag.UnitName
            </td>
            <td style="width: 40%" align="left">
                @ViewBag.OpenMonthYear
            </td>
        </tr>
    </table>
}
@*<input id="hfInventoryStockUpdateFinishClosed" type="hidden" value="@ViewBag.InventoryStockUpdateFinishClosed" />*@
@{string   FinishedValue = Convert.ToString(ViewBag.InventoryStockUpdateFinishClosed);}
@Html.Hidden("hfInventoryStockUpdateFinishClosed", FinishedValue)
<table cellpadding="0" cellspacing="0" border="0" width="100%">
    <tr>
        <td>
            @using (Html.BeginForm("StockPositionViewNUpdate", "InventoryDailyTransaction", FormMethod.Post, null))
            {
                <input id="hfIsItemSeralizable" type="hidden" value="0" />
                <input id="hfItemCode" type="hidden" value="0" />
                <input id="hfTotalItemSerial" type="hidden" />
                <input id="hfDeleteFromClientOrDB" type="hidden" value="0" />
                <input id="serialAlreadyScanQuantity" type="hidden" value="0" />
                
                <table cellpadding="0" cellspacing="0" border="0" width="100%">
                    <tr>
                        <td align="left" style="width: 33%;">
                            <table cellpadding="0" cellspacing="0" border="0" width="100%">
                                <tr>
                                    <td align="left" class="IsrlLeftColumn">Item Type
                                    </td>
                                    <td align="left">
                                        @Html.DropDownList("ddlItemType", new SelectList(ViewBag.ItemType, "ItemTypeID", "Description"), "--Select--", new { @class = "IsrlDropDown" })
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td align="left" style="width: 33%;">
                            <table cellpadding="0" cellspacing="0" border="0" width="100%">
                                <tr>
                                    <td align="left" class="IsrlMiddleColumn">Item Category
                                    </td>
                                    <td align="left">
                                        @Html.DropDownList("ddlItemCategory", Enumerable.Empty<SelectListItem>(), new { @class = "IsrlDropDown" })
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td align="left" style="width: 33%;">
                            <table cellpadding="0" cellspacing="0" border="0" width="100%">
                                <tr>
                                    <td align="left" class="IsrlRightColumn">Store Location
                                    </td>
                                    <td align="left">
                                        @Html.DropDownList("ddlStoreLocation", Enumerable.Empty<SelectListItem>(), new { @class = "IsrlDropDown" })
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td align="left" colspan="3" style="padding-top: 8px;">
                            <input id="btnShowtemList" type="submit" value="Show" onclick="return ShowItemList();"
                                style="width: 60px;" />
                        </td>
                    </tr>
                </table>
            }
        </td>
    </tr>
    <tr>
        <td>
            @(Html.Telerik().Grid<InvAvailableItemInALocation>()
                        .Name("gvItemLocationWise")
                        .DataKeys(keys => keys.Add(k => k.ItemCode))
                        .Columns(column =>
                        {
                            column.Bound(s => s.ItemCode);
                            column.Bound(s => s.ItemName);
                            column.Bound(s => s.ItemCapacity);
                            column.Bound(s => s.ItemModel);
                            column.Bound(s => s.AvailableQuantity).HtmlAttributes(new { @class = "GridColumnRightAlign" });
                            column.Bound(s => s.SerialQuantity).ClientTemplate("<a href=\"#\" id=\"quantity<#=ItemCode#>\" class=\"LoadSerials\"><#=SerialQuantity#></a>").HtmlAttributes(new { @class = "GridColumnRightAlign" });
                            column.Bound(s => s.ItemCode).ClientTemplate("<#if(IsItASerializableItem==1){#> <a href=\"SerialMapping?ic=<#=ItemCode#>\" onclick=\"return GetSerial('<#=ItemCode#>');\" target=\"_blank\" >Map Serial</a> <#} else{#> &nbsp; <#}#>").Title("");
                        })
                        .DataBinding(settings => settings.Ajax().Select("__LoadInventoryItemLocationWise", "InventoryDailyTransaction"))
                        .Scrollable(scroll => scroll.Height(250))
                        .Selectable()
                        .Footer(false)
             )
        </td>
    </tr>
    <tr>
        <td id="SerialMappingContent" align="left"></td>
    </tr>
</table>
<script type="text/javascript">

    function ShowItemList() {

        var itemDetails = "";
        itemDetails = $('#ddlStoreLocation').find('option:selected').text() + "#" +
           $('#ddlItemCategory').find('option:selected').text() + "#" +
            $('#ddlItemType').find('option:selected').text() + "#" + $('#ddlStoreLocation').find('option:selected').val();

        var params = {
            storeLocation: $('#ddlStoreLocation').val(),
            itemCatagory: $('#ddlItemCategory').val(),
            itemDetails: itemDetails
        };

        var grid = $('#gvItemLocationWise').data('tGrid');
        grid.dataSource._data = [];

        grid.ajaxRequest(params);

        return false;
    }

    function GetSerial(itemCode) {
        $('#hfItemCode').val(itemCode);

        $.ajax({

            type: 'GET',
            url: '@Url.Action("_PartialPick", "InventoryDailyTransaction")',
            data: { itemCode: itemCode },
            dataType: 'html',
            cache: false,
            success: function (data) {
                $('#SerialMappingContent').html(data);
            },
            error: function () { alert("Item Does Not Load"); }
        });


        $('#hfDeleteFromClientOrDB').val("0");
        $('#serialAlreadyScanQuantity').val($('#quantity' + itemCode).text());

        return false;
    }

    function LoadSerialList(itemCode) {

        $.ajax({

            type: 'POST',
            url: '@Url.Action("SerialListOfItem", "InventoryDailyTransaction")',
            data: "{'storeLocation':'" + $('#ddlStoreLocation').val() + "','itemCode':'" + itemCode + "'}",
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            cache: false,
            success: function (data) {
                $('#serialGrid tbody').html("");

                var trNew = "";
                var totalSerialQuantity = 1;

                $.map(data, function (item) {

                    trNew = "";

                    if (totalSerialQuantity % 2 == 0)
                        trNew = "<tr class=\"t-alt\"> <td>" + item.SerialNumber + "</td>";
                    else
                        trNew = "<tr> <td>" + item.SerialNumber + "</td>";

                    if ($('#chkIsItDamageRepairable').is(':checked')) {
                        trNew = trNew + "<td>Damage</td>";
                    }
                    else {
                        trNew = trNew + "<td>&nbsp;</td>";
                    }

                    if (item.IsInventoryStockUpdateFinish == false) {
                        trNew = trNew + "<td align=\"center\"> <a href=\"#\" id=\"" + item.SerialNumber + "\"  class=\"deleteBtn\">Delete</a> </td> </tr>";
                    }
                    else if (item.IsInventoryStockUpdateFinish == true) {
                        //trNew = trNew + "<td align=\"center\"> <a href=\"#\" id=\"" + item.SerialNumber + "\"  class=\"deleteBtn\">Delete</a> </td> </tr>";
                        trNew = trNew + "<td align=\"center\">Delete</td> </tr>";
                    }

                    $('#serialGrid tbody').append(trNew);

                    totalSerialQuantity = totalSerialQuantity + 1;
                });
                $('#hfDeleteFromClientOrDB').val("1");
            },
            error: function () {
                alert("Item Does Not Load");
                $('#hfDeleteFromClientOrDB').val("0");
            }
        });

        $('#txtSerialNo').focus();
    }

    $(document).ready(function () {

        $('#ddlItemType').change(function () {

            var itemTypeId = $('#ddlItemType').val();
            $('#ddlItemCategory').val("");
            $('#ddlStoreLocation').val("");
            $('#hfDeleteFromClientOrDB').val("0");
            $('#gvItemLocationWise').data().tGrid.total = 0;
            $('#gvItemLocationWise').data().tGrid.dataBind([]);
            $('#SerialMappingContent').html("");
            $('#serialGrid tbody').html("");

            $.ajax({

                type: 'POST',
                url: '@Url.Action("ItemCategorySubCategoryList", "InventoryDailyTransaction")',
                data: "{'itemTypeId':'" + itemTypeId + "'}",
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                cache: false,
                success: function (data) {
                    $('#ddlItemCategory').get(0).options.length = 0;
                    $('#ddlItemCategory').get(0).options[0] = new Option('--Select--', '0');

                    $.map(data, function (item) {
                        $('#ddlItemCategory').get(0).options[$('#ddlItemCategory').get(0).options.length] = new Option(item.Display, item.Value);
                        $('#hfIsItemSeralizable').val(item.IsSerializable);
                    });
                },
                error: function () { alert("Item Does Not Load"); }
            });

            $.ajax({

                type: 'POST',
                url: '@Url.Action("StoreLocationListByItemType", "InventoryDailyTransaction")',
                data: "{'itemTypeId':'" + itemTypeId + "'}",
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                cache: false,
                success: function (data) {
                    $('#ddlStoreLocation').get(0).options.length = 0;
                    $('#ddlStoreLocation').get(0).options[0] = new Option('--Select--', '0');

                    $.map(data, function (item) {
                        $('#ddlStoreLocation').get(0).options[$('#ddlStoreLocation').get(0).options.length] = new Option(item.Display, item.Value);
                        $('#ddlStoreLocation').val(item.IsSerializable);
                    });
                },
                error: function () { alert("Item Does Not Load"); }
            });
        });

        $('#ddlItemCategory').change(function () {

            $('#ddlStoreLocation').val("");
            $('#hfDeleteFromClientOrDB').val("0");
            $('#gvItemLocationWise').data().tGrid.total = 0;
            $('#gvItemLocationWise').data().tGrid.dataBind([]);

            $('#SerialMappingContent').html("");
            $('#serialGrid tbody').html("");
        });

        $('#ddlStoreLocation').change(function () {
            $('#hfDeleteFromClientOrDB').val("0");
            $('#gvItemLocationWise').data().tGrid.total = 0;
            $('#gvItemLocationWise').data().tGrid.dataBind([]);

            $('#SerialMappingContent').html("");
            $('#serialGrid tbody').html("");
        });

        $('#gvItemLocationWise table').delegate('a.LoadSerials', 'click', function () {

            var tr = $(this).parent().parent();
            var itemCode = tr.find('td:eq(0)').text();
            var itemSerialQuantity = tr.find('td:eq(5)').find('a').text();
            var itemAvailableQuantity = tr.find('td:eq(4)').text();
            var itemName = tr.find('td:eq(1)').text();
            var modelCapacity = tr.find('td:eq(3)').text() + " / " + tr.find('td:eq(2)').text();

            if (itemSerialQuantity == "0") {
                alert("No Serial Is Found of This Item");
                return false;
            }

            $('#hfItemCode').val(itemCode);

            var serialMappingTdContent = $('#SerialMappingContent td:contains("Item Code")').text();
            serialMappingTdContent = $.trim(serialMappingTdContent);

            if (serialMappingTdContent != "") {
                LoadSerialList(itemCode);
                $('#txtTotalSerialQuantity').val(itemSerialQuantity);
                $('#txtAvailableQuantity').val(itemAvailableQuantity);
                $('#txtItemCode').val(itemCode);
                $('#txtItemName').val(itemName);
                $('#modelCapacity').text(modelCapacity);
                $('#serialMessage').text("");

                $('#txtSerialNo').attr('disabled', true);
                $('#btnfinishMapping').attr('disabled', true);
            }
            else {
                GetSerial(itemCode);
                $('#hfDeleteFromClientOrDB').val("1");
            }
            return false;
        });
    });

    function ClearAllControl() {

        $('#ddlItemType').val("");
        $('#ddlItemCategory').val("");
        $('#ddlStoreLocation').val("");
        $('#hfDeleteFromClientOrDB').val("0");
        $('#gvItemLocationWise').data().tGrid.total = 0;
        $('#gvItemLocationWise').data().tGrid.dataBind([]);

        $('#SerialMappingContent').html("");
        $('#serialGrid tbody').html("");
    }

    function RSFMenu(goFor) {
        window.location.replace(Helper.Menu("../../", goFor));
        return false;
    }

</script>
