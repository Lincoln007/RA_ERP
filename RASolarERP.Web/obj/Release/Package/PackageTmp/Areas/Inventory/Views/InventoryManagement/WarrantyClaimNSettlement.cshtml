<script type="text/javascript">
    var firstTime = true;
    function onDataBinding(e) {
        if (firstTime) {
            e.preventDefault();
            firstTime = false;
        }
    }

    function onError(e) {
        e.preventDefault();
    }

</script>
@{
    ViewBag.Title = "Warranty Claim & Settlement";
    Layout = "~/Areas/Inventory/Views/Shared/_InventoryLayout.cshtml";

    if (false)
    {
    <script src="../../../../Scripts/jquery-1.5.1.min.js" type="text/javascript"></script>
    <script src="../../../../Scripts/RASolarCustomFunction.js" type="text/javascript"></script>
    
    }
}
@section TopMenu
{
    @Html.Partial((String)ViewBag.TopMenu)
}
@section LoginInfo
{
    <table cellpadding="0" cellspacing="0" border="0" style="text-align: right;" width="100%">
        <tr>
            <td style="width: 20%" align="left">
                @ViewBag.ZoneTitle&nbsp; @ViewBag.ZoneName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.RegionTitle&nbsp; @ViewBag.RegionName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.UnitTitle&nbsp; @ViewBag.UnitName
            </td>
            <td style="width: 40%" align="left">
                @ViewBag.OpenMonthYear
            </td>
        </tr>
    </table>
}
<input id="hfCustomerCode" name="hfCustomerCode" type="hidden" value="" />
<input id="hfOpenDayMonth" name="hfCustomerCode" type="hidden" value="@ViewBag.OpenMonth" />
<input id="hfItemCode" name="hfItemCode" type="hidden" value="" />
<input id="hfitemType" name="hfitemType" type="hidden" value="" />
<input id="hfStoreLocationForIssue" name="hfStoreLocationForIssue" type="hidden" value="" />
<table cellspacing="0" cellpadding="1" border="0" width="100%">
    <tr>
        <td valign="top">
            <fieldset class="EmployeeCVFieldSetClass">
                <table cellspacing="0" cellpadding="0" border="0" width="100%">
                    <tr>
                        <td style="width: 50%" valign="top">
                            <table cellpadding="0" cellspacing="2" border="0" width="100%">
                                <tr>
                                    <td align="left" class="IsrlMiddleColumn">Customer Code
                                    </td>
                                    <td align="left">
                                        @Html.TextBox("txtCustomerCode", "")
                                        <input id="btnShowtemList" type="Button" value="Show" onclick="" style="width: 60px;" />
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 50%" valign="top">
                            <table cellpadding="0" cellspacing="2" border="0" width="100%">
                                <tr>
                                    <td align="left" class="IsrlMiddleColumn">Customer Name
                                    </td>
                                    <td align="left">
                                        <label id="customerName" class="labelEmployeeInfoForDisplayValue">
                                        </label>
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td style="width: 50%" valign="top">
                            <table cellpadding="0" cellspacing="2" border="0" width="100%">
                                <tr>
                                    <td align="left" class="IsrlMiddleColumn">Package
                                    </td>
                                    <td align="left">
                                        <label id="package" class="labelEmployeeInfoForDisplayValue">
                                        </label>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 50%" valign="top">
                            <table cellpadding="0" cellspacing="2" border="0" width="100%">
                                <tr>
                                    <td align="left" class="IsrlMiddleColumn">Agreement Date
                                    </td>
                                    <td align="left">
                                        <label id="agreementDate" class="labelEmployeeInfoForDisplayValue">
                                        </label>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="2">
                            <input id="btnShowMoreDetails" type="Button" value="Show More Details" onclick="" style="width: 160px; float: right;" />
                        </td>
                    </tr>
                    <tr>
                        <td colspan="2">
                            @(Html.Telerik().Window()
                                .Name("dialogCustomerLedgerLoad")
                                .Title("Customer Ledger ")
                                .Buttons(b => b.Close())
                                .Draggable(false)
                                .Resizable(resizing =>
                                         resizing.Enabled(false)
                                        .MinHeight(200)
                                        .MinWidth(970)
                                        .MaxHeight(500)
                                        .MaxWidth(970)
                                    )
                                   .Modal(true)
                                   .Content(@<p id="LoadCustomerLedgerLoad" style="margin: 0; padding: 0; width: 970px; height: auto;"></p>)
                                   .Visible(false)
                               )

                        </td>
                    </tr>
                </table>
            </fieldset>
        </td>
    </tr>
    <tr>
        <td>
            <fieldset class="EmployeeCVFieldSetClass">
                <table cellpadding="0" cellspacing="3" border="0" width="100%">
                    <tr>
                        <td style="width: 50%">
                            <table cellpadding="0" cellspacing="2" border="0" width="100%">
                                <tr>
                                    <td align="left" class="IsrlMiddleColumn">Transaction Type
                                    </td>
                                    <td align="left">
                                        @Html.DropDownList("ddlTransactionType", new List<SelectListItem> { 
                                            new SelectListItem { Text = "---Select---", Value = "" }, 
                                            new SelectListItem { Text = "1. Receive Customer Item For Maintenance With CSI Item", Value= "RCVCSIWCSI" }, 
                                            new SelectListItem { Text = "2. Issue Customer Item To Customer After Maintenance", Value = "ISSCSTCSAM" },
                                            new SelectListItem { Text = "3. Issue Item To Customer As Warranty Replacement", Value = "ISSTCUSAWR" },
                                            }, new { @style = "width:200px;" })
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td style="width: 50%">
                            <input id="btnShowWarrantyItems" type="Button" value="Show Warranty Items" onclick="return ShowWarrantyItems()" style="width: 160px; float: left;" />
                        </td>
                    </tr>
                    <tr>
                        <td colspan="2">
                            @(Html.Telerik().Grid<RASolarERP.DomainModel.InventoryModel.WarrantyItemsDetails>()
                               .Name("gvWarrantyItemsDetails")
                               .DataKeys(keys => keys.Add(k => k.ItemCode))
                               .Columns(column =>
                                   {
                                       column.Bound(s => s.ItemCode).ClientTemplate("<a class='loadReceievNIssue' href='javascript:void(0)'><#=ItemCode#></a>").Width(50);
                                       column.Bound(s => s.ItemName).Width(130);
                                       column.Bound(s => s.ItemCapacityDesc).Title("Capacity").Width(75);
                                       column.Bound(s => s.ItemModelDesc).Title("Model").Width(75);
                                       column.Bound(s => s.AvailableQuantity).Title("Available Qty").Width(60);
                                       column.Bound(s => s.ExchangeStoreLocation).Title("Store Location").Width(55);
                                       column.Bound(s => s.ItemSerialNo).Width(148);
                                       column.Bound(s => s.LastChallanDate).Width(100).Format("{0:dd-MMM-yyyy}").Title("Last Delivery Date");
                                       column.Bound(s => s.TotalWarrantyPeriodInYear).Title("Warranty Period").Width(60);
                                       column.Bound(s => s.RemainingWarrantyPeriod).Width(145);
                                       column.Bound(s => s.WarrantyStatusBasedOnPeriod).Width(100);
                                       column.Bound(s => s.ItemTypeDesc).Hidden();
                                       column.Bound(s => s.ItemCategoryDesc).Hidden();
                                       column.Bound(s => s.ItemSerialNo).Hidden();
                                       column.Bound(s => s.ItemType).Hidden();
                                   })
                                                    .DataBinding(settings => settings.Ajax().Select("__AvailableWarrantyItems", "InventoryManagement"))
                                                    .ClientEvents(events =>
                                                    {
                                                        events.OnDataBinding("onDataBinding");
                                                        events.OnError("onError");
                                                    })
                                                    .Scrollable(scroll => scroll.Height(250))
                                                    .Selectable()
                                                   .Footer(false)
                                               )
                        </td>
                    </tr>
                </table>
            </fieldset>
        </td>
    </tr>
    <tr>
        <td id="itemReceivedSection">
            <fieldset class="EmployeeCVFieldSetClass">
                <legend>Item Receive</legend>
                <table cellpadding="0" cellspacing="3" border="0" width="100%">
                    <tr>
                        <td style="width: 33%" valign="top">
                            <table cellpadding="0" cellspacing="3" border="0" width="100%">
                                <tr>
                                    <td align="left" class="IsrlMiddleColumn">Item Type
                                    </td>
                                    <td align="left">
                                        <label id="itemType" class="labelWarrantyClaimNSettlementDisplayValue">
                                        </label>
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IsrlMiddleColumn">Store Location
                                    </td>
                                    <td align="left">
                                        <label id="storeLocation" class="labelWarrantyClaimNSettlementDisplayValue">
                                        </label>
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IsrlMiddleColumn">Item Category
                                    </td>
                                    <td align="left">
                                        <label id="itemCategory" class="labelWarrantyClaimNSettlementDisplayValue">
                                        </label>
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IsrlMiddleColumn">Item Name
                                    </td>
                                    <td align="left">
                                        <label id="itemNameForReceive" class="labelWarrantyClaimNSettlementDisplayValue">
                                        </label>
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td style="width: 33%" valign="top">
                            <table cellpadding="0" cellspacing="3" border="0" width="100%">
                                <tr>
                                    <td align="left" class="IsrlMiddleColumn">Transaction Date
                                    </td>
                                    <td align="left">
                                        @(Html.Telerik().DatePicker()
                                             .Name("ddTransactionDate")
                                             .Max(new DateTime(2999, 12, 31))
                                             .Format("dd-MMM-yyyy")
                                         )
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IsrlMiddleColumn">MRR Sequence No
                                    </td>
                                    <td align="left">
                                        @Html.TextBox("txtMRRSequenceNo", "", new { @readonly = true })
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IsrlMiddleColumn">MRR No
                                    </td>
                                    <td align="left">
                                        @Html.TextBox("txtMRRNo", "")
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IsrlMiddleColumn">Reason For Claim / Particulars
                                    </td>
                                    <td align="left">
                                        @Html.DropDownList("txtReasonForClaim", new SelectList(ViewBag.ReasonForClaim, "ReasonCode", "ReasonDescription"), "--Select--", new { @class = "SalesAgreementControl" })
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IsrlMiddleColumn"></td>
                                    <td align="left">
                                        @Html.TextBox("txtOptionalReasonForClaim", "")
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td style="width: 33%" valign="top">
                            <table cellpadding="0" cellspacing="3" border="0" width="100%">
                                <tr>
                                    <td align="left" class="IsrlMiddleColumn">Received Quantity
                                    </td>
                                    <td align="left">
                                        @Html.TextBox("receiveQuantity", "")
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IsrlMiddleColumn">Received Serial Quantity
                                    </td>
                                    <td align="left">
                                        <label id="receivedSerialQuantity" class="labelWarrantyClaimNSettlementDisplayValue">
                                        </label>
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IsrlMiddleColumn">Item Serial No
                                    </td>
                                    <td align="left">
                                        <label id="itemSerialNo" class="labelWarrantyClaimNSettlementDisplayValue">
                                        </label>
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IsrlMiddleColumn">Physical Serial Number
                                    </td>
                                    <td align="left">
                                        @Html.TextBox("txtPhysicalSerialNumber", "")
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="3">
                            <input id="btnAddItemNSerialForReceive" type="Button" value="Add Receieved Item & Serial" onclick="" style="width: 189px; float: right;" />
                        </td>
                    </tr>
                    <tr>
                        <td colspan="3">
                            <table cellpadding="0" cellspacing="0" border="0" width="100%">
                                <tr>
                                    <td width="100%">
                                        <table class="TableData" cellpadding="0" cellspacing="0" id="GridForReceived" width="100%">
                                            <thead>
                                                <tr>
                                                    <th align="center">Item Code
                                                    </th>
                                                    <th align="center">Item Name
                                                    </th>
                                                    <th align="center">Item Capacity
                                                    </th>
                                                    <th align="center">Item Model
                                                    </th>
                                                    <th align="center">Received Quantity
                                                    </th>
                                                    <th align="center">Received Serial Quantity
                                                    </th>
                                                    <th>Action
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                            </tbody>
                                        </table>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </fieldset>
        </td>
    </tr>
    <tr>
        <td id="itemIssuedSection">
            <fieldset class="EmployeeCVFieldSetClass">
                <legend>Item Issue</legend>
                <table cellpadding="0" cellspacing="3" border="0" width="100%">
                    <tr>
                        <td style="width: 33%" valign="top">
                            <table cellpadding="0" cellspacing="3" border="0" width="100%">
                                <tr>
                                    <td align="left" class="IsrlMiddleColumn">Item Name
                                    </td>
                                    <td align="left">
                                        @Html.DropDownList("itemNameForIssue", new SelectList("", "ItemCode", "ItemName"), "---Select---", new { @class = "IsrlDropDown" })
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IsrlMiddleColumn">Store Location
                                    </td>
                                    <td align="left">
                                        @Html.DropDownList("ddStoreLocationForIssue", new SelectList("", "storelocationId", "description"), "---Select---", new { @class = "IsrlDropDown" })
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td style="width: 33%" valign="top">
                            <table cellpadding="0" cellspacing="3" border="0" width="100%">
                                <tr>
                                    <td align="left" class="IsrlMiddleColumn">Item Serial No
                                    </td>
                                    <td align="left">
                                        @Html.TextBox("txtItemSerialNO", "", new { @onblur = "IssuedSerialCount(this.value)" })
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IsrlMiddleColumn">Challan Sequence No
                                    </td>
                                    <td align="left">
                                        @Html.TextBox("txtChallanSequenceNo", "", new { @readonly = true })
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IsrlMiddleColumn">Challan No
                                    </td>
                                    <td align="left">
                                        @Html.TextBox("txtChallanNo", "")
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td style="width: 33%" valign="top">
                            <table cellpadding="0" cellspacing="3" border="0" width="100%">
                                <tr>
                                    <td align="left" class="IsrlMiddleColumn">Available Quantity
                                    </td>
                                    <td align="left">
                                        <label id="availableQuantity" class="labelWarrantyClaimNSettlementDisplayValue">
                                        </label>
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IsrlMiddleColumn">Issued Quantity
                                    </td>
                                    <td align="left">
                                        @Html.TextBox("issuedQuantity", "")
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" class="IsrlMiddleColumn">Issued Serial Quantity
                                    </td>
                                    <td align="left">
                                        @Html.TextBox("txtIssuedSerialQuantity", "", new { @readOnly = true })
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="3">
                            <input id="btnAddItemNSerialForIssue" type="Button" value="Add Issued Item & Serial" onclick="" style="width: 160px; float: right;" />
                        </td>
                    </tr>
                    <tr>
                        <td colspan="3">
                            <table cellpadding="0" cellspacing="0" border="0" width="100%">
                                <tr>
                                    <td width="100%">
                                        <table class="TableData" cellpadding="0" cellspacing="0" id="GridForIssue" width="100%">
                                            <thead>
                                                <tr>
                                                    <th align="center">Item Code
                                                    </th>
                                                    <th align="center">Item Name
                                                    </th>
                                                    <th align="center">Item Capacity
                                                    </th>
                                                    <th align="center">Item Model
                                                    </th>
                                                    <th align="center">Issued Quantity
                                                    </th>
                                                    <th align="center">Issued Serial Quantity
                                                    </th>
                                                    <th>Action
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                            </tbody>
                                        </table>
                                    </td>
                                </tr>
                            </table>

                        </td>
                    </tr>
                </table>
            </fieldset>
        </td>
    </tr>
    <tr>
        <td>
            <input id="btnSave" type="Button" value="Save" onclick="" style="width: 50px; float: right;" />
        </td>
    </tr>
</table>

<script type="text/javascript">

    $(document).ready(function () {

        $('#txtOptionalReasonForClaim').attr("disabled", true);
        $('#receiveQuantity').attr("readonly", true);
        $('#issuedQuantity').attr("readonly", true);

        $("#ddlTransactionType").change(function () {

            if ($(this).val() == "ISSCSITCUS") {
                $("#txtReasonForClaim").attr("disabled", true);
                $("#txtPhysicalSerialNumber").attr("disabled", true);
            }
        });

        $('#txtReasonForClaim').change(function () {
            var reasonClaim = $(this).val();
            if (reasonClaim == "0") {
                $('#txtOptionalReasonForClaim').attr("disabled", false);
            }
            else {
                $('#txtOptionalReasonForClaim').attr("disabled", true);
                $('#txtOptionalReasonForClaim').val("");
            }
        });


        $('#txtItemSerialNO').change(function () {

            var itemSerial = $(this).val();
            var storeLocationForIssue = $('#ddStoreLocationForIssue').val();
            var itemCode = $('#itemNameForIssue').val();

            if (storeLocationForIssue == "") {
                Helper.AlertMessage("", "Please select store loaction.");
                return false;
            }
            $.ajax({
                type: "POST",
                url: '@Url.Action("CheckingIssueItemSerailNO", "InventoryManagement")',
                data: { itemSerial: itemSerial, itemCode: itemCode, storeLocationForIssue: storeLocationForIssue },
                cache: false,
                async: false,
                success: function (data) {
                    if (data == "0") {
                        Helper.AlertMessage("", "Please enter correct item serial no.");
                        $('#txtItemSerialNO').val("");
                        return false;
                    }
                },
                error: function () {
                    Helper.AlertMessage("", "Connection fail please try again.");
                }
            });
        });


    });

    $("#btnShowtemList").click(function () {

        $("#gvWarrantyItemsDetails").data().tGrid.total = 0;
        $("#gvWarrantyItemsDetails").data().tGrid.dataBind([]);

        ClearControlAll();

        var customerCode = $('#txtCustomerCode').val();
        if (customerCode == "") {
            Helper.AlertMessage("", "Customer code cannot be empty.");
            return false;
        }

        $.ajax({
            type: "POST",
            url: '@Url.Action("GetCustomerDetails", "InventoryManagement")',
            data: { customerCode: customerCode },
            cache: false,
            success: function (data) {
                if (data != null) {
                    $('#customerName').html(data["CustomerName"]);
                    $('#package').html(data["Package"]);
                    $('#agreementDate').html(data["AgreementDateStringFormat"]);
                    $('#hfCustomerCode').val(data["CustomerCode"]);
                }
                else {
                    Helper.AlertMessage("", "Please provide valid customer.");
                    $('#txtCustomerCode').val("");
                    $('#customerName').html("");
                    $('#package').html("");
                    $('#agreementDate').html("");
                }
            },
            error: function () {
                Helper.AlertMessage("", "Connection fail please try again.");
            }
        });

    });

    $("#gvWarrantyItemsDetails").delegate("a.loadReceievNIssue", "click", function () {

        var transactionType = $('#ddlTransactionType').val();

        if (transactionType == "") {
            Helper.AlertMessage("", "Please Select transaction type");
            return false;
        }

        if (transactionType == "ISSCSTCSAM") {
            $('#txtReasonForClaim').attr("disabled", true);
            $('#txtPhysicalSerialNumber').attr("disabled", true);
        }
        else if (transactionType == "RCVCSIWCSI") {
            $('#txtReasonForClaim').attr("disabled", false);
            $('#txtPhysicalSerialNumber').attr("disabled", false);
        }

        var tr = $(this).parent().parent();

        var itemCode = "", itemTypeDesc = "", itemType = "", storeLocation = "", itemCategory = "", itemName = "", itemSerialNo = "", receiveQuantity = "";

        var openDayMonth = $('#hfOpenDayMonth').val();

        itemCode = $(tr).find("td:eq(0)").find("a").text();
        itemName = $(tr).find("td:eq(1)").text();
        receiveQuantity = $(tr).find("td:eq(4)").text();
        storeLocation = $(tr).find("td:eq(5)").text();
        itemTypeDesc = $(tr).find("td:eq(11)").text();
        itemCategory = $(tr).find("td:eq(12)").text();
        itemSerialNo = $(tr).find("td:eq(13)").text();
        itemType = $(tr).find("td:eq(14)").text();

        var receivedSerialQuantity = "";

        if (itemSerialNo == "") {
            $('#txtItemSerialNO').attr("readonly", true);
            $('#receiveQuantity').attr("readonly", false);
            $('#issuedQuantity').attr("readonly", false);
            receivedSerialQuantity = receivedSerialQuantity;
        }
        else {
            $('#txtItemSerialNO').attr("readonly", false);
            $('#receiveQuantity').attr("readonly", true);
            $('#issuedQuantity').attr("readonly", true);
            receivedSerialQuantity = receiveQuantity;
        }

        // For  item receive 
        $('#itemType').html(itemTypeDesc);
        $('#storeLocation').html(storeLocation);
        $('#itemCategory').html(itemCategory);
        $('#itemNameForReceive').html(itemName);
        $('#itemSerialNo').html(itemSerialNo);
        $('#receiveQuantity').val(receiveQuantity);
        $('#receivedSerialQuantity').html(receivedSerialQuantity);
        $('#ddTransactionDate').val(openDayMonth);
        $('#hfItemCode').val(itemCode);
        $('#hfitemType').val(itemType);

        // For  item issue 

        $('#itemNameForIssue').get(0).options.length = 0;

        if (transactionType == "RCVCSIWCSI") {
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetSubstituteItemCode", "InventoryManagement")',
                data: { itemCode: itemCode },
                cache: false,
                success: function (data) {
                    if (data != '') {
                        $('#itemNameForIssue').get(0).options.length = 0;
                        $.map(data, function (item) {
                            $('#itemNameForIssue').get(0).options[$('#itemNameForIssue').get(0).options.length] = new Option(item.ItemName, item.ItemCode);
                        });
                    }
                    else {
                        $('#itemNameForIssue').get(0).options[0] = new Option(itemName, itemCode);
                    }
                },
                error: function () {
                    Helper.AlertMessage("", "Connection fail please try again.");
                }
            });
        }
        else {
            $('#itemNameForIssue').get(0).options[0] = new Option(itemName, itemCode);
        }

        //$('#itemNameForIssue').html(itemName);
        $('#storeLocationForIssue').html(storeLocation);
        $('#itemSerialNOForIssue').html(itemSerialNo);
        //$('#availableQuantity').html(receiveQuantity);
        $('#issuedQuantity').val(receiveQuantity);

        GetMrrNChallanSquenceNo();
        GetStoreLocation(itemType, transactionType);

    });

    $('#btnShowMoreDetails').click(function () {
        var customerCode = $('#hfCustomerCode').val();
        if (customerCode == "") {
            Helper.AlertMessage("", "Customer code cannot be empty.");
            return false;
        }
        ShowCustomerLedger(customerCode);
    });

    function GetStoreLocation(itemType, transactionType) {

        // Business logic for wrranty and claim

        if (transactionType == "RCVCSIWCSI") {
            transactionType = "ISSCSITCUS";
        }
        else if (transactionType == "ISSCSTCSAM") {
            transactionType = "ISSCSTCSAM";
        }


        $.ajax({
            type: "POST",
            url: '@Url.Action("StoreLocationList", "InventoryDailyTransaction")',
            data: { itemTypeId: itemType, transactionType: transactionType },
            cache: false,
            success: function (data) {

                $('#ddStoreLocationForIssue').get(0).options.length = 0;
                $('#ddStoreLocationForIssue').get(0).options[0] = new Option('--Select--', '');

                $.map(data, function (item) {
                    $('#ddStoreLocationForIssue').get(0).options[$('#ddStoreLocationForIssue').get(0).options.length] = new Option(item.Display, item.Value);
                });
            },
            error: function () {
                Helper.AlertMessage("", "Connection fail please try again.");
            }
        });
    }

    $('#btnAddItemNSerialForReceive').click(function () {

        var itemCode = $('#hfItemCode').val();

        var tr = $("#gvWarrantyItemsDetails tbody tr:contains(\"" + itemCode + "\")");

        var itemName = $(tr).find("td:eq(1)").text();
        var itemCapacity = $(tr).find("td:eq(2)").text();
        var itemModel = $(tr).find("td:eq(3)").text();
        var receiveQuantity = $(tr).find("td:eq(4)").text();
        var itemSerialNo = $(tr).find("td:eq(6)").text();
        var receivedSerialQuantity = "";

        if (itemSerialNo == "") {
            receivedSerialQuantity = receivedSerialQuantity;
            receiveQuantity = $('#receiveQuantity').val();
        }
        else {
            receivedSerialQuantity = receiveQuantity;
            receiveQuantity = receiveQuantity;
        }

        var gridLength = $('#GridForReceived tbody tr').length;
        var i = 0;

        var grid = $('#GridForReceived tbody');

        for (i = 0; i < gridLength; i++) {

            var tr = grid.find("tr:eq(" + i + ")");
            var existItemCode = tr.find('td:eq(0)').text();

            if (itemCode == existItemCode) {
                break;
            }
        }

        if (i < gridLength) {
            Helper.AlertMessage("", "Duplicate Item Is Not Accepted For Issue");
            return false;
        }

        i = i - 1;

        var trNew = "";

        if (i % 2 == 0)
            trNew = "<tr class=\"t-alt\"> ";
        else
            trNew = "<tr> ";

        trNew = trNew + "<td>" + itemCode + "</td>";
        trNew = trNew + "<td>" + itemName + "</td>";
        trNew = trNew + "<td>" + itemCapacity + "</td>";
        trNew = trNew + "<td>" + itemModel + "</td>";
        trNew = trNew + "<td class=\"TdAlignRight\">" + receiveQuantity + "</td>";
        trNew = trNew + "<td class=\"TdAlignRight\">" + receivedSerialQuantity + "</td>";
        trNew = trNew + "<td align=\"center\"> <a href=\"#\" id=\"" + itemCode + "\" class=\"deleteBtnForReceive\" >Delete</a> </td>";

        trNew = trNew + " </tr>";

        //----------------------------------//----------------------------------------//--------------------------------

        $('#GridForReceived tbody').append(trNew);
        receiveClearControl();
        return false;
    });
    
    $('#btnAddItemNSerialForIssue').click(function () {

        var itemCode = $('#itemNameForIssue').val();
        var issueSerialQuantity = $('#txtIssuedSerialQuantity').val();

        var tr = $("#gvWarrantyItemsDetails tbody tr:contains(\"" + itemCode + "\")");

        var itemName = $('#itemNameForIssue').text();
        var itemCapacity = $(tr).find("td:eq(2)").text();
        var itemModel = $(tr).find("td:eq(3)").text();
        var issueQuantity = $(tr).find("td:eq(4)").text();
        var itemSerialNo = $(tr).find("td:eq(6)").text();


        var storeLocationForIssueType = $('#ddStoreLocationForIssue').val();
        var storeLocationForIssue = $('#ddStoreLocationForIssue').val();
        $('#hfStoreLocationForIssue').val(storeLocationForIssue);

        var issuedSerialQuantity = $('#txtIssuedSerialQuantity').val();
        var issuedQuantity = $('#issuedQuantity').val();


        if (itemSerialNo != "") {
            if (issuedSerialQuantity == "" || issuedSerialQuantity != issuedQuantity) {
                Helper.AlertMessage("", "Issued Serial Quantity and Received Serial Quantity  should be equal.");
                return false;
            }
        }
        else if (storeLocationForIssue == "") {
            Helper.AlertMessage("", "Please select store location.");
            return false;
        }

        if (itemSerialNo == "") {
            issueQuantity = $('#issuedQuantity').val();
        }
        else {
            issueQuantity = issueQuantity;
        }


        if ($('#availableQuantity').text() == "0") {
            Helper.AlertMessage("", "Item is not available. Available Quantity cannot be zero.");
            return false;
        }
        else if ($('#issuedQuantity').val() != $('#receiveQuantity').val()) {
            Helper.AlertMessage("", "Issued Serial Quantity and Received Serial Quantity  should be equal...");
            return false;
        }


        var gridLength = $('#GridForIssue tbody tr').length;
        var i = 0;

        var grid = $('#GridForIssue tbody');

        for (i = 0; i < gridLength; i++) {

            var tr = grid.find("tr:eq(" + i + ")");
            var existItemCode = tr.find('td:eq(0)').text();

            if (itemCode == existItemCode) {
                break;
            }
        }

        if (i < gridLength) {
            Helper.AlertMessage("", "Duplicate Item Is Not Accepted For Issue");
            return false;
        }

        i = i - 1;

        var trNew = "";

        if (i % 2 == 0)
            trNew = "<tr class=\"t-alt\"> ";
        else
            trNew = "<tr> ";

        trNew = trNew + "<td>" + itemCode + "</td>";
        trNew = trNew + "<td>" + itemName + "</td>";
        trNew = trNew + "<td>" + itemCapacity + "</td>";
        trNew = trNew + "<td>" + itemModel + "</td>";
        trNew = trNew + "<td class=\"TdAlignRight\">" + issueQuantity + "</td>";
        trNew = trNew + "<td class=\"TdAlignRight\">" + issueSerialQuantity + "</td>";
        trNew = trNew + "<td align=\"center\"> <a href=\"#\" id=\"" + itemCode + "\" class=\"deleteBtnForIssue\" >Delete</a> </td>";

        trNew = trNew + " </tr>";

        //----------------------------------//----------------------------------------//--------------------------------

        $('#GridForIssue tbody').append(trNew);
        issueClearControl();
        return false;
    });

    function ShowCustomerLedger(customerCode) {
        $.ajax({
            type: 'GET',
            url: '@Url.Action("CustomerLedger", "../Sales/CustomerRegister")',
            data: { customerCode: customerCode },
            dataType: 'html',
            cache: false,
            success: function (data) {
                var detailWindow = $("#dialogCustomerLedgerLoad").data("tWindow");
                detailWindow.title("");
                $('#LoadCustomerLedgerLoad').html(data);
                detailWindow.center().open();
            },
            error: function () {
                Helper.AlertMessage("", "Connection Failed. Please Try Again");
            }
        });
    }

    function ShowWarrantyItems() {

        var customerCode = $('#hfCustomerCode').val();
        if (customerCode == "") {
            Helper.AlertMessage("", "Customer code cannot be empty.");
            return false;
        }

        var params = {
            customerCode: $('#hfCustomerCode').val()
        };

        var grid = $("#gvWarrantyItemsDetails").data("tGrid");
        grid.dataSource._data = [];
        grid.ajaxRequest(params);

        return false;
    }

    $('#GridForReceived').delegate('a.deleteBtnForReceive', 'click', function () {

        var itemCode = $(this).parent().parent().find("td:eq(0)").text();

        if (confirm("Do you Want to Delete Item (" + itemCode + ") ?")) {
            $(this).parent().parent().fadeOut('slow').remove();
        }

        return false;
    });

    $('#GridForIssue').delegate('a.deleteBtnForIssue', 'click', function () {

        var itemCode = $(this).parent().parent().find("td:eq(0)").text();

        if (confirm("Do you Want to Delete Item (" + itemCode + ") ?")) {
            $(this).parent().parent().fadeOut('slow').remove();
        }
        return false;
    });

    function GetMrrNChallanSquenceNo() {
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetMrrNChallanSquenceNo", "InventoryManagement")',
            cache: false,
            success: function (data) {
                $('#txtMRRSequenceNo').val(data[0]["MRRSequenceNo"]);
                $('#txtChallanSequenceNo').val(data[0]["challnSequenceNo"]);
            },
            error: function () {
                Helper.AlertMessage("", "Connection fail please try again.");
            }
        });
    }

    $('#btnSave').click(function () {

        var customerCode = $("#txtCustomerCode").val();
        var receiveLength = $('#GridForReceived tbody tr').length;
        var issueLength = $('#GridForIssue tbody tr').length;

        if (receiveLength == 0 && issueLength == 0) {
            Helper.AlertMessage("", "Please add anyone receive or issue item. Then try again.");
            return false;
        }

        var transactionDate = $('#ddTransactionDate').val();
        var mrrSequenceNo = $('#txtMRRSequenceNo').val();
        var mrrNumber = $('#txtMRRNo').val();
        var particulars = $('#txtReasonForClaim').val();
        var transactionType = $('#ddlTransactionType').val();
        var physicalSerialNumber = $('#txtPhysicalSerialNumber').val();

        var issueSerialNo = $('#txtItemSerialNO').val();
        var storeLocationForIssue = $('#hfStoreLocationForIssue').val();
        var challanSequenceNo = $('#txtChallanSequenceNo').val();
        var challanNumber = $('#txtChallanNo').val();

        if (particulars == "0") {
            particulars = $('#txtOptionalReasonForClaim').val();
        }

        if (mrrNumber == "") {
            Helper.AlertMessage("Mandatory Field", "Please Give MRR No");
            return false;
        }
        else if (challanNumber == "") {
            Helper.AlertMessage("Mandatory Field", "Please Give Challan No");
            return false;
        }

        if (transactionType == "RCVCSIWCSI") {
            if ($("#txtReasonForClaim").val() == "") {
                Helper.AlertMessage("Mandatory Field", "Please Give Reason For Claim/Particulars");
                return false;
            }
            else if ($("#txtReasonForClaim").val() == "0" && $('#txtOptionalReasonForClaim').val() == "") {
                Helper.AlertMessage("Mandatory Field", "Please Give Reason For Claim/Particulars");
                return false;
            }
        }

        var receiveItem = new Array();
        var issueItem = new Array();

        $('#GridForReceived tbody tr').each(function () {

            var tr = $("#gvWarrantyItemsDetails tbody tr:contains(\"" + $(this).find("td:eq(0)").text() + "\")");

            var storeLocation = $(tr).find("td:eq(5)").text();
            var itemCategory = $(tr).find("td:eq(12)").text();
            var itemType = $(tr).find("td:eq(14)").text();
            var itemSerialNo = $(tr).find("td:eq(6)").text();

            receiveItem.push({
                ItemCode: $(this).find("td:eq(0)").text(),
                ItemType: itemType,
                StoreLocation: storeLocation,
                ItemCategory: itemCategory,
                ItemCapacity: $(this).find("td:eq(2)").text(),
                ItemModel: $(this).find("td:eq(3)").text(),
                ReceivedQuantity: $(this).find("td:eq(4)").text(),
                MrrDate: transactionDate,
                MrrSequenceNo: mrrSequenceNo,
                MrrNumber: mrrNumber,
                Particulars: particulars,
                TransactionType: transactionType,
                ItemSerialNo: itemSerialNo,
                PhysicalSerialNumber: physicalSerialNumber
            });
        });

        $('#GridForIssue tbody tr').each(function () {

            var tr = $("#gvWarrantyItemsDetails tbody tr:contains(\"" + $(this).find("td:eq(0)").text() + "\")");

            var storeLocation = $(tr).find("td:eq(5)").text();
            var itemCategory = $(tr).find("td:eq(12)").text();

            issueItem.push({
                ItemCode: $(this).find("td:eq(0)").text(),
                StoreLocation: storeLocationForIssue,
                ReceivedQuantity: $(this).find("td:eq(4)").text(),
                ItemCategory: itemCategory,
                ItemCapacity: $(this).find("td:eq(2)").text(),
                ItemModel: $(this).find("td:eq(3)").text(),
                ChallanSequenceNo: challanSequenceNo,
                ChallanNumber: challanNumber,
                ItemSerialNO: issueSerialNo
            });
        });

        $.ajax({
            type: "POST",
            url: '@Url.Action("SaveWarrantyClaimNSettlement", "InventoryManagement")',
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            cache: false,
            data: JSON.stringify({ lstReceiveItem: receiveItem, lstIssueItem: issueItem, customerCode: customerCode }),
            success: function (data) {

                if (data[0].messageCode == "success") {
                    Helper.AlertMessage("", data[0].message);
                    ClearControlAll();
                }
                else
                    Helper.AlertMessage("", data[0].message);
            },
            error: function () {
                Helper.AlertMessage("", "Connection fail please try again.");
            }
        });

    });

    $('#ddStoreLocationForIssue').change(function () {

        if ($('#ddStoreLocationForIssue').val() != "")
            AvailAbleItemQuantity();
        else
            $('#availableQuantity').val("");
    });
    
    $('#itemNameForIssue').change(function () {
        AvailAbleItemQuantity();
    });

    function AvailAbleItemQuantity() {
        var itemCode = $('#itemNameForIssue').val();
        var storeLocation = $('#ddStoreLocationForIssue').val();

        $.ajax({
            type: 'POST',
            url: '@Url.Action("AvailAbleStoreItemQuantity", "InventoryDailyTransaction")',
            data: "{'itemCode':'" + itemCode + "','storeLocation':'" + storeLocation + "'}",
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            cache: false,
            success: function (data) {
                $('#availableQuantity').html(data[0].AvailableQuantity);
            },
            error: function () {
                Helper.AlertMessage("", "Connection Failed. Please Try Again.");
            }
        });

        var ss = $('#availableQuantity').val();
    }

    function IssuedSerialCount(serialValue) {

        if (serialValue == "") {
            $("#txtIssuedSerialQuantity").val("");
        }
        else {
            $("#txtIssuedSerialQuantity").val(1);
        }
    }

    function receiveClearControl() {
        // For  item receive 
        $('#itemType').html("");
        $('#storeLocation').html("");
        $('#itemCategory').html("");
        $('#itemNameForReceive').html("");
        $('#itemSerialNo').html("");
        $('#receiveQuantity').html("");
        $('#receivedSerialQuantity').html("");
        //$('#ddTransactionDate').val("");
        //$('#txtPhysicalSerialNumber').val("");
        //$('#txtMRRNo').val("");
        //$('#txtReasonForClaim').val("");
    }

    function issueClearControl() {

        //$('#itemNameForIssue').html("");
        $('#storeLocationForIssue').html("");
        $('#itemSerialNOForIssue').html("");
        $('#availableQuantity').html("");
        $('#issuedQuantity').val("");
        $('#ddStoreLocationForIssue').val("");
        //$('#txtItemSerialNO').val("");
        //$('#txtChallanNo').val("");
        $('#txtIssuedSerialQuantity').val("");
    }

    function ClearControlAll() {

        $('#GridForReceived tbody').html("");
        $('#GridForIssue tbody').html("");
        $('#txtItemSerialNO').val("");
        $('#txtPhysicalSerialNumber').val("");
        $('#txtReasonForClaim').val("");
        $('#txtOptionalReasonForClaim').val("");

        $("#itemReceivedSection label").each(function () {
            $(this).text("");
        })

        $("#itemIssuedSection label").each(function () {
            $(this).text("");
        })

        $("#itemReceivedSection input[type='text']").each(function () {

            if ($(this).attr("id") != "txtMRRSequenceNo") {
                $(this).val("");
            }
        })

        $("#itemIssuedSection input[type='text']").each(function () {

            if ($(this).attr("id") != "txtChallanSequenceNo") {
                $(this).val("");
            }
        })
    }

    function RSFMenu(goFor) {
        window.location.replace(Helper.Menu("../../", goFor));
        return false;
    }
</script>
