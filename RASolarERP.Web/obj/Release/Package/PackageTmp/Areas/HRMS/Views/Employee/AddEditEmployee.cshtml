@using RASolarERP.DomainModel.HRMSModel;
@model EmployeeDetails
@{
    ViewBag.Title = "Add/Edit Employee";
    Layout = "~/Areas/HRMS/Views/Shared/_HrmsLayout.cshtml";

    if (false)
    {
    <script src="../../../../Scripts/jquery-1.5.1.min.js" type="text/javascript"></script>
    <script src="../../../../Scripts/RASolarCustomFunction.js" type="text/javascript"></script>    
    }    
    
}
@section TopMenu
{
    @Html.Partial((String)ViewBag.TopMenu)
}
@section LoginInfo
{
    <table cellpadding="0" cellspacing="0" border="0" style="text-align: right;" width="100%">
        <tr>
            <td style="width: 20%" align="left">
                @ViewBag.ZoneTitle&nbsp; @ViewBag.ZoneName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.RegionTitle&nbsp; @ViewBag.RegionName
            </td>
            <td style="width: 20%" align="left">
                @ViewBag.UnitTitle&nbsp; @ViewBag.UnitName
            </td>
            <td style="width: 40%" align="left">
                @ViewBag.OpenMonthYear
            </td>
        </tr>
    </table>
}
<input id="hfLocation" type="hidden" value="@ViewBag.Location"/>
<input id="hfCurrentLocation" type="hidden" />
<input id="hfSearchLocationCode" type="hidden" value="" />
<input id="hfEmployeeIdNew" type="hidden" value="@Model.EmployeeID"/>
<input id="hfPostingTo" type="hidden" value="" />
<input id="hfSalaryLocation" type="hidden" value="" />
<input id="hfPostingLocation" type="hidden" value="@Model.LastLocationCode" />
<input id="hfConfirmationDate" type="hidden" value="@Model.ConfirmationDate"/>
<input id="hfIsEdited" type="hidden" value="@Model.IsEmployeeForEdit"/>
<input id="hfIsContractualEmployee" type="hidden" value="@Model.ContractualPeriodInMonth" />


<input id="hfForhidenSaveBtnUnderShowbtn" type="hidden" value="@ViewBag.hfForSavehide"/>

<fieldset>
    <legend>Employee Search</legend>
    @using (Html.BeginForm("AddEditEmployee", "Employee"))
    {
        //for save btn hide under show click
        @Html.Hidden("hfForhidenSaveBtnUnderShowbtnContr","")
      
        @Html.Hidden("hfSearchEmployeeId", "")
        <table cellpadding="0" cellspacing="3" border="0" style="text-align: right;" width="100%">
            <tr>
                <td align="left" style="width: 150px;">Employee ID
                </td>
                <td align="left" style="width: 350px;">
                    @Html.TextBox("txtEmployeeId", (string)ViewBag.EmployeeId, new { @class = "EmployeeTransferIsrlControl", @maxlength = "8", })
                    @(Html.Telerik().Window().Name("dialogEmployeeLocationSelection")
                .Title("Select A Location For Load Employee")
                .ClientEvents(events => events.OnClose("CloseDialogEmployeeLocationSelection"))
                .Draggable(false)
                .Resizable(resizing => resizing.Enabled(false)
                                                .MinHeight(155)
                                                .MinWidth(355)
                                                .MaxHeight(500)
                                                .MaxWidth(500)
                                                )
                .Modal(true)
                .Buttons(b => b.Close())
                .Content(@<p id="LoadEmployeeLocationSelectionWindow" style="height: 153px; width: 342px; padding: 0; margin: 0;">
                </p>
                )
                .Visible(false)
            )
                </td>
                <td align="left" style="width: 150px;">Employee
                </td>
                <td style="width: 350px;" align="left">
                    @Html.TextBox("txtSearchEmployeeId", (string)ViewBag.EmployeeSearchId, new { @class = "EmployeeTransferIsrlControl", @readonly = true })
                    @(Html.Telerik().Window()
                .Name("dialogEmployeeSelection")
                .Title("Select An Employee")
                .ClientEvents(evenets => evenets.OnClose("CloseDialogEmployeeSelection"))
                .Draggable(false)
                .Resizable(resizing =>
                        resizing.Enabled(false)
                                .MinHeight(500)
                                .MinWidth(970)
                                .MaxHeight(500)
                                .MaxWidth(970)
                )
                .Modal(true)
                .Buttons(b => b.Close())
                .Content(@<p id="LoadEmployeeSelection" style="margin: 0; padding: 0; width: 970px; height: 425px;">
                </p>)
                .Visible(false)
                )
                </td>
                <td style="width: 150px;" align="right">
                    <input id="btnShowEmployeeDetails" class="t-button" type="submit" value="Show" />
                </td>
            </tr>
        </table>        
    }
</fieldset>
<br />
@{
    Html.Telerik().TabStrip()
      .Name("tabEmployeeDetailsView")
      .Items(tabstrip =>
      {

          tabstrip.Add()
              .Text("Employee Info")
              .Content(@<table cellpadding="0" cellspacing="0" border="0" width="100%" id="EmployeePersonalInformationTable">
                  @* Start Employee personal information tab *@
                  <tr>
                      <td>
                          <fieldset>
                              <legend>Employee's Personal Details</legend>
                              <table cellpadding="0" cellspacing="0" border="0" width="100%" id="">
                                  <tr>
                                      <td style="width: 50%;" valign="top">
                                          <table cellpadding="0" cellspacing="3" border="0" width="100%" id="">
                                              <tr>
                                                  <td align="left" class="employeeInfoFieldLabel">Employee ID:<b class="RedMarks">*</b>
                                                  </td>
                                                  <td align="left">
                                                      @Html.TextBox("EmployeeID", (string)Model.EmployeeID, new { @class = "EmployeeInfoTextBoxBig", @maxlength = "8" })
                                                  </td>
                                              </tr>
                                              <tr>
                                                  <td align="left" class="employeeInfoFieldLabel">Employee Name:<b class="RedMarks">*</b>
                                                  </td>
                                                  <td align="left">
                                                      @Html.TextBox("EmployeeName", (string)Model.EmployeeName, new { @class = "EmployeeInfoTextBoxBig", @maxlength = "50" })
                                                  </td>
                                              </tr>
                                              <tr>
                                                  <td align="left" class="employeeInfoFieldLabel">Date Of Birth:<b class="RedMarks">*</b>
                                                  </td>
                                                  <td align="left">
                                                      @(Html.Telerik().DatePicker()
                                                                          .Name("DateOfBirth")
                                                                          .Max(new DateTime(2050, 12, 31))
                                                                          .Min(new DateTime(1950, 01, 31))
                                                                          .Format("dd-MMM-yyyy")
                                                                          .Value(Model.DateOfBirth)
                                                       )
                                                  </td>
                                              </tr>
                                              <tr>
                                                  <td align="left" class="employeeInfoFieldLabel">Home District:<b class="RedMarks">*</b>
                                                  </td>
                                                  <td align="left">
                                                      @Html.DropDownList("PlaceOfBirthId", new SelectList(Model.DistrictInfo, "DistrictCode", "DistrictName", Model.PlaceOfBirthId), "--Select--", new { @class = "EmployeeInfoDropdownBig" })
                                                  </td>
                                              </tr>
                                              <tr>
                                                  <td align="left" class="employeeInfoFieldLabel">Nationality:<b class="RedMarks">*</b>
                                                  </td>
                                                  <td align="left">
                                                      @Html.DropDownList("Nationality",
                                                               new List<SelectListItem> { new SelectListItem { Text = "Bangladeshi", Value = "Bangladeshi", Selected = true } },
                                                               "--Select--", new { @class = "EmployeeInfoDropdownBig" })
                                                  </td>
                                              </tr>
                                              <tr>
                                                  <td align="left" class="employeeInfoFieldLabel">Highest Education:<b class="RedMarks">*</b>
                                                  </td>
                                                  <td align="left">
                                                      @Html.DropDownList("HighestEducation", new SelectList(Model.HighestEducationInfo, "EducationID", "EducationName", Model.HighestEducation), "--Select--", new { @class = "EmployeeInfoDropdownBig" })
                                                  </td>
                                              </tr>
                                              <tr>
                                                  <td align="left" class="employeeInfoFieldLabel">Highest Education Label:
                                                  </td>
                                                  <td align="left">
                                                      @Html.TextBox("HighesteducationLabel", (string)Model.EducationLevel, new { @class = "EmployeeInfoTextBoxBig", @readonly = true })
                                                      @Html.DropDownList("ddlHighesteducationLabel", new SelectList(Model.HighestEducationInfo, "EducationID", "EducationLevel", Model.HighestEducation), new { @style = "display:none;" })
                                                  </td>
                                              </tr>
                                              <tr>
                                                  <td align="left" class="employeeInfoFieldLabel">Blood Group:<b class="RedMarks">*</b>
                                                  </td>
                                                  <td align="left">
                                                      @Html.DropDownList("BloodGroup", new SelectList(Model.BloodGroupInfo, "BloodGroupID", "BloodGroupDescription", Model.BloodGroup), "--Select--", new { @class = "EmployeeInfoDropdownBig" })
                                                  </td>
                                              </tr>
                                              <tr>
                                                  <td align="left" class="employeeInfoFieldLabel">National ID:
                                                  </td>
                                                  <td align="left">
                                                      @Html.TextBox("NationalIDCard", (string)Model.NationalIDCard, new { @class = "EmployeeInfoTextBoxBig", @maxlength = "20", })
                                                  </td>
                                              </tr>
                                              <tr>
                                                  <td align="left" class="employeeInfoFieldLabel">Passport No:
                                                  </td>
                                                  <td align="left">
                                                      @Html.TextBox("PassportNo", Model.PassportNo, new { @class = "EmployeeInfoTextBoxBig" })
                                                  </td>
                                              </tr>
                                              <tr>
                                                  <td align="left" class="employeeInfoFieldLabel">E-mail:
                                                  </td>
                                                  <td align="left">
                                                      @Html.TextBox("EmailID", (string)Model.EmailID, new { @class = "EmployeeInfoTextBoxBig", @maxlength = "50", })
                                                  </td>
                                              </tr>
                                          </table>
                                      </td>
                                      <td style="width: 50%;" valign="top">
                                          <table cellpadding="0" cellspacing="3" border="0" width="100%" id="">
                                              <tr>
                                                  <td align="left" class="employeeInfoFieldLabel">Father's Name:<b class="RedMarks">*</b>
                                                  </td>
                                                  <td align="left">
                                                      @Html.TextBox("EmployeeFathersName", (string)Model.EmployeeFathersName, new { @class = "EmployeeInfoTextBoxBig", @maxlength = "50", })
                                                  </td>
                                              </tr>
                                              <tr>
                                                  <td align="left" class="employeeInfoFieldLabel">Mother's Name:<b class="RedMarks">*</b>
                                                  </td>
                                                  <td align="left">
                                                      @Html.TextBox("EmployeeMothersName", (string)Model.EmployeeMothersName, new { @class = "EmployeeInfoTextBoxBig", @maxlength = "50", })
                                                  </td>
                                              </tr>
                                              <tr>
                                                  <td align="left" class="employeeInfoFieldLabel">Gender:<b class="RedMarks">*</b>
                                                  </td>
                                                  <td align="left">
                                                      @Html.DropDownList("Gender", new SelectList(Model.GenderInfo, "GenderId", "GenderName", Model.Gender), "--Select--", new { @class = "EmployeeInfoDropdownBig" })
                                                  </td>
                                              </tr>
                                              <tr>
                                                  <td align="left" class="employeeInfoFieldLabel">Marital Status:<b class="RedMarks">*</b>
                                                  </td>
                                                  <td align="left">
                                                      @Html.DropDownList("MaritalStatus", new SelectList(Model.MaritalStatusInfo, "MaritalStatusID", "MaritalStatusDescription", Model.MaritalStatus), "--Select--", new { @class = "EmployeeInfoDropdownBig" })
                                                  </td>
                                              </tr>
                                              <tr>
                                                  <td align="left" class="employeeInfoFieldLabel">Religion:<b class="RedMarks">*</b>
                                                  </td>
                                                  <td align="left">
                                                      @Html.DropDownList("Religion", new SelectList(Model.ReligionInfo, "ReligionID", "ReligionName", Model.Religion), "--Select--", new { @class = "EmployeeInfoDropdownBig" })
                                                  </td>
                                              </tr>
                                              <tr>
                                                  <td align="left" class="employeeInfoFieldLabel">Major Subject/Group:
                                                  </td>
                                                  <td align="left">
                                                      @Html.DropDownList("MajorSubject", new SelectList(Model.MajorSubjectInfo, "MajorSubjectID", "MajorSubjectName", Model.MajorSubject), "--Select--", new { @class = "EmployeeInfoDropdownBig" })
                                                  </td>
                                              </tr>
                                              <tr>
                                                  <td align="left" class="employeeInfoFieldLabel">Spouse Name:
                                                  </td>
                                                  <td align="left">
                                                      @Html.TextBox("EmployeeSpouseName", Model.EmployeeSpouseName, new { @class = "EmployeeInfoTextBoxBig", @maxlength = "50", })
                                                  </td>
                                              </tr>
                                              <tr>
                                                  <td align="left" class="employeeInfoFieldLabel">Spouse Blood Group:
                                                  </td>
                                                  <td align="left">
                                                      @Html.DropDownList("SpouseBloodGroup", new SelectList(Model.BloodGroupInfo, "BloodGroupID", "BloodGroupDescription", Model.SpouseBloodGroup), "--Select--", new { @class = "EmployeeInfoDropdownBig" })
                                                  </td>
                                              </tr>
                                              <tr>
                                                  <td align="left" class="employeeInfoFieldLabel">Driving License:
                                                  </td>
                                                  <td align="left">
                                                      @Html.TextBox("DrivingLicenseNo", Model.DrivingLicenseNo, new { @class = "EmployeeInfoTextBoxBig" })
                                                  </td>
                                              </tr>
                                              <tr>
                                                  <td align="left" class="employeeInfoFieldLabel">PP Exp. Date:
                                                  </td>
                                                  <td align="left">
                                                      @(Html.Telerik().DatePicker()
                                                                                  .Name("PassportExpiryDate")
                                                                          .Max(new DateTime(2050, 12, 31))
                                                                          .Min(new DateTime(1950, 01, 31))
                                                                          .Format("dd-MMM-yyyy")
                                                                          .Value(Model.PassportExpiryDate)
                                                          )
                                                  </td>
                                              </tr>
                                          </table>
                                      </td>
                                  </tr>
                              </table>
                          </fieldset>
                      </td>
                  </tr>
                  <tr>
                      <td>
                          <fieldset>
                              <legend>Residence Information</legend>
                              <table cellpadding="0" cellspacing="3" border="0" width="100%" id="">
                                  <tr>
                                      <td>
                                          <span class="employeeInfoTitle">Present Address</span>
                                          <table cellpadding="0" cellspacing="0" border="0" width="100%" id="">
                                              <tr>
                                                  <td style="width: 50%;" valign="top">
                                                      <table cellpadding="0" cellspacing="3" border="0" width="100%" id="">
                                                          <tr>
                                                              <td align="left" class="employeeInfoFieldLabel">House No:
                                                              </td>
                                                              <td align="left">
                                                                  @Html.TextBox("PresentHouseNo", (string)Model.PresentHouseNo, new { @class = "EmployeeInfoTextBoxBig", @maxlength = "10", })
                                                              </td>
                                                          </tr>
                                                          <tr>
                                                              <td align="left" class="employeeInfoFieldLabel">Post Office:
                                                              </td>
                                                              <td align="left">
                                                                  @Html.TextBox("PresentPostOffice", (string)Model.PresentPostOffice, new { @class = "EmployeeInfoTextBoxBig", @maxlength = "50", })
                                                              </td>
                                                          </tr>
                                                          <tr>
                                                              <td align="left" class="employeeInfoFieldLabel">City/Dist:<b class="RedMarks">*</b>
                                                              </td>
                                                              <td align="left">
                                                                  @Html.DropDownList("PresentDistrictCode", new SelectList(Model.DistrictInfo, "DistrictCode", "DistrictName", Model.PresentDistrictCode), "--Select--", new { @class = "EmployeeInfoDropdownBig" })
                                                              </td>
                                                          </tr>
                                                          <tr>
                                                              <td align="left" class="employeeInfoFieldLabel">Upzilla:
                                                              </td>
                                                              <td align="left">
                                                                  @Html.DropDownList("PresentUpazillaCode", new SelectList(Model.PresentUpazillaInfo, "UpazillaCode", "UpazillaName", Model.PresentUpazillaCode), "--Select--", new { @class = "EmployeeInfoDropdownBig" })
                                                              </td>
                                                          </tr>
                                                      </table>
                                                  </td>
                                                  <td style="width: 50%;" valign="top">
                                                      <table cellpadding="0" cellspacing="3" border="0" width="100%" id="">
                                                          <tr>
                                                              <td align="left" class="employeeInfoFieldLabel">Street/Village:
                                                              </td>
                                                              <td align="left">
                                                                  @Html.TextBox("PresentStreetOrVillage", (string)Model.PresentStreetOrVillage, new { @class = "EmployeeInfoTextBoxBig", @maxlength = "50", })
                                                              </td>
                                                          </tr>
                                                          <tr>
                                                              <td align="left" class="employeeInfoFieldLabel">Police Station:
                                                              </td>
                                                              <td align="left">
                                                                  @Html.TextBox("PresentPoliceStation", (string)Model.PresentPoliceStation, new { @class = "EmployeeInfoTextBoxBig", @maxlength = "50", })
                                                              </td>
                                                          </tr>
                                                          <tr>
                                                              <td align="left" class="employeeInfoFieldLabel">Mobile:
                                                              </td>
                                                              <td align="left">
                                                                  @Html.TextBox("PresentMobileNo", (string)Model.PresentMobileNo, new { @class = "EmployeeInfoTextBoxBig", @maxlength = "11", })
                                                              </td>
                                                          </tr>
                                                          <tr>
                                                              <td align="left" class="employeeInfoFieldLabel">Phone:
                                                              </td>
                                                              <td align="left">
                                                                  @Html.TextBox("PresentPhone", (string)Model.PresentPhone, new { @class = "EmployeeInfoTextBoxBig", @maxlength = "11", })
                                                              </td>
                                                          </tr>
                                                      </table>
                                                  </td>
                                              </tr>
                                          </table>
                                      </td>
                                  </tr>
                                  <tr>
                                      <td>
                                          <span class="employeeInfoTitle">Parmanent Address</span>
                                          <table cellpadding="0" cellspacing="3" border="0" width="100%" id="">
                                              <tr>
                                                  <td style="width: 50%;" valign="top">
                                                      <table cellpadding="0" cellspacing="3" border="0" width="100%" id="">
                                                          <tr>
                                                              <td align="left" class="employeeInfoFieldLabel">House:
                                                              </td>
                                                              <td align="left">
                                                                  @Html.TextBox("PermanentHouseNo", (string)Model.PermanentHouseNo, new { @class = "EmployeeInfoTextBoxBig", @maxlength = "10", })
                                                              </td>
                                                          </tr>
                                                          <tr>
                                                              <td align="left" class="employeeInfoFieldLabel">Post Office:
                                                              </td>
                                                              <td align="left">
                                                                  @Html.TextBox("PermanentPostOffice", (string)Model.PermanentPostOffice, new { @class = "EmployeeInfoTextBoxBig", @maxlength = "50", })
                                                              </td>
                                                          </tr>
                                                          <tr>
                                                              <td align="left" class="employeeInfoFieldLabel">City/Dist:<b class="RedMarks">*</b>
                                                              </td>
                                                              <td align="left">
                                                                  @Html.DropDownList("PermanentDistrictCode", new SelectList(Model.DistrictInfo, "DistrictCode", "DistrictName", Model.PermanentDistrictCode), "--Select--", new { @class = "EmployeeInfoDropdownBig" })
                                                              </td>
                                                          </tr>
                                                          <tr>
                                                              <td align="left" class="employeeInfoFieldLabel">Upzilla:
                                                              </td>
                                                              <td align="left">
                                                                  @Html.DropDownList("PermanentUpazillaCode", new SelectList(Model.ParmanentUpazillaInfo, "UpazillaCode", "UpazillaName", Model.PermanentUpazillaCode), "--Select--", new { @class = "EmployeeInfoDropdownBig" })
                                                              </td>
                                                          </tr>
                                                      </table>
                                                  </td>
                                                  <td style="width: 50%;" valign="top">
                                                      <table cellpadding="0" cellspacing="3" border="0" width="100%" id="">
                                                          <tr>
                                                              <td align="left" class="employeeInfoFieldLabel">Street/Village:
                                                              </td>
                                                              <td align="left">
                                                                  @Html.TextBox("PermanentStreetVillage", (string)Model.PermanentStreetVillage, new { @class = "EmployeeInfoTextBoxBig", @maxlength = "50", })
                                                              </td>
                                                          </tr>
                                                          <tr>
                                                              <td align="left" class="employeeInfoFieldLabel">Police Station:
                                                              </td>
                                                              <td align="left">
                                                                  @Html.TextBox("PermanentPoliceStation", (string)Model.PermanentPoliceStation, new { @class = "EmployeeInfoTextBoxBig", @maxlength = "50", })
                                                              </td>
                                                          </tr>
                                                          <tr>
                                                              <td align="left" class="employeeInfoFieldLabel">Mobile:
                                                              </td>
                                                              <td align="left">
                                                                  @Html.TextBox("PermanentMobileNo", (string)Model.PermanentMobileNo, new { @class = "EmployeeInfoTextBoxBig", @maxlength = "11", })
                                                              </td>
                                                          </tr>
                                                          <tr>
                                                              <td align="left" class="employeeInfoFieldLabel">Phone:
                                                              </td>
                                                              <td align="left">
                                                                  @Html.TextBox("PermanentPhone", (string)Model.PermanentPhone, new { @class = "EmployeeInfoTextBoxBig", @maxlength = "11", })
                                                              </td>
                                                          </tr>
                                                      </table>
                                                  </td>
                                              </tr>
                                          </table>
                                      </td>
                                  </tr>
                              </table>
                          </fieldset>
                      </td>
                  </tr>
                  <tr>
                      <td style="width: 100%; padding-top: 5px;" align="right">
                          <input type="button" id="btnEmployeePersonalInfoNextButton" onclick="return EnableTab('0')" class="EmployeeInfoNextButton" value="Next" />
                      </td>
                  </tr>
                  @* End Employee personal information tab *@
              </table>
);

          tabstrip.Add()
              .Text("Employment Info")
              .Content(@<table cellpadding="0" cellspacing="0" border="0" width="100%" id="EmployeeEmploymentInformationTable">
                  @* Start Employement info tab *@
                  <tr>
                      <td>
                          <table cellpadding="0" cellspacing="0" border="0" width="100%" id="">
                              <tr>
                                  <td>
                                      <fieldset>
                                          <legend>Employement Information</legend>
                                          <table cellpadding="0" cellspacing="0" border="0" width="100%" id="">
                                              <tr>
                                                  <td style="width: 50%" valign="top">
                                                      <table cellpadding="0" cellspacing="3" border="0" width="100%" id="">
                                                          <tr>
                                                              <td align="left" class="employeeInfoFieldLabel">Joining Date:<b class="RedMarks">*</b>
                                                              </td>
                                                              <td align="left">
                                                                  @(Html.Telerik().DatePicker()
                                                                          .Name("JoiningDate")
                                                                          .Max(new DateTime(2050, 12, 31))
                                                                          .Min(new DateTime(1950, 01, 31))
                                                                          .Format("dd-MMM-yyyy")
                                                                                  .Value(Model.JoiningDate)
                                                                   )
                                                              </td>
                                                          </tr>
                                                          <tr>
                                                              <td align="left" class="employeeInfoFieldLabel">Employment Type:
                                                              </td>
                                                              <td align="left">
                                                                  @Html.DropDownList("LastEmploymentType", new SelectList(Model.EmploymentType, "EmploymentTypeID", "EmploymentTypeDescription", Model.LastEmploymentType), new { @class = "EmployeeInfoDropdownBig" })
                                                              </td>
                                                          </tr>
                                                          <tr>
                                                              <td align="left" class="employeeInfoFieldLabel">Department:<b class="RedMarks">*</b>
                                                              </td>
                                                              <td align="left">
                                                                  @Html.DropDownList("LastDepartment", new SelectList(Model.DepartmentInfo, "DepartmentID", "DepartmentName", Model.LastDepartment), "--Select--", new { @class = "EmployeeInfoDropdownBig" })
                                                              </td>
                                                          </tr>
                                                          <tr>
                                                              <td align="left" class="employeeInfoFieldLabel">Designation:<b class="RedMarks">*</b>
                                                              </td>
                                                              <td align="left">
                                                                  @Html.DropDownList("LastDesignation", new SelectList(Model.Designation, "HDesignationID", "HDesignationName", Model.LastDesignation), "--Select--", new { @class = "EmployeeInfoDropdownBig" })
                                                              </td>
                                                          </tr>
                                                          <tr>
                                                              <td align="left" class="employeeInfoFieldLabel">Operational Role:
                                                              </td>
                                                              <td align="left">
                                                                  @Html.DropDownList("LastOperationalRole", new SelectList(Model.OperationalRoleInfo, "OperationalRoleID", "OperationalRoleName", Model.LastOperationalRole), "--Select--", new { @class = "EmployeeInfoDropdownBig" })
                                                              </td>
                                                          </tr>
                                                          <tr>
                                                              <td align="left" class="employeeInfoFieldLabel">Mode Of Salary Payment:
                                                              </td>
                                                              <td align="left">
                                                                  @Html.DropDownList("ModeOfSalaryPayment", new SelectList(Model.SalaryModeOfPayment, "PaymentTypeValue", "PaymentTypeName", Model.ModeOfSalaryPayment), new { @class = "EmployeeInfoDropdownBig" })
                                                              </td>
                                                          </tr>
                                                      </table>
                                                  </td>
                                                  <td style="width: 50%" valign="top">
                                                      @Html.Hidden("hfLastSalaryStructureSeqNo", Model.LastSalaryStructureSeqNo)
                                                      <table cellpadding="0" cellspacing="3" border="0" width="100%" id="">
                                                          <tr>
                                                              <td align="left" class="employeeInfoFieldLabel">Probation Period:
                                                              </td>
                                                              <td align="left">
                                                                  @Html.DropDownList("ProbationPeriodInMonth", new SelectList(Model.PeriodDurationInMonth, "MonthDurationValue", "MonthDurationName", Model.ProbationPeriodInMonth), "--Select--", new { @class = "EmployeeInfoDropdownBig" })
                                                              </td>
                                                          </tr>
                                                          <tr>
                                                              <td align="left" class="employeeInfoFieldLabel">Contractual Period:
                                                              </td>
                                                              <td align="left">
                                                                  @Html.DropDownList("ContractualPeriodInMonth", new SelectList(Model.PeriodDurationInMonth, "MonthDurationValue", "MonthDurationName", Model.ContractualPeriodInMonth), "--Select--", new { @class = "EmployeeInfoDropdownBig" })
                                                              </td>
                                                          </tr>
                                                          <tr>
                                                              <td align="left" class="employeeInfoFieldLabel">Posting Location:<b class="RedMarks">*</b>
                                                              </td>
                                                              <td align="left">
                                                                  @Html.TextBox("LastLocationCode", (string)(Model.LocationName + " [" + Model.LastLocationCode + "]"), new { @class = "EmployeeInfoTextBoxBig" })
                                                              </td>
                                                          </tr>
                                                          <tr>
                                                              <td align="left" class="employeeInfoFieldLabel">Job Grade:
                                                              </td>
                                                              <td align="left">
                                                                  @Html.TextBox("EmployeeGrade", Model.EmployeeGrade, new { @class = "EmployeeInfoTextBoxBig", @readonly = true })
                                                                  @Html.DropDownList("ddlEmployeeGrade", new SelectList(Model.Designation, "HDesignationID", "EmployeeGrade", Model.LastDesignation), new { @style = "display:none;" })
                                                                  @*@Html.DropDownList("ddlEmployeeGrade", new SelectList(Model.Designation, "EmployeeGrade", "EmployeeGrade", Model.LastDesignation), "--Select--", new { @class = "IRDropDown" })*@
                                                              </td>
                                                          </tr>
                                                      </table>
                                                  </td>
                                              </tr>
                                          </table>
                                      </fieldset>
                                  </td>
                              </tr>
                              <tr>
                                  <td id="bankInfo" style="display: none;">
                                      <fieldset>
                                          <legend>Bank Information</legend>
                                          <table cellpadding="0" cellspacing="3" border="0" width="100%" id="EmployeeBankInfo">
                                              <tr>
                                                  <td align="left" class="employeeInfoBankFieldLabel">Salary Location:
                                                  </td>
                                                  <td align="left">
                                                      @Html.Hidden("SalaryLocationCode", @Model.SalaryLocationCode)
                                                      @Html.TextBox("SalaryLocationName", @Model.SalaryLocationName, new { @class = "EmployeeInfoBankTextBoxBig" })
                                                  </td>
                                              </tr>

                                              <tr>
                                                  <td align="left" class="employeeInfoBankFieldLabel">Bank Name:
                                                  </td>
                                                  <td align="left">
                                                      @Html.DropDownList("BankID", Enumerable.Empty<SelectListItem>(), "--Select--", new { @class = "EmployeeInfoBankTextBoxBig" })
                                                      @Html.DropDownList("bankDetailsSave", Enumerable.Empty<SelectListItem>(), "--Select--", new { @class = "EmployeeInfoBankTextBoxBig", @style = "display:none;" })
                                                  </td>
                                              </tr>
                                              <tr>
                                                  <td align="left" class="employeeInfoBankFieldLabel">Branch Name:
                                                  </td>
                                                  <td align="left">
                                                      @Html.DropDownList("BankBranchID", Enumerable.Empty<SelectListItem>(), "--Select--", new { @class = "EmployeeInfoBankTextBoxBig" })
                                                  </td>
                                              </tr>

                                              <tr>
                                                  <td align="left" class="employeeInfoBankFieldLabel">Salary Disbursement Bank Account Number:
                                                  </td>
                                                  <td align="left">
                                                      @Html.DropDownList("SalaryDisbursementBankAccountNumber", Enumerable.Empty<SelectListItem>(), "--Select--", new { @class = "EmployeeInfoBankTextBoxBig" })
                                                  </td>
                                              </tr>

                                              <tr>
                                                  <td align="left" class="employeeInfoBankFieldLabel">Bank Account Number:
                                                  </td>
                                                  <td align="left">
                                                      @Html.TextBox("BankAccountNumber", "", new { @class = "EmployeeInfoBankTextBoxBig" })
                                                  </td>
                                              </tr>


                                              <tr>
                                                  <td align="left" class="employeeInfoBankFieldLabel">Bank Account Type:
                                                  </td>
                                                  <td align="left">
                                                      @Html.DropDownList("BankAccountType", new SelectList(Model.BankAccountTypeInfo, "BankAccountTypeID", "BankAccountTypeDescription"), new { @class = "EmployeeInfoBankTextBoxBig" })
                                                  </td>
                                              </tr>

                                              <tr>
                                                  <td align="left" class="employeeInfoBankFieldLabel">Address:
                                                  </td>
                                                  <td align="left">
                                                      @Html.TextBox("Address", Model.Address, new { @class = "EmployeeInfoBankTextBoxBig", @readonly = true })
                                                  </td>
                                              </tr>
                                              <tr>
                                                  <td align="left" class="employeeInfoBankFieldLabel">Account Opening Date:
                                                  </td>
                                                  <td align="left">

                                                      @(Html.Telerik().DatePicker()
                                                            .Name("AccountOpeningDate")
                                                            .Max(new DateTime(2016, 12, 31))
                                                            .Min(new DateTime(2012, 12, 31))
                                                            .Format("dd-MMM-yyyy")
                                                            .Value(@Model.AccountOpeningDate)
                                                      )

                                                  </td>
                                              </tr>


                                              <tr>
                                                  <td align="left" class="employeeInfoBankFieldLabel">Salary Disbursement Branch Name:
                                                  </td>
                                                  <td align="left">
                                                      @Html.DropDownList("SalaryDisbursementBranchName", Enumerable.Empty<SelectListItem>(), "--Select--", new { @class = "EmployeeInfoBankTextBoxBig" })
                                                  </td>
                                              </tr>
                                          </table>
                                      </fieldset>
                                  </td>
                              </tr>
                          </table>
                      </td>
                  </tr>
                  <tr>
                      <td>
                          <table cellpadding="0" cellspacing="0" border="0" width="100%">
                              <tr>
                                  @if (ViewBag.hfForSavehide=='1'.ToString())
                                  {
                                  @*<td style="width: 500px; padding-top: 5px;">
                                      <input id="btnSaveEmployeeBasicInfo" type="button" value="Save Basic & Employment Info" style="display:none"/>
                                  </td>*@
                                  }
                                  else if (ViewBag.hfForSavehide == '0'.ToString())
                                  { 
                                     <td style="width: 500px; padding-top: 5px;">
                                      <input id="btnSaveEmployeeBasicInfo" type="button" value="Save Basic & Employment Info" style="display:block"/>
                                    </td>
                                  }
                                  <td style="width: 500px; padding-top: 5px;" align="right">
                                      <input type="button" id="btnEmploymentInfoNextButton" onclick="return EnableTab('1')" class="EmployeeInfoNextButton" value="Next" />
                                  </td>
                                  
                              </tr>
                          </table>
                      </td>
                  </tr>
                  @* End Employee info tab *@
              </table>

);

          tabstrip.Add()
             .Text("Educational Qualification")
             .Content(@<table cellpadding="0" cellspacing="0" border="0" width="100%" id="EmployeeEducationalQualificationTable">
                 @* Start Educational Qualification tab *@
                 <tr>
                     <td>
                         <fieldset>
                             <legend>Educational Qualification</legend>
                             <table cellpadding="0" cellspacing="3" border="0" width="100%" id="EmployeeEducationalQualificationTable">
                                 <tr>
                                     <td style="width: 100%;" colspan="2">
                                         @(Html.Telerik().Grid<RASolarERP.DomainModel.HRMSModel.EducationalQualification>()
                                            .Name("gvEducationalQualification")
                                            .DataKeys(keys => keys.Add(k => k.LevelofEdu))
                                            .Columns(column =>
                                            {
                                                column.Bound(s => s.LevelofEdu).Title("Level of Edu.");
                                                column.Bound(s => s.NameOfDegree).Title("Name of Degree");
                                                column.Bound(s => s.FacultyOrBoard).Title("Faculty/Board");
                                                column.Bound(s => s.NameOfInstitution).Title("Name of Institution");
                                                column.Bound(s => s.MajorSujectOrGroup).Title("Major Suject/Group");
                                                column.Bound(s => s.CGPAOrDivision).Title("CGPA/Division");
                                                column.Bound(s => s.PassingYear).Title("Passing Year");
                                            })
                                         .ClientEvents(events =>
                                         {
                                         })
                                         )
                                     </td>
                                 </tr>
                                 <tr>
                                     <td class="employeeInfoFieldLabel">Extra Curricular Act
                                     </td>
                                     <td>
                                         <label id="ExtraCurricularAct" class="EmployeeInfoTextBoxBigBig">
                                             &nbsp;
                                         </label>
                                     </td>
                                 </tr>
                                 <tr>
                                     <td class="employeeInfoFieldLabel">Academic Achievement
                                     </td>
                                     <td>
                                         <label id="AcademicAchievement" class="EmployeeInfoTextBoxBigBig">
                                             &nbsp;
                                         </label>
                                     </td>
                                 </tr>
                                 <tr>
                                     <td colspan="2">
                                         <input id="btnSaveEmployeeEducationalInfo" type="button" value="Save Educational Info" />
                                     </td>
                                 </tr>
                             </table>
                         </fieldset>
                     </td>
                 </tr>
                 <tr>
                     <td>
                         <fieldset>
                             <legend>Professional Degree</legend>
                             <table cellpadding="0" cellspacing="3" border="0" width="100%" id="EmployeeProfessionalDegreeTable">
                                 <tr>
                                     <td style="width: 100%;" colspan="2">
                                         @(Html.Telerik().Grid<RASolarERP.DomainModel.HRMSModel.ProfessionalDegree>()
                                            .Name("gvProfessionalDegree")
                                            .DataKeys(keys => keys.Add(k => k.Certification))
                                            .Columns(column =>
                                            {
                                                column.Bound(s => s.Certification).Title("Certification");
                                                column.Bound(s => s.Institution).Title("Institution");
                                                column.Bound(s => s.Country).Title("Country");
                                                column.Bound(s => s.Location).Title("Location");
                                                column.Bound(s => s.StartsOn).Title("StartsOn");
                                                column.Bound(s => s.EndsOn).Title("EndsOn");
                                                column.Bound(s => s.Duration).Title("Duration");
                                                column.Bound(s => s.Remarks).Title("Remarks");
                                            })
                                         .ClientEvents(events =>
                                         {
                                         })
                                         )
                                     </td>
                                 </tr>
                                 <tr>
                                     <td colspan="2">
                                         <input id="btnSaveEmployeeProfessionalDegree" type="button" value="Save Professional Degree" />
                                     </td>
                                 </tr>
                             </table>
                         </fieldset>
                     </td>
                 </tr>
                 <tr>
                     <td>
                         <fieldset>
                             <legend>Training Summary</legend>
                             <table cellpadding="0" cellspacing="3" border="0" width="100%" id="EmployeeTrainingSummaryTable">
                                 <tr>
                                     <td style="width: 100%;" colspan="2">
                                         @(Html.Telerik().Grid<RASolarERP.DomainModel.HRMSModel.TrainingSummary>()
                                            .Name("gvTrainingSummary")
                                            .DataKeys(keys => keys.Add(k => k.TrainingTitle))
                                            .Columns(column =>
                                            {
                                                column.Bound(s => s.TrainingTitle).Title("Certification");
                                                column.Bound(s => s.TopicsCovered).Title("Certification");
                                                column.Bound(s => s.Institute).Title("Institution");
                                                column.Bound(s => s.Country).Title("Country");
                                                column.Bound(s => s.Location).Title("Location");
                                                column.Bound(s => s.TrainingYear).Title("Location");
                                                column.Bound(s => s.StartsOn).Title("StartsOn");
                                                column.Bound(s => s.EndsOn).Title("EndsOn");
                                                column.Bound(s => s.Duration).Title("Duration");
                                                column.Bound(s => s.Remarks).Title("Remarks");
                                            })
                                         .ClientEvents(events =>
                                         {
                                         })
                                         )
                                     </td>
                                 </tr>
                                 <tr>
                                     <td colspan="2">
                                         <input id="btnSaveEmployeeTrainingSummary" type="button" value="Save Training Summary" />
                                     </td>
                                 </tr>
                             </table>
                         </fieldset>
                     </td>
                 </tr>
                 <tr>
                     <td>
                         <fieldset>
                             <legend>Experience</legend>
                             <table cellpadding="0" cellspacing="3" border="0" width="100%" id="EmployeeExperienceInformationTable">
                                 <tr>
                                     <td style="width: 100%;" colspan="2">
                                         @(Html.Telerik().Grid<RASolarERP.DomainModel.HRMSModel.Experience>()
                                            .Name("gvExperience")
                                            .DataKeys(keys => keys.Add(k => k.CompanyName))
                                            .Columns(column =>
                                            {
                                                column.Bound(s => s.CompanyName).Title("Company Name");
                                                column.Bound(s => s.CompanyBusiness).Title("Company Business");
                                                column.Bound(s => s.CompanyLocation).Title("Company Location");
                                                column.Bound(s => s.JobLocation).Title("Job Location");
                                                column.Bound(s => s.Designation).Title("Designation");
                                                column.Bound(s => s.Department).Title("Department");
                                                column.Bound(s => s.JoiningDate).Title("Joining Date");
                                                column.Bound(s => s.ReleaseDate).Title("Release Date");
                                                column.Bound(s => s.JobDuration).Title("Job Duration");
                                                column.Bound(s => s.JobResponsibilities).Title("Job Responsibilities");
                                            })
                                         .ClientEvents(events =>
                                         {
                                         })
                                         )
                                     </td>
                                 </tr>
                                 <tr>
                                     <td colspan="2">
                                         <input id="btnSaveExperience" type="button" value="Save Experience" />
                                     </td>
                                 </tr>
                             </table>
                         </fieldset>
                     </td>
                 </tr>
                 <tr>
                     <td style="width: 500px; padding-top: 5px;" align="right">
                         <input type="button" id="btnEducationalQualificationNextButton" onclick="return EnableTab('2')" class="EmployeeInfoNextButton" value="Next" />
                     </td>
                 </tr>
                 @* End Educational Qualification tab *@
             </table>

);

          tabstrip.Add()
             .Text("Interview Status")
             .Content(@<table cellpadding="0" cellspacing="0" border="0" width="100%" id="">
                 @* Start Interview Status tab *@
                 <tr>
                     <td>
                         <fieldset>
                             <legend>Interview Status</legend>
                             <table cellpadding="0" cellspacing="0" border="0" width="100%" id="">
                                 <tr>
                                     <td style="width: 50%;" valign="top">
                                         <table cellpadding="0" cellspacing="3" border="0" width="100%" id="">
                                             <tr>
                                                 <td align="left" class="employeeInfoFieldLabel">Interview Date
                                                 </td>
                                                 <td align="left">
                                                     @(Html.Telerik().DatePicker()
                                                                           .Name("InterviewDate")
                                                                          .Max(new DateTime(2050, 12, 31))
                                                                          .Min(new DateTime(1950, 01, 31))
                                                                          .Format("dd-MMM-yyyy")
                                                                          .Value(Model.DateOfBirth)
                                                          )
                                                 </td>
                                             </tr>
                                             <tr>
                                                 <td align="left" class="employeeInfoFieldLabel">Assessment Result
                                                 </td>
                                                 <td align="left">
                                                     @Html.TextBox("AssessmentResult", "", new { @class = "EmployeeInfoTextBoxBig" })
                                                 </td>
                                             </tr>
                                             <tr>
                                                 <td align="left" class="employeeInfoFieldLabel">Offering Letter
                                                 </td>
                                                 <td align="left">
                                                     @Html.CheckBox("OfferingLetter", true)
                                                 </td>
                                             </tr>
                                         </table>
                                     </td>
                                     <td style="width: 50%;" valign="top">
                                         <table cellpadding="0" cellspacing="3" border="0" width="100%" id="">
                                             <tr>
                                                 <td align="left" class="employeeInfoFieldLabel">Position Applied For
                                                 </td>
                                                 <td align="left">
                                                     @Html.TextBox("PositionAppliedFor", "", new { @class = "EmployeeInfoTextBoxBig" })
                                                 </td>
                                             </tr>
                                             <tr>
                                                 <td align="left" class="employeeInfoFieldLabel">Panel Members
                                                 </td>
                                                 <td align="left">
                                                     @Html.TextBox("PanelMembers", "", new { @class = "EmployeeInfoTextBoxBig" })
                                                 </td>
                                             </tr>
                                             <tr>
                                                 <td align="left" class="employeeInfoFieldLabel">Remarks
                                                 </td>
                                                 <td align="left">
                                                     @Html.TextBox("Remarks", "", new { @class = "EmployeeInfoTextBoxBig" })
                                                 </td>
                                             </tr>
                                         </table>
                                     </td>
                                 </tr>
                                 <tr>
                                     <td style="width: 500px; padding-top: 5px;">
                                         <input id="btnSaveInterviewStatus" type="button" value="Save Interview Status" />
                                     </td>
                                     <td style="width: 500px; padding-top: 5px;" align="right">
                                         <input type="button" id="btnInterviewStatusNextButton" onclick="return EnableTab('3')" class="EmployeeInfoNextButton" value="Next" />
                                     </td>
                                 </tr>
                             </table>
                         </fieldset>
                     </td>
                 </tr>
                 @* End Interview Status tab *@
             </table>

);

          tabstrip.Add()
          .Text("Photograph")
          .Content(@<table cellpadding="0" cellspacing="0" border="0" width="100%" id="">
              @* Start Photograph  tab *@
              <tr>
                  <td>
                      <fieldset>
                          <legend>Photograph</legend>
                          <table cellpadding="0" cellspacing="2" border="0" width="100%" id="">
                              <tr>
                                  <td>
                                      <div class="employeeInfoPhotograph">
                                          <img id="employeeImage" src="@Model.EmployeeImagePath"
                                              alt="No Image" />
                                      </div>
                                      <fieldset>
                                          <legend>Employee Image</legend>
                                          @(Html.Telerik().Upload()
                                                .Name("uploadEmployeeImage")
                                                .Multiple(false)
                                                .Async(async => async
                                                .Save("AddEmployeeImage", "Employee", new { employeeId = Model.EmployeeID })
                                                .AutoUpload(false)
                                                )
                                                .ClientEvents(events => events
                                                .OnLoad("onLoad")
                                                .OnSelect("onSelect")
                                                .OnUpload("onUpload")
                                                .OnSuccess("onSuccess")
                                                )
                                            )
                                          <p style="font-size: 10px; padding-top: 2px; margin: 0;">
                                              <b class="RedMarks">Note:</b>&nbsp;Maximum allowed file size <b>100KB</b>. Image
                                              dimension should be maximum <b>200X250 pixel</b>. Image extension must be <b>jpg</b>.
                                          </p>
                                      </fieldset>
                                  </td>
                              </tr>
                              <tr>
                                  <td style="margin-top: 30px;">
                                      <div class="employeeInfoSignature">
                                          <img id="employeeSignature" src="@Model.EmployeeSignaturePath"
                                              alt="No Signature" />
                                      </div>
                                      <fieldset>
                                          <legend>Employee Signature</legend>
                                          @(Html.Telerik().Upload()
                                                .Name("uploadEmployeeSignature")
                                                .Multiple(false)
                                                .Async(async => async
                                                .Save("AddEmployeeSignature", "Employee", new { employeeId = Model.EmployeeID })
                                                .AutoUpload(false)
                                                )
                                                .ClientEvents(events => events
                                                .OnLoad("onLoad")
                                                .OnSelect("onSelect")
                                                .OnUpload("onUploadSignature")
                                                .OnSuccess("onSuccessSignature")
                                                )
                                            )
                                          <p style="font-size: 10px; padding-top: 2px; margin: 0;">
                                              <b class="RedMarks">Note:</b>&nbsp;Maximum allowed file size <b>100KB</b>. Signature
                                              dimension should be maximum <b>350X100 pixel</b>. Signature extension must be <b>jpg</b>.
                                          </p>
                                      </fieldset>
                                  </td>
                              </tr>
                          </table>
                          <p style="font-size: 9px; padding-top: 10px; margin: 0;">
                              <b class="RedMarks">**Note:</b>&nbsp;If an employee image/signature already have
                              uploaded and you upload again an image/signature then the existing image/signature
                              is deleted and new image/signature will saved.
                          </p>
                      </fieldset>
                  </td>
              </tr>
              @* End Photograph tab *@
          </table>

);
      })
      .SelectedIndex(0)
      .Render();
}
<br />
<script type="text/javascript">

    var imageWidthHeight = 1, imageSignatureWidthHeight = 1;

    if (parseInt($('#hfIsContractualEmployee').val()) > 0) {
        $('#ContractualPeriodInMonth').attr("disabled", false);

        $('#ProbationPeriodInMonth').val("");
        $('#ProbationPeriodInMonth').attr("disabled", true);
    }
    else {
        $('#ProbationPeriodInMonth').attr("disabled", false);

        $('#ContractualPeriodInMonth').val("");
        $('#ContractualPeriodInMonth').attr("disabled", true);
    }

    if ($("#hfIsEdited").val() == "value") {
        $("#EmployeeID").attr("readOnly", true);
    }
    else {
        $("#EmployeeID").attr("readOnly", false);
    }

    if ($('#LastEmploymentType').val() == "PROBATIONY")
    {       
        $('#ProbationPeriodInMonth').attr("disabled", false);
        $('#ContractualPeriodInMonth').attr("disabled", true);
        $('#ProbationPeriodInMonth').val("12");
    }
    else
    {
        $('#ProbationPeriodInMonth').attr("disabled", false);
        $('#ContractualPeriodInMonth').attr("disabled", false);
    }

    $(document).ready(function () {



        //for hidden save under show btn
      
        $('#btnShowEmployeeDetails').click(function () {

            $('#hfForhidenSaveBtnUnderShowbtnContr').val('1');
           // $('#btnSaveEmployeeBasicInfo').hide();
            //alert($('#hfForhidenSaveBtnUnderShowbtn').val());
        });
        //hfForhidenSaveBtnUnderShowbtnContr
        //end hidden save under show btn

        var _URL = window.URL || window.webkitURL;

        $('#DateOfBirth').attr("readonly", true);
        $('#PassportExpiryDate').attr("readonly", true);
        $('#JoiningDate').attr("readonly", true);
        $('#InterviewDate').attr("readonly", true);

        $("#uploadEmployeeImage").change(function (e) {

            var file, img;
            if ((file = this.files[0])) {
                img = new Image();
                img.onload = function () {
        //Helper.AlertMessage("", this.width + " --- " + this.height);

                    if (this.width > 0 && this.width <= 200) {
                        imageWidthHeight = 1;
    }
    else {
                        imageWidthHeight = 0;
    }

                    if (this.height > 0 && this.height <= 250) {
                        imageWidthHeight = 1;
    }
    else {
                        imageWidthHeight = 0;
    }

    };
                img.src = _URL.createObjectURL(file);
    }
    });

        $('#ModeOfSalaryPayment').change(function () {

            var modeOfSalaryPament = $(this).val();
            if (modeOfSalaryPament == 'BANK') {
                $('#bankInfo').show();
    }
    else {
                $('#bankInfo').hide();
    }

    });

        $('#BankID').change(function () {

            var bankId = $(this).val();
            LoadBankBranchInfo(bankId);

    });

        $('#BankBranchID').change(function () {

            var bankBranchID = $(this).val();
            LoadBankDisbursementSalaryAccount(bankBranchID);
    });


        $("#uploadEmployeeSignature").change(function (e) {

            var file, img;
            if ((file = this.files[0])) {
                img = new Image();
                img.onload = function () {
        //Helper.AlertMessage("", this.width + " --- " + this.height);

                    if (this.width > 0 && this.width <= 350) {
                        imageSignatureWidthHeight = 1;
    }
    else {
                        imageSignatureWidthHeight = 0;
    }

                    if (this.height > 0 && this.height <= 100) {
                        imageSignatureWidthHeight = 1;
    }
    else {
                        imageSignatureWidthHeight = 0;
    }
    };
                img.src = _URL.createObjectURL(file);
    }
    });

        $('#btnSaveEmployeeBasicInfo').click(function () {
            EmployeeAndEmploymentInfoProcess();
    });

        $('#LastDesignation').change(function () {

            $.ajax({
        type: 'POST',
        url: '@Url.Action("OperationalRoleList", "Employee")',
        data: { designationId: $(this).val() },
        cache: false,
        success: function (data) {

                    $('#LastOperationalRole').get(0).options.length = 0;
                    $('#LastOperationalRole').get(0).options[0] = new Option("--Select--", "");

                    $.map(data, function (item) {
                        $('#LastOperationalRole').get(0).options[$('#LastOperationalRole').get(0).options.length] = new Option(item.OperationalRoleName, item.OperationalRoleID);
    });
    },
        error: function () {
                    Helper.AlertMessage("", "Connection Failed. Please Try Again");
    }
    });
    });

        $("#PresentDistrictCode").change(function () {
            UpazillaInfoLoad($(this).val(), "PresentUpazillaCode");
    });

        $("#PermanentDistrictCode").change(function () {
            UpazillaInfoLoad($(this).val(), "PermanentUpazillaCode");
    });

        $("#LastEmploymentType").change(function () {

            if ($(this).val() == "PROBATIONY") {
                $('#ProbationPeriodInMonth').attr("disabled", false);
                $('#ProbationPeriodInMonth').val("12");
                $('#ContractualPeriodInMonth').val("");
                $('#ContractualPeriodInMonth').attr("disabled", true);
    }
    else if ($(this).val() == "CONTRACTUL") {
                $('#ContractualPeriodInMonth').attr("disabled", false);
                $('#ContractualPeriodInMonth').val("12");
                $('#ProbationPeriodInMonth').val("");
                $('#ProbationPeriodInMonth').attr("disabled", true);
    }
    else {
                $('#ProbationPeriodInMonth').attr("disabled", false);
                $('#ProbationPeriodInMonth').val("6");
                $('#ContractualPeriodInMonth').val("");
                $('#ContractualPeriodInMonth').attr("disabled", true);
    }
    });

        $('#HighestEducation').change(function () {

            $('#ddlHighesteducationLabel').val($(this).val());
            var highestEducationLebel = $('#ddlHighesteducationLabel option:selected').text();
            $('#HighesteducationLabel').val(highestEducationLebel);
    });

        $('#LastDesignation').change(function () {

            $('#ddlEmployeeGrade').val($(this).val());
            var jobGrade = $('#ddlEmployeeGrade option:selected').text();
            $('#EmployeeGrade').val(jobGrade);
        });



    });

    function UpazillaInfoLoad(districtId, dropdownName) {

        $.ajax({
            type: 'POST',
            url: '@Url.Action("UpazillaList", "Employee")',
            data: { districtId: districtId },
            cache: false,
            success: function (data) {

                $('#' + dropdownName).get(0).options.length = 0;
                $('#' + dropdownName).get(0).options[0] = new Option("--Select--", "");

                $.map(data, function (item) {
                    $('#' + dropdownName).get(0).options[$('#' + dropdownName).get(0).options.length] = new Option(item.UpazillaName, item.UpazillaCode);
                });
            },
            error: function () {
                Helper.AlertMessage("", "Connection Failed. Please Try Again");
            }
        });
    }

    function LoadEmployeeBankInfo() {

        var locationCode = $('#SalaryLocationCode').val();

        if (locationCode == "") {
            Helper.AlertMessage("", "Please Select Salary Location");
            return false;
        }

        $.ajax({
            type: 'POST',
            url: '@Url.Action("LoadEmployeeBankInfo", "Employee")',
            data: { locationCode: locationCode },
            cache: false,
            success: function (data) {

                $('#BankID').get(0).options.length = 0;
                //$('#BankID').get(0).options[0] = new Option("--Select--", "");

                $('#bankDetailsSave').get(0).options.length = 0;
                //$('#bankDetailsSave').get(0).options[0] = new Option("--Select--", "");

                $.map(data, function (item) {
                    $('#BankID').get(0).options[$('#BankID').get(0).options.length] = new Option(item.BankName, item.BankID);
                    $('#bankDetailsSave').get(0).options[$('#BankID').get(0).options.length] = new Option(item.Address, item.BankID);
                });

                LoadBankBranchInfo($('#BankID').val());
            },
            error: function () {
                Helper.AlertMessage("", "Connection Failed. Please Try Again");
            }
        });
    }

    function LoadBankBranchInfo(bankId) {

        var locationCode = $('#SalaryLocationCode').val();

        if (locationCode == "") {
            Helper.AlertMessage("", "Please Select Salary Location");
            return false;
        }

        if (bankId == 'ISLAMI' || bankId == 'NCCBL1') {
            $('#SalaryDisbursementBranchName').attr("disabled", false);
        }
        else {
            $('#SalaryDisbursementBranchName').attr("disabled", true);
        }

        $('#bankDetailsSave').val(bankId);
        $('#Address').val($('#bankDetailsSave option:selected').text());

        $.ajax({
            type: 'POST',
            url: '@Url.Action("LoadBranchName", "Employee")',
            data: { bankId: bankId, locationCode: locationCode },
            cache: false,
            success: function (data) {

                $('#BankBranchID').get(0).options.length = 0;
                //$('#BankBranchID').get(0).options[0] = new Option("--Select--", "");

                $.map(data, function (item) {
                    $('#BankBranchID').get(0).options[$('#BankBranchID').get(0).options.length] = new Option(item.BankBranchName, item.BankBranchID);
                });

                if (bankId == 'ISLAMI' || bankId == 'NCCBL1') {
                    $('#SalaryDisbursementBranchName').get(0).options.length = 0;
                    //$('#SalaryDisbursementBranchName').get(0).options[0] = new Option("--Select--", "");

                    $.map(data, function (item) {
                        $('#SalaryDisbursementBranchName').get(0).options[$('#SalaryDisbursementBranchName').get(0).options.length] = new Option(item.BankBranchName, item.BankBranchID);
                    });
                }

                LoadBankDisbursementSalaryAccount($('#BankBranchID').val());
            },
            error: function () {
                Helper.AlertMessage("", "Connection Failed. Please Try Again");
            }
        });
    }

    function LoadBankDisbursementSalaryAccount(bankBranchID) {
        var locationCode = $('#SalaryLocationCode').val();
        var bankID = $('#BankID').val();

        $.ajax({
            type: 'POST',
            url: '@Url.Action("SalaryDisbursementBankAccountNumber", "Employee")',
            data: { locationCode: locationCode, bankID: bankID, bankBranchID: bankBranchID },
            cache: false,
            success: function (data) {

                $('#SalaryDisbursementBankAccountNumber').get(0).options.length = 0;
                //$('#SalaryDisbursementBankAccountNumber').get(0).options[0] = new Option("--Select--", "");

                $.map(data, function (item) {
                    $('#SalaryDisbursementBankAccountNumber').get(0).options[$('#SalaryDisbursementBankAccountNumber').get(0).options.length] = new Option(item.SalaryDisbursementBankAccountNumber, item.BankAccountNumber);
                });
            },
            error: function () {
                Helper.AlertMessage("", "Connection Failed. Please Try Again");
            }
        });
    }

    function CloseDialogWindowEmployeeLocation() {

        var locationCode = "";
        var locationText = "";
        var regionLocationCode = "";


        if ($('#ddlLocationType').val() == "ho") {
            locationText = "[9000] Head Office";
            locationCode = "9000";
        }
        else if ($('#ddlLocationType').val() == "zone") {
            locationText = "[" + $('#ddlZone').val() + "] " + $('#ddlZone').find('option:selected').text();
            locationCode = $('#ddlZone').val();
        }
        else if ($('#ddlLocationType').val() == "unit") {
            locationText = "[" + $('#ddlUnit').val() + "] " + $('#ddlUnit').find('option:selected').text();
            locationCode = $('#ddlUnit').val();
            regionLocationCode = $('#ddlRegion').val();
        }

        if ($('#hfPostingTo').val() == '1') {
            $('#hfPostingLocation').val(locationCode);
            $('#LastLocationCode').val(locationText);
        }
        else if ($('#hfSalaryLocation').val() == '1') {
            $('#SalaryLocationCode').val(locationCode);
            $('#SalaryLocationName').val(locationText);

            LoadEmployeeBankInfo();
        }
        else {
            $('#hfCurrentLocation').val(locationCode);
            $('#hfRegionLocation').val(regionLocationCode);
            $('#txtCurrentLocation').val(locationText);

            $('#hfSearchLocationCode').val(locationCode);
            $('#txtSearchLocationCode').val(locationText);
        }

        var detailWindow = $("#dialogEmployeeLocationSelection").data("tWindow");
        detailWindow.center().close();
        $('#hfPostingTo').val('');
        $('#hfSalaryLocation').val('');

        $('#LoadEmployeeLocationSelectionWindow').html('');

        return false;
    }

    function CloseDialogEmployeeLocationSelection(e) {
        $('#LoadEmployeeLocationSelectionWindow').html('');
    }

    function LoadEmployeeSearchWindow() {

        $.ajax({
            type: 'GET',
            url: '@Url.Action("__LoadEmployeeSearchWindow", "../HRMS/EmployeeRegister")',
            dataType: 'html',
            cache: false,
            success: function (data) {
                $('#LoadEmployeeSelection').html(data);
            },
            error: function () {
                Helper.AlertMessage("", "Connection Failed. Please Try Again");
            }
        });

        var detailWindow = $("#dialogEmployeeSelection").data("tWindow");
        detailWindow.center().open();

    }

    function CloseDialogEmployeeSelection() {
    }

    function OkCommandEmployeeSelectionWindow(employeeId, employeeName) {

        var detailWindow = $("#dialogEmployeeSelection").data("tWindow");
        detailWindow.center().close();

        $('#txtSearchEmployeeId').val(employeeName + ' [' + employeeId + ']');
        $('#hfSearchEmployeeId').val(employeeId);

        return false;
    }

    $('#txtSearchEmployeeId').click(function () {
        LoadEmployeeSearchWindow();
    });

    function LoadLocationDialog() {

        $.ajax({
            type: 'GET',
            url: '@Url.Action("EmployeeLocationSelectionTransferPartial", "EmployeeRegister")',
            dataType: 'html',
            cache: false,
            success: function (data) {
                $('#LoadEmployeeLocationSelectionWindow').html(data);
            },
            error: function () {
                Helper.AlertMessage("", "Connection Failed. Please Try Again");
            }
        });

        var detailWindow = $("#dialogEmployeeLocationSelection").data("tWindow");
        detailWindow.center().open();
    }

    $('#LastLocationCode').click(function () {
        $('#hfPostingTo').val(1);
        LoadLocationDialog();
    });

    $('#SalaryLocationName').click(function () {
        $('#hfSalaryLocation').val(1);
        LoadLocationDialog();
    });

    //-----------------------------------Image Upload-------------------------------------------

    function onUpload(e) {

        if (imageWidthHeight == 0) {
            Helper.AlertMessage("", "Image Width Must Be <=200 pixel And Height <=250 pixel");
            imageWidthHeight = 0;
            return false;
        }
    }

    function onSuccess(e) {

        if (e.response.data[0].messageCode = "success") {
            Helper.AlertMessage("", e.response.data[0].message);
            $("#employeeImage").attr("src", e.response.data[0].id);
        }
        else {
            Helper.AlertMessage("", e.response.data[0].message);
        }
    }

    function onLoad(e) {
        $(this).find("input").attr("accept", "image\/jpeg,image\/jpg,image\/png");
    }

    function onSelect(e) {

        if (e.files[0].size > 102400) {
            Helper.AlertMessage("", 'Maximum File Size Should be 100KB');
            e.preventDefault();
            return false;
        }

        var ext = e.files[0].extension.toLowerCase();

        if ($.inArray(ext, ['.gif', '.jpeg', '.jpg', '.png']) == -1) {
            Helper.AlertMessage("", 'Only jpg File Are Allowed To Upload');
            e.preventDefault();
            return false;
        }
        return true;
    }

    function onUploadSignature(e) {

        if (imageSignatureWidthHeight == 0) {
            Helper.AlertMessage("", "Signature Width Must Be <=350 pixel And Height <=100 pixel");
            return false;
        }
    }

    function onSuccessSignature(e) {

        if (e.response.data[0].messageCode = "success") {
            Helper.AlertMessage("", e.response.data[0].message);
            $("#employeeSignature").attr("src", e.response.data[0].id);
        }
        else {
            Helper.AlertMessage("", e.response.data[0].message);
        }
    }
    //----------------------------------End Image Upload--------------------------------------------


    //---------------------------------Employee & Employment Info Process To Save--------------------------------------------

    function EmployeeAndEmploymentInfoProcess() {

        if (CheckEmployeeAndEmploymentInfo() == false) {
            return false;
        }

        var EmployeeID = $('#EmployeeID').val();
        var EmployeeName = $('#EmployeeName').val();
        var DateOfBirth = $('#DateOfBirth').val();
        var EmployeeFathersName = $('#EmployeeFathersName').val();
        var EmployeeMothersName = $('#EmployeeMothersName').val();
        var Gender = $('#Gender').val();
        var MaritalStatus = $('#MaritalStatus').val();
        var Religion = $('#Religion').val();
        var PlaceOfBirthId = $('#PlaceOfBirthId').val();
        var Nationality = $('#Nationality').val();
        var HighestEducation = $('#HighestEducation').val();
        var MajorSubject = $('#MajorSubject').val();
        var BloodGroup = $('#BloodGroup').val();
        var EmployeeSpouseName = $('#EmployeeSpouseName').val();
        var SpouseBloodGroup = $('#SpouseBloodGroup').val();
        var NationalIDCard = $('#NationalIDCard').val();
        var PassportNO = $('#PassportNo').val();
        var PassportExpiryDate = $('#PassportExpiryDate').val();
        var DrivingLicense = $('#DrivingLicenseNo').val();
        var EmailID = $('#EmailID').val();

        var PresentHouseNo = $('#PresentHouseNo').val();
        var PresentPostOffice = $('#PresentPostOffice').val();
        var PresentDistrictCode = $('#PresentDistrictCode').val();
        var PresentPhone = $('#PresentPhone').val();
        var PresentStreetOrVillage = $('#PresentStreetOrVillage').val();
        var PresentUpazillaCode = $('#PresentUpazillaCode').val();
        var PresentPoliceStation = $('#PresentPoliceStation').val();
        var PresentMobileNo = $('#PresentMobileNo').val();

        var PermanentHouseNo = $('#PermanentHouseNo').val();
        var PermanentPostOffice = $('#PermanentPostOffice').val();
        var PermanentDistrictCode = $('#PermanentDistrictCode').val();
        var PermanentStreetVillage = $('#PermanentStreetVillage').val();
        var PermanentUpazillaCode = $('#PermanentUpazillaCode').val();
        var PermanentPoliceStation = $('#PermanentPoliceStation').val();
        var PermanentMobileNo = $('#PermanentMobileNo').val();
        var PermanentPhone = $('#PermanentPhone').val();

        var JoiningDate = $('#JoiningDate').val();
        var LastEmploymentType = $('#LastEmploymentType').val();
        var LastDepartment = $('#LastDepartment').val();
        var LastDesignation = $('#LastDesignation').val();
        var LastOperationalRole = $('#LastOperationalRole').val();
        var LastLocationCode = $('#hfPostingLocation').val();
        var EmployeeGrade = $('#ddlEmployeeGrade').val();

        var ProbationPeriodInMonth = $('#ProbationPeriodInMonth').val();
        var ContractualPeriodInMonth = $('#ContractualPeriodInMonth').val();
        var ModeOfSalaryPayment = $('#ModeOfSalaryPayment').val();

        var BankID = $('#BankID').val();
        var BankBranchID = $('#BankBranchID').val();
        var BankAccountNumber = $('#BankAccountNumber').val();
        var BankAccountType = $('#BankAccountType').val();
        var Address = $('#Address').val();
        var AccountOpeningDate = $('#AccountOpeningDate').val();
        var SalaryLocationCode = $('#SalaryLocationCode').val();
        var SalaryLocationName = $('#SalaryLocationName').val();
        var SalaryDisbursementBankAccountNumber = $('#SalaryDisbursementBankAccountNumber').val();
        var SalaryDisbursementBranchName = $('#SalaryDisbursementBranchName').val();
        var LastSalaryStructureSeqNo = $('#hfLastSalaryStructureSeqNo').val();

        var employeeInfo = {

            EmployeeID: EmployeeID,
            EmployeeName: EmployeeName,
            EmployeeFathersName: EmployeeFathersName,
            EmployeeMothersName: EmployeeMothersName,
            DateOfBirth: DateOfBirth,
            Gender: Gender,
            PlaceOfBirthId: PlaceOfBirthId,
            MaritalStatus: MaritalStatus,
            Nationality: Nationality,
            Religion: Religion,
            HighestEducation: HighestEducation,
            MajorSubject: MajorSubject,
            BloodGroup: BloodGroup,
            NationalIDCard: NationalIDCard,
            EmailID: EmailID,
            PresentDistrictCode: PresentDistrictCode,
            PresentUpazillaCode: PresentUpazillaCode,
            PresentPoliceStation: PresentPoliceStation,
            PresentPostOffice: PresentPostOffice,
            PresentStreetOrVillage: PresentStreetOrVillage,
            PresentHouseNo: PresentHouseNo,
            PresentMobileNo: PresentMobileNo,
            PresentPhone: PresentPhone,
            PermanentDistrictCode: PermanentDistrictCode,
            PermanentUpazillaCode: PermanentUpazillaCode,
            PermanentPoliceStation: PermanentPoliceStation,
            PermanentPostOffice: PermanentPostOffice,
            PermanentStreetVillage: PermanentStreetVillage,
            PermanentHouseNo: PermanentHouseNo,
            PermanentMobileNo: PermanentMobileNo,
            PermanentPhone: PermanentPhone,
            JoiningDate: JoiningDate,
            LastDesignation: LastDesignation,
            LastOperationalRole: LastOperationalRole,
            LastDepartment: LastDepartment,
            //LastSection: LastSection,
            LastEmploymentType: LastEmploymentType,
            LastSalaryStructureSeqNo: LastSalaryStructureSeqNo,
            ModeOfSalaryPayment: ModeOfSalaryPayment,
            //EmployeeGrade: EmployeeGrade,
            ProbationPeriodInMonth: ProbationPeriodInMonth,
            ContractualPeriodInMonth: ContractualPeriodInMonth,
            //ConfirmationDate: ConfirmationDate,
            LastLocationCode: LastLocationCode,

            PassportNo: PassportNO,
            PassportExpiryDate: PassportExpiryDate,
            EmployeeSpouseName: EmployeeSpouseName,
            SpouseBloodGroup: SpouseBloodGroup,
            DrivingLicenseNo: DrivingLicense,

            BankID: BankID,
            BankBranchID: BankBranchID,
            BankAccountNumber: BankAccountNumber,
            BankAccountType: BankAccountType,
            Address: Address,
            AccountOpeningDate: AccountOpeningDate,
            SalaryLocationCode: SalaryLocationCode,
            SalaryLocationName: SalaryLocationName,
            SalaryDisbursementBankAccountNumber: SalaryDisbursementBankAccountNumber,
            SalaryDisbursementBranchName: SalaryDisbursementBranchName

        };

        $.ajax({
            type: 'POST',
            url: '@Url.Action("SaveEmployeeBasicNEmploymentInfo", "Employee")',
            dataType: 'json',
            contentType: 'application/json;charset=utf-8',
            data: JSON.stringify(employeeInfo),
            cache: false,
            success: function (data) {
                    if (data[0].messageCode == "success") {
                        Helper.AlertMessage("", data[0].message);
                        ClearPersonalNEmpoyemntInforControls();
                    }
                    else {
                        Helper.AlertMessage("", data[0].message);
                    }
                
            },
            error: function () {
                Helper.AlertMessage("", "Save Is Not Success. Please Try Again Later.");
            }
        });
    }

    function CheckEmployeeAndEmploymentInfo() {

        var EmployeeID = $('#EmployeeID').val();
        var EmployeeName = $('#EmployeeName').val();
        var DateOfBirth = $('#DateOfBirth').val();
        var EmployeeFathersName = $('#EmployeeFathersName').val();
        var EmployeeMothersName = $('#EmployeeMothersName').val();
        var Gender = $('#Gender').val();
        var MaritalStatus = $('#MaritalStatus').val();
        var Religion = $('#Religion').val();
        var PlaceOfBirthId = $('#PlaceOfBirthId').val();
        var Nationality = $('#Nationality').val();
        var HighestEducation = $('#HighestEducation').val();
        var MajorSubject = $('#MajorSubject').val();
        var BloodGroup = $('#BloodGroup').val();
        var SpouseName = $('#EmployeeSpouseName').val();
        var SpouseBloodGroup = $('#SpouseBloodGroup').val();
        var NationalIDCard = $('#NationalIDCard').val();
        var PassportNO = $('#PassportNo').val();
        var PExpDate = $('#PassportExpiryDate').val();
        var DrivingLicense = $('#DrivingLicenseNo').val();
        var EmailID = $('#EmailID').val();

        var PresentHouseNo = $('#PresentHouseNo').val();
        var PresentPostOffice = $('#PresentPostOffice').val();
        var PresentDistrictCode = $('#PresentDistrictCode').val();
        var PresentPhone = $('#PresentPhone').val();
        var PresentStreetOrVillage = $('#PresentStreetOrVillage').val();
        var PresentUpazillaCode = $('#PresentUpazillaCode').val();
        var PresentMobileNo = $('#PresentMobileNo').val();

        var PermanentHouseNo = $('#PermanentHouseNo').val();
        var PermanentPostOffice = $('#PermanentPostOffice').val();
        var PermanentDistrictCode = $('#PermanentDistrictCode').val();
        var PermanentStreetVillage = $('#PermanentStreetVillage').val();
        var PermanentUpazillaCode = $('#PermanentUpazillaCode').val();
        var PermanentMobileNo = $('#PermanentMobileNo').val();
        var PermanentPhone = $('#PermanentPhone').val();

        var JoiningDate = $('#JoiningDate').val();
        var LastEmploymentType = $('#LastEmploymentType').val();
        var LastDepartment = $('#LastDepartment').val();
        var LastDesignation = $('#LastDesignation').val();
        var LastOperationalRole = $('#LastOperationalRole').val();
        var LastLocationCode = $('#LastLocationCode').val();
        var EmployeeGrade = $('#ddlEmployeeGrade').val();

        if (EmployeeID == "") {
            Helper.AlertMessage("", "Please Give Employee ID");
            return false;
        }
        else if (EmployeeName == "") {
            Helper.AlertMessage("", "Please Give Employee Name");
            return false;
        }
        else if (DateOfBirth == "") {
            Helper.AlertMessage("", "Please Give Date Of Birth");
            return false;
        }
        else if (EmployeeFathersName == "") {
            Helper.AlertMessage("", "Please Give Father's Name");
            return false;
        }
        else if (EmployeeMothersName == "") {
            Helper.AlertMessage("", "Please Give Mother's Name");
            return false;
        }
        else if (Gender == "") {
            Helper.AlertMessage("", "Please Give Gender");
            return false;
        }
        else if (MaritalStatus == "") {
            Helper.AlertMessage("", "Please Give Marital Status");
            return false;
        }
        else if (Religion == "") {
            Helper.AlertMessage("", "Please Give Religion");
            return false;
        }
        else if (PlaceOfBirthId == "") {
            Helper.AlertMessage("", "Please Give Home District");
            return false;
        }
        else if (Nationality == "") {
            Helper.AlertMessage("", "Please Give Nationality");
            return false;
        }
        else if (HighestEducation == "") {
            Helper.AlertMessage("", "Please Give Highest Education");
            return false;
        }
        else if (BloodGroup == "") {
            Helper.AlertMessage("", "Please Give Blood Group");
            return false;
        }
        else if (PresentDistrictCode == "") {
            Helper.AlertMessage("", "Please Give Present District");
            return false;
        }
        else if (PermanentDistrictCode == "") {
            Helper.AlertMessage("", "Please Give Permanent District");
            return false;
        }
        else if (JoiningDate == "") {
            Helper.AlertMessage("", "Please Give Joining Date");
            return false;
        }
        else if (LastEmploymentType == "") {
            Helper.AlertMessage("", "Please Give Employment Type");
            return false;
        }
        else if (LastDepartment == "") {
            Helper.AlertMessage("", "Please Give Department");
            return false;
        }
        else if (LastDesignation == "") {
            Helper.AlertMessage("", "Please Give Designation");
            return false;
        }
        else if (LastLocationCode == "" || $('#hfPostingLocation').val() == "") {
            Helper.AlertMessage("", "Please Give Posting Location");
            return false;
        }

        if ($('#hfConfirmationDate').val() == "") {

            if (LastEmploymentType == "PROBATIONY" || LastEmploymentType == "PERMANENT1") {

                var ProbationPeriodInMonth = $('#ProbationPeriodInMonth').val();

                if (ProbationPeriodInMonth == "") {
                    Helper.AlertMessage("", "Please Select Probation Period");
                    return false;
                }

            }
            else if (LastEmploymentType == "CONTRACTUL") {

                var ContractualPeriodInMonth = $('#ContractualPeriodInMonth').val();

                if (ContractualPeriodInMonth == "") {
                    Helper.AlertMessage("", "Please Select Contractual Period");
                    return false;
                }
            }
        }

        return true;
    }

    //---------------------------------End Employee & Employment Info Process To Save----------------------------------------


    function EnableTab(tabIndex) {

        var nextTab = parseInt(tabIndex) + 1;

        var tabstrip = $("#tabEmployeeDetailsView").data("tTabStrip");
        var item = $("li", tabstrip.element)[nextTab];
        tabstrip.select(item);
    }

    function ClearPersonalNEmpoyemntInforControls() {
        $('#EmployeePersonalInformationTable input, select').each(function () {
            $(this).val("");
        });

        $('#EmployeeBankInfo input, select').each(function () {
            $(this).val("");
        });

        $('#Gender').val("M");
        $('#Nationality').val("Bangladeshi");
        $('#ProbationPeriodInMonth').val("12");
        $('#ContractualPeriodInMonth').attr("disabled", true);
        $('#ContractualPeriodInMonth').val("12");

        $('#LastLocationCode').val("");
        $('#EmployeeGrade').val("");
        $('#hfSalaryLocation').val("");
        $('#hfPostingLocation').val("");
        $('#SalaryLocationCode').val("");
        $('#JoiningDate').val("");
        $('#bankInfo').hide();
    }
   

    function RSFMenu(goFor) {
        window.location.replace(Helper.Menu("../../", goFor));
        return false;
    }

</script>
