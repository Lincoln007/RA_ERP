//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace RASolarERP.Web {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RASolarERPDataSetForSalaryDisbursement")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RASolarERPDataSetForSalaryDisbursement : global::System.Data.DataSet {
        
        private SP_HrmGenerateNGetBankAdviceToDisburseSalaryDataTable tableSP_HrmGenerateNGetBankAdviceToDisburseSalary;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RASolarERPDataSetForSalaryDisbursement() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected RASolarERPDataSetForSalaryDisbursement(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SP_HrmGenerateNGetBankAdviceToDisburseSalary"] != null)) {
                    base.Tables.Add(new SP_HrmGenerateNGetBankAdviceToDisburseSalaryDataTable(ds.Tables["SP_HrmGenerateNGetBankAdviceToDisburseSalary"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SP_HrmGenerateNGetBankAdviceToDisburseSalaryDataTable SP_HrmGenerateNGetBankAdviceToDisburseSalary {
            get {
                return this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            RASolarERPDataSetForSalaryDisbursement cln = ((RASolarERPDataSetForSalaryDisbursement)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SP_HrmGenerateNGetBankAdviceToDisburseSalary"] != null)) {
                    base.Tables.Add(new SP_HrmGenerateNGetBankAdviceToDisburseSalaryDataTable(ds.Tables["SP_HrmGenerateNGetBankAdviceToDisburseSalary"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary = ((SP_HrmGenerateNGetBankAdviceToDisburseSalaryDataTable)(base.Tables["SP_HrmGenerateNGetBankAdviceToDisburseSalary"]));
            if ((initTable == true)) {
                if ((this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary != null)) {
                    this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "RASolarERPDataSetForSalaryDisbursement";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RASolarERPDataSetForSalaryDisbursement.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary = new SP_HrmGenerateNGetBankAdviceToDisburseSalaryDataTable();
            base.Tables.Add(this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSP_HrmGenerateNGetBankAdviceToDisburseSalary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RASolarERPDataSetForSalaryDisbursement ds = new RASolarERPDataSetForSalaryDisbursement();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SP_HrmGenerateNGetBankAdviceToDisburseSalaryRowChangeEventHandler(object sender, SP_HrmGenerateNGetBankAdviceToDisburseSalaryRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SP_HrmGenerateNGetBankAdviceToDisburseSalaryDataTable : global::System.Data.TypedTableBase<SP_HrmGenerateNGetBankAdviceToDisburseSalaryRow> {
            
            private global::System.Data.DataColumn columnSalaryZoneCode;
            
            private global::System.Data.DataColumn columnSalaryZoneName;
            
            private global::System.Data.DataColumn columnSalaryRegionCode;
            
            private global::System.Data.DataColumn columnSalaryRegionName;
            
            private global::System.Data.DataColumn columnSalaryLocationCode1;
            
            private global::System.Data.DataColumn columnSalaryLocationName;
            
            private global::System.Data.DataColumn columnBankID;
            
            private global::System.Data.DataColumn columnBankName;
            
            private global::System.Data.DataColumn columnBankBranchID;
            
            private global::System.Data.DataColumn columnBankBranchName;
            
            private global::System.Data.DataColumn columnBankBranchNameInBangla;
            
            private global::System.Data.DataColumn columnLetterAddressTo;
            
            private global::System.Data.DataColumn columnLetterAddressToInBangla;
            
            private global::System.Data.DataColumn columnBankAddress1;
            
            private global::System.Data.DataColumn columnBankAddress1InBangla;
            
            private global::System.Data.DataColumn columnSalaryLocationCode;
            
            private global::System.Data.DataColumn columnCompanyBankAccountNumber;
            
            private global::System.Data.DataColumn columnBATypeDescription;
            
            private global::System.Data.DataColumn columnBATypeDescriptionInBangla;
            
            private global::System.Data.DataColumn columnAdviceLetterReferenceSeqNo;
            
            private global::System.Data.DataColumn columnAdviceLetterReferenceNo;
            
            private global::System.Data.DataColumn columnSignatory1Designation;
            
            private global::System.Data.DataColumn columnSignatory1Name;
            
            private global::System.Data.DataColumn columnSignatory2Designation;
            
            private global::System.Data.DataColumn columnSignatory2Name;
            
            private global::System.Data.DataColumn columnCreatedOn;
            
            private global::System.Data.DataColumn columnEmployeeLocationCode;
            
            private global::System.Data.DataColumn columnSerialNo;
            
            private global::System.Data.DataColumn columnEmployeeID;
            
            private global::System.Data.DataColumn columnEmployeeName;
            
            private global::System.Data.DataColumn columnEmployeeBankAccountNumber;
            
            private global::System.Data.DataColumn columnSalaryDisbursementBranchName;
            
            private global::System.Data.DataColumn columnSalaryOtherThanTADAAmount;
            
            private global::System.Data.DataColumn columnTADAAmount;
            
            private global::System.Data.DataColumn columnBonusAmount;
            
            private global::System.Data.DataColumn columnTotalSalaryAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SP_HrmGenerateNGetBankAdviceToDisburseSalaryDataTable() {
                this.TableName = "SP_HrmGenerateNGetBankAdviceToDisburseSalary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SP_HrmGenerateNGetBankAdviceToDisburseSalaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SP_HrmGenerateNGetBankAdviceToDisburseSalaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalaryZoneCodeColumn {
                get {
                    return this.columnSalaryZoneCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalaryZoneNameColumn {
                get {
                    return this.columnSalaryZoneName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalaryRegionCodeColumn {
                get {
                    return this.columnSalaryRegionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalaryRegionNameColumn {
                get {
                    return this.columnSalaryRegionName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalaryLocationCode1Column {
                get {
                    return this.columnSalaryLocationCode1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalaryLocationNameColumn {
                get {
                    return this.columnSalaryLocationName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankIDColumn {
                get {
                    return this.columnBankID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankNameColumn {
                get {
                    return this.columnBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankBranchIDColumn {
                get {
                    return this.columnBankBranchID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankBranchNameColumn {
                get {
                    return this.columnBankBranchName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankBranchNameInBanglaColumn {
                get {
                    return this.columnBankBranchNameInBangla;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterAddressToColumn {
                get {
                    return this.columnLetterAddressTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LetterAddressToInBanglaColumn {
                get {
                    return this.columnLetterAddressToInBangla;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankAddress1Column {
                get {
                    return this.columnBankAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankAddress1InBanglaColumn {
                get {
                    return this.columnBankAddress1InBangla;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalaryLocationCodeColumn {
                get {
                    return this.columnSalaryLocationCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompanyBankAccountNumberColumn {
                get {
                    return this.columnCompanyBankAccountNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BATypeDescriptionColumn {
                get {
                    return this.columnBATypeDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BATypeDescriptionInBanglaColumn {
                get {
                    return this.columnBATypeDescriptionInBangla;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdviceLetterReferenceSeqNoColumn {
                get {
                    return this.columnAdviceLetterReferenceSeqNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdviceLetterReferenceNoColumn {
                get {
                    return this.columnAdviceLetterReferenceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Signatory1DesignationColumn {
                get {
                    return this.columnSignatory1Designation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Signatory1NameColumn {
                get {
                    return this.columnSignatory1Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Signatory2DesignationColumn {
                get {
                    return this.columnSignatory2Designation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Signatory2NameColumn {
                get {
                    return this.columnSignatory2Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatedOnColumn {
                get {
                    return this.columnCreatedOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeLocationCodeColumn {
                get {
                    return this.columnEmployeeLocationCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SerialNoColumn {
                get {
                    return this.columnSerialNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeIDColumn {
                get {
                    return this.columnEmployeeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeNameColumn {
                get {
                    return this.columnEmployeeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmployeeBankAccountNumberColumn {
                get {
                    return this.columnEmployeeBankAccountNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalaryDisbursementBranchNameColumn {
                get {
                    return this.columnSalaryDisbursementBranchName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SalaryOtherThanTADAAmountColumn {
                get {
                    return this.columnSalaryOtherThanTADAAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TADAAmountColumn {
                get {
                    return this.columnTADAAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BonusAmountColumn {
                get {
                    return this.columnBonusAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalSalaryAmountColumn {
                get {
                    return this.columnTotalSalaryAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SP_HrmGenerateNGetBankAdviceToDisburseSalaryRow this[int index] {
                get {
                    return ((SP_HrmGenerateNGetBankAdviceToDisburseSalaryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SP_HrmGenerateNGetBankAdviceToDisburseSalaryRowChangeEventHandler SP_HrmGenerateNGetBankAdviceToDisburseSalaryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SP_HrmGenerateNGetBankAdviceToDisburseSalaryRowChangeEventHandler SP_HrmGenerateNGetBankAdviceToDisburseSalaryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SP_HrmGenerateNGetBankAdviceToDisburseSalaryRowChangeEventHandler SP_HrmGenerateNGetBankAdviceToDisburseSalaryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SP_HrmGenerateNGetBankAdviceToDisburseSalaryRowChangeEventHandler SP_HrmGenerateNGetBankAdviceToDisburseSalaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSP_HrmGenerateNGetBankAdviceToDisburseSalaryRow(SP_HrmGenerateNGetBankAdviceToDisburseSalaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SP_HrmGenerateNGetBankAdviceToDisburseSalaryRow AddSP_HrmGenerateNGetBankAdviceToDisburseSalaryRow(
                        string SalaryZoneCode, 
                        string SalaryZoneName, 
                        string SalaryRegionCode, 
                        string SalaryRegionName, 
                        string SalaryLocationCode1, 
                        string SalaryLocationName, 
                        string BankID, 
                        string BankName, 
                        string BankBranchID, 
                        string BankBranchName, 
                        string BankBranchNameInBangla, 
                        string LetterAddressTo, 
                        string LetterAddressToInBangla, 
                        string BankAddress1, 
                        string BankAddress1InBangla, 
                        string SalaryLocationCode, 
                        string CompanyBankAccountNumber, 
                        string BATypeDescription, 
                        string BATypeDescriptionInBangla, 
                        short AdviceLetterReferenceSeqNo, 
                        string AdviceLetterReferenceNo, 
                        string Signatory1Designation, 
                        string Signatory1Name, 
                        string Signatory2Designation, 
                        string Signatory2Name, 
                        System.DateTime CreatedOn, 
                        string EmployeeLocationCode, 
                        long SerialNo, 
                        string EmployeeID, 
                        string EmployeeName, 
                        string EmployeeBankAccountNumber, 
                        string SalaryDisbursementBranchName, 
                        decimal SalaryOtherThanTADAAmount, 
                        decimal TADAAmount, 
                        decimal BonusAmount, 
                        decimal TotalSalaryAmount) {
                SP_HrmGenerateNGetBankAdviceToDisburseSalaryRow rowSP_HrmGenerateNGetBankAdviceToDisburseSalaryRow = ((SP_HrmGenerateNGetBankAdviceToDisburseSalaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SalaryZoneCode,
                        SalaryZoneName,
                        SalaryRegionCode,
                        SalaryRegionName,
                        SalaryLocationCode1,
                        SalaryLocationName,
                        BankID,
                        BankName,
                        BankBranchID,
                        BankBranchName,
                        BankBranchNameInBangla,
                        LetterAddressTo,
                        LetterAddressToInBangla,
                        BankAddress1,
                        BankAddress1InBangla,
                        SalaryLocationCode,
                        CompanyBankAccountNumber,
                        BATypeDescription,
                        BATypeDescriptionInBangla,
                        AdviceLetterReferenceSeqNo,
                        AdviceLetterReferenceNo,
                        Signatory1Designation,
                        Signatory1Name,
                        Signatory2Designation,
                        Signatory2Name,
                        CreatedOn,
                        EmployeeLocationCode,
                        SerialNo,
                        EmployeeID,
                        EmployeeName,
                        EmployeeBankAccountNumber,
                        SalaryDisbursementBranchName,
                        SalaryOtherThanTADAAmount,
                        TADAAmount,
                        BonusAmount,
                        TotalSalaryAmount};
                rowSP_HrmGenerateNGetBankAdviceToDisburseSalaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSP_HrmGenerateNGetBankAdviceToDisburseSalaryRow);
                return rowSP_HrmGenerateNGetBankAdviceToDisburseSalaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SP_HrmGenerateNGetBankAdviceToDisburseSalaryDataTable cln = ((SP_HrmGenerateNGetBankAdviceToDisburseSalaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SP_HrmGenerateNGetBankAdviceToDisburseSalaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSalaryZoneCode = base.Columns["SalaryZoneCode"];
                this.columnSalaryZoneName = base.Columns["SalaryZoneName"];
                this.columnSalaryRegionCode = base.Columns["SalaryRegionCode"];
                this.columnSalaryRegionName = base.Columns["SalaryRegionName"];
                this.columnSalaryLocationCode1 = base.Columns["SalaryLocationCode1"];
                this.columnSalaryLocationName = base.Columns["SalaryLocationName"];
                this.columnBankID = base.Columns["BankID"];
                this.columnBankName = base.Columns["BankName"];
                this.columnBankBranchID = base.Columns["BankBranchID"];
                this.columnBankBranchName = base.Columns["BankBranchName"];
                this.columnBankBranchNameInBangla = base.Columns["BankBranchNameInBangla"];
                this.columnLetterAddressTo = base.Columns["LetterAddressTo"];
                this.columnLetterAddressToInBangla = base.Columns["LetterAddressToInBangla"];
                this.columnBankAddress1 = base.Columns["BankAddress1"];
                this.columnBankAddress1InBangla = base.Columns["BankAddress1InBangla"];
                this.columnSalaryLocationCode = base.Columns["SalaryLocationCode"];
                this.columnCompanyBankAccountNumber = base.Columns["CompanyBankAccountNumber"];
                this.columnBATypeDescription = base.Columns["BATypeDescription"];
                this.columnBATypeDescriptionInBangla = base.Columns["BATypeDescriptionInBangla"];
                this.columnAdviceLetterReferenceSeqNo = base.Columns["AdviceLetterReferenceSeqNo"];
                this.columnAdviceLetterReferenceNo = base.Columns["AdviceLetterReferenceNo"];
                this.columnSignatory1Designation = base.Columns["Signatory1Designation"];
                this.columnSignatory1Name = base.Columns["Signatory1Name"];
                this.columnSignatory2Designation = base.Columns["Signatory2Designation"];
                this.columnSignatory2Name = base.Columns["Signatory2Name"];
                this.columnCreatedOn = base.Columns["CreatedOn"];
                this.columnEmployeeLocationCode = base.Columns["EmployeeLocationCode"];
                this.columnSerialNo = base.Columns["SerialNo"];
                this.columnEmployeeID = base.Columns["EmployeeID"];
                this.columnEmployeeName = base.Columns["EmployeeName"];
                this.columnEmployeeBankAccountNumber = base.Columns["EmployeeBankAccountNumber"];
                this.columnSalaryDisbursementBranchName = base.Columns["SalaryDisbursementBranchName"];
                this.columnSalaryOtherThanTADAAmount = base.Columns["SalaryOtherThanTADAAmount"];
                this.columnTADAAmount = base.Columns["TADAAmount"];
                this.columnBonusAmount = base.Columns["BonusAmount"];
                this.columnTotalSalaryAmount = base.Columns["TotalSalaryAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSalaryZoneCode = new global::System.Data.DataColumn("SalaryZoneCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalaryZoneCode);
                this.columnSalaryZoneName = new global::System.Data.DataColumn("SalaryZoneName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalaryZoneName);
                this.columnSalaryRegionCode = new global::System.Data.DataColumn("SalaryRegionCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalaryRegionCode);
                this.columnSalaryRegionName = new global::System.Data.DataColumn("SalaryRegionName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalaryRegionName);
                this.columnSalaryLocationCode1 = new global::System.Data.DataColumn("SalaryLocationCode1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalaryLocationCode1);
                this.columnSalaryLocationName = new global::System.Data.DataColumn("SalaryLocationName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalaryLocationName);
                this.columnBankID = new global::System.Data.DataColumn("BankID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankID);
                this.columnBankName = new global::System.Data.DataColumn("BankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankName);
                this.columnBankBranchID = new global::System.Data.DataColumn("BankBranchID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankBranchID);
                this.columnBankBranchName = new global::System.Data.DataColumn("BankBranchName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankBranchName);
                this.columnBankBranchNameInBangla = new global::System.Data.DataColumn("BankBranchNameInBangla", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankBranchNameInBangla);
                this.columnLetterAddressTo = new global::System.Data.DataColumn("LetterAddressTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterAddressTo);
                this.columnLetterAddressToInBangla = new global::System.Data.DataColumn("LetterAddressToInBangla", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLetterAddressToInBangla);
                this.columnBankAddress1 = new global::System.Data.DataColumn("BankAddress1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankAddress1);
                this.columnBankAddress1InBangla = new global::System.Data.DataColumn("BankAddress1InBangla", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankAddress1InBangla);
                this.columnSalaryLocationCode = new global::System.Data.DataColumn("SalaryLocationCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalaryLocationCode);
                this.columnCompanyBankAccountNumber = new global::System.Data.DataColumn("CompanyBankAccountNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyBankAccountNumber);
                this.columnBATypeDescription = new global::System.Data.DataColumn("BATypeDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATypeDescription);
                this.columnBATypeDescriptionInBangla = new global::System.Data.DataColumn("BATypeDescriptionInBangla", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATypeDescriptionInBangla);
                this.columnAdviceLetterReferenceSeqNo = new global::System.Data.DataColumn("AdviceLetterReferenceSeqNo", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdviceLetterReferenceSeqNo);
                this.columnAdviceLetterReferenceNo = new global::System.Data.DataColumn("AdviceLetterReferenceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdviceLetterReferenceNo);
                this.columnSignatory1Designation = new global::System.Data.DataColumn("Signatory1Designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSignatory1Designation);
                this.columnSignatory1Name = new global::System.Data.DataColumn("Signatory1Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSignatory1Name);
                this.columnSignatory2Designation = new global::System.Data.DataColumn("Signatory2Designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSignatory2Designation);
                this.columnSignatory2Name = new global::System.Data.DataColumn("Signatory2Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSignatory2Name);
                this.columnCreatedOn = new global::System.Data.DataColumn("CreatedOn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedOn);
                this.columnEmployeeLocationCode = new global::System.Data.DataColumn("EmployeeLocationCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeLocationCode);
                this.columnSerialNo = new global::System.Data.DataColumn("SerialNo", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerialNo);
                this.columnEmployeeID = new global::System.Data.DataColumn("EmployeeID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeID);
                this.columnEmployeeName = new global::System.Data.DataColumn("EmployeeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeName);
                this.columnEmployeeBankAccountNumber = new global::System.Data.DataColumn("EmployeeBankAccountNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeBankAccountNumber);
                this.columnSalaryDisbursementBranchName = new global::System.Data.DataColumn("SalaryDisbursementBranchName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalaryDisbursementBranchName);
                this.columnSalaryOtherThanTADAAmount = new global::System.Data.DataColumn("SalaryOtherThanTADAAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalaryOtherThanTADAAmount);
                this.columnTADAAmount = new global::System.Data.DataColumn("TADAAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTADAAmount);
                this.columnBonusAmount = new global::System.Data.DataColumn("BonusAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBonusAmount);
                this.columnTotalSalaryAmount = new global::System.Data.DataColumn("TotalSalaryAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalSalaryAmount);
                this.columnSalaryZoneCode.MaxLength = 6;
                this.columnSalaryZoneName.MaxLength = 50;
                this.columnSalaryRegionCode.MaxLength = 6;
                this.columnSalaryRegionName.MaxLength = 50;
                this.columnSalaryLocationCode1.AllowDBNull = false;
                this.columnSalaryLocationCode1.MaxLength = 6;
                this.columnSalaryLocationName.MaxLength = 50;
                this.columnBankID.AllowDBNull = false;
                this.columnBankID.MaxLength = 6;
                this.columnBankName.AllowDBNull = false;
                this.columnBankName.MaxLength = 50;
                this.columnBankBranchID.AllowDBNull = false;
                this.columnBankBranchID.MaxLength = 10;
                this.columnBankBranchName.MaxLength = 50;
                this.columnBankBranchNameInBangla.MaxLength = 50;
                this.columnLetterAddressTo.AllowDBNull = false;
                this.columnLetterAddressTo.MaxLength = 50;
                this.columnLetterAddressToInBangla.MaxLength = 50;
                this.columnBankAddress1.AllowDBNull = false;
                this.columnBankAddress1.MaxLength = 50;
                this.columnBankAddress1InBangla.MaxLength = 50;
                this.columnSalaryLocationCode.AllowDBNull = false;
                this.columnSalaryLocationCode.MaxLength = 6;
                this.columnCompanyBankAccountNumber.AllowDBNull = false;
                this.columnCompanyBankAccountNumber.MaxLength = 20;
                this.columnBATypeDescription.AllowDBNull = false;
                this.columnBATypeDescription.MaxLength = 50;
                this.columnBATypeDescriptionInBangla.MaxLength = 50;
                this.columnAdviceLetterReferenceSeqNo.AllowDBNull = false;
                this.columnAdviceLetterReferenceNo.AllowDBNull = false;
                this.columnAdviceLetterReferenceNo.MaxLength = 25;
                this.columnSignatory1Designation.AllowDBNull = false;
                this.columnSignatory1Designation.MaxLength = 50;
                this.columnSignatory1Name.MaxLength = 50;
                this.columnSignatory2Designation.AllowDBNull = false;
                this.columnSignatory2Designation.MaxLength = 50;
                this.columnSignatory2Name.MaxLength = 50;
                this.columnEmployeeLocationCode.MaxLength = 6;
                this.columnEmployeeID.AllowDBNull = false;
                this.columnEmployeeID.MaxLength = 8;
                this.columnEmployeeName.AllowDBNull = false;
                this.columnEmployeeName.MaxLength = 50;
                this.columnEmployeeBankAccountNumber.AllowDBNull = false;
                this.columnEmployeeBankAccountNumber.MaxLength = 20;
                this.columnSalaryDisbursementBranchName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SP_HrmGenerateNGetBankAdviceToDisburseSalaryRow NewSP_HrmGenerateNGetBankAdviceToDisburseSalaryRow() {
                return ((SP_HrmGenerateNGetBankAdviceToDisburseSalaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SP_HrmGenerateNGetBankAdviceToDisburseSalaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SP_HrmGenerateNGetBankAdviceToDisburseSalaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SP_HrmGenerateNGetBankAdviceToDisburseSalaryRowChanged != null)) {
                    this.SP_HrmGenerateNGetBankAdviceToDisburseSalaryRowChanged(this, new SP_HrmGenerateNGetBankAdviceToDisburseSalaryRowChangeEvent(((SP_HrmGenerateNGetBankAdviceToDisburseSalaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SP_HrmGenerateNGetBankAdviceToDisburseSalaryRowChanging != null)) {
                    this.SP_HrmGenerateNGetBankAdviceToDisburseSalaryRowChanging(this, new SP_HrmGenerateNGetBankAdviceToDisburseSalaryRowChangeEvent(((SP_HrmGenerateNGetBankAdviceToDisburseSalaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SP_HrmGenerateNGetBankAdviceToDisburseSalaryRowDeleted != null)) {
                    this.SP_HrmGenerateNGetBankAdviceToDisburseSalaryRowDeleted(this, new SP_HrmGenerateNGetBankAdviceToDisburseSalaryRowChangeEvent(((SP_HrmGenerateNGetBankAdviceToDisburseSalaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SP_HrmGenerateNGetBankAdviceToDisburseSalaryRowDeleting != null)) {
                    this.SP_HrmGenerateNGetBankAdviceToDisburseSalaryRowDeleting(this, new SP_HrmGenerateNGetBankAdviceToDisburseSalaryRowChangeEvent(((SP_HrmGenerateNGetBankAdviceToDisburseSalaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSP_HrmGenerateNGetBankAdviceToDisburseSalaryRow(SP_HrmGenerateNGetBankAdviceToDisburseSalaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RASolarERPDataSetForSalaryDisbursement ds = new RASolarERPDataSetForSalaryDisbursement();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SP_HrmGenerateNGetBankAdviceToDisburseSalaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SP_HrmGenerateNGetBankAdviceToDisburseSalaryRow : global::System.Data.DataRow {
            
            private SP_HrmGenerateNGetBankAdviceToDisburseSalaryDataTable tableSP_HrmGenerateNGetBankAdviceToDisburseSalary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SP_HrmGenerateNGetBankAdviceToDisburseSalaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary = ((SP_HrmGenerateNGetBankAdviceToDisburseSalaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalaryZoneCode {
                get {
                    try {
                        return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryZoneCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalaryZoneCode\' in table \'SP_HrmGenerateNGetBankAdviceToDis" +
                                "burseSalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryZoneCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalaryZoneName {
                get {
                    try {
                        return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryZoneNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalaryZoneName\' in table \'SP_HrmGenerateNGetBankAdviceToDis" +
                                "burseSalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryZoneNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalaryRegionCode {
                get {
                    try {
                        return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryRegionCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalaryRegionCode\' in table \'SP_HrmGenerateNGetBankAdviceToD" +
                                "isburseSalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryRegionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalaryRegionName {
                get {
                    try {
                        return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryRegionNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalaryRegionName\' in table \'SP_HrmGenerateNGetBankAdviceToD" +
                                "isburseSalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryRegionNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalaryLocationCode1 {
                get {
                    return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryLocationCode1Column]));
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryLocationCode1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalaryLocationName {
                get {
                    try {
                        return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryLocationNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalaryLocationName\' in table \'SP_HrmGenerateNGetBankAdviceT" +
                                "oDisburseSalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryLocationNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankID {
                get {
                    return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BankIDColumn]));
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BankIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankName {
                get {
                    return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BankNameColumn]));
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankBranchID {
                get {
                    return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BankBranchIDColumn]));
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BankBranchIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankBranchName {
                get {
                    try {
                        return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BankBranchNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankBranchName\' in table \'SP_HrmGenerateNGetBankAdviceToDis" +
                                "burseSalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BankBranchNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankBranchNameInBangla {
                get {
                    try {
                        return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BankBranchNameInBanglaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankBranchNameInBangla\' in table \'SP_HrmGenerateNGetBankAdv" +
                                "iceToDisburseSalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BankBranchNameInBanglaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LetterAddressTo {
                get {
                    return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.LetterAddressToColumn]));
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.LetterAddressToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LetterAddressToInBangla {
                get {
                    try {
                        return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.LetterAddressToInBanglaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LetterAddressToInBangla\' in table \'SP_HrmGenerateNGetBankAd" +
                                "viceToDisburseSalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.LetterAddressToInBanglaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankAddress1 {
                get {
                    return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BankAddress1Column]));
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BankAddress1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankAddress1InBangla {
                get {
                    try {
                        return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BankAddress1InBanglaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankAddress1InBangla\' in table \'SP_HrmGenerateNGetBankAdvic" +
                                "eToDisburseSalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BankAddress1InBanglaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalaryLocationCode {
                get {
                    return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryLocationCodeColumn]));
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryLocationCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CompanyBankAccountNumber {
                get {
                    return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.CompanyBankAccountNumberColumn]));
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.CompanyBankAccountNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BATypeDescription {
                get {
                    return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BATypeDescriptionColumn]));
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BATypeDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BATypeDescriptionInBangla {
                get {
                    try {
                        return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BATypeDescriptionInBanglaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BATypeDescriptionInBangla\' in table \'SP_HrmGenerateNGetBank" +
                                "AdviceToDisburseSalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BATypeDescriptionInBanglaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public short AdviceLetterReferenceSeqNo {
                get {
                    return ((short)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.AdviceLetterReferenceSeqNoColumn]));
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.AdviceLetterReferenceSeqNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AdviceLetterReferenceNo {
                get {
                    return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.AdviceLetterReferenceNoColumn]));
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.AdviceLetterReferenceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Signatory1Designation {
                get {
                    return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.Signatory1DesignationColumn]));
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.Signatory1DesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Signatory1Name {
                get {
                    try {
                        return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.Signatory1NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Signatory1Name\' in table \'SP_HrmGenerateNGetBankAdviceToDis" +
                                "burseSalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.Signatory1NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Signatory2Designation {
                get {
                    return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.Signatory2DesignationColumn]));
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.Signatory2DesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Signatory2Name {
                get {
                    try {
                        return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.Signatory2NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Signatory2Name\' in table \'SP_HrmGenerateNGetBankAdviceToDis" +
                                "burseSalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.Signatory2NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreatedOn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.CreatedOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedOn\' in table \'SP_HrmGenerateNGetBankAdviceToDisburse" +
                                "Salary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.CreatedOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EmployeeLocationCode {
                get {
                    try {
                        return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.EmployeeLocationCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeeLocationCode\' in table \'SP_HrmGenerateNGetBankAdvic" +
                                "eToDisburseSalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.EmployeeLocationCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long SerialNo {
                get {
                    try {
                        return ((long)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SerialNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SerialNo\' in table \'SP_HrmGenerateNGetBankAdviceToDisburseS" +
                                "alary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SerialNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EmployeeID {
                get {
                    return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.EmployeeIDColumn]));
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.EmployeeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EmployeeName {
                get {
                    return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.EmployeeNameColumn]));
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.EmployeeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EmployeeBankAccountNumber {
                get {
                    return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.EmployeeBankAccountNumberColumn]));
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.EmployeeBankAccountNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SalaryDisbursementBranchName {
                get {
                    try {
                        return ((string)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryDisbursementBranchNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalaryDisbursementBranchName\' in table \'SP_HrmGenerateNGetB" +
                                "ankAdviceToDisburseSalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryDisbursementBranchNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SalaryOtherThanTADAAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryOtherThanTADAAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalaryOtherThanTADAAmount\' in table \'SP_HrmGenerateNGetBank" +
                                "AdviceToDisburseSalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryOtherThanTADAAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TADAAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.TADAAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TADAAmount\' in table \'SP_HrmGenerateNGetBankAdviceToDisburs" +
                                "eSalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.TADAAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BonusAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BonusAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BonusAmount\' in table \'SP_HrmGenerateNGetBankAdviceToDisbur" +
                                "seSalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BonusAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalSalaryAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.TotalSalaryAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalSalaryAmount\' in table \'SP_HrmGenerateNGetBankAdviceTo" +
                                "DisburseSalary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.TotalSalaryAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalaryZoneCodeNull() {
                return this.IsNull(this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryZoneCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalaryZoneCodeNull() {
                this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryZoneCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalaryZoneNameNull() {
                return this.IsNull(this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryZoneNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalaryZoneNameNull() {
                this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryZoneNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalaryRegionCodeNull() {
                return this.IsNull(this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryRegionCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalaryRegionCodeNull() {
                this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryRegionCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalaryRegionNameNull() {
                return this.IsNull(this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryRegionNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalaryRegionNameNull() {
                this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryRegionNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalaryLocationNameNull() {
                return this.IsNull(this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryLocationNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalaryLocationNameNull() {
                this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryLocationNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankBranchNameNull() {
                return this.IsNull(this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BankBranchNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankBranchNameNull() {
                this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BankBranchNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankBranchNameInBanglaNull() {
                return this.IsNull(this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BankBranchNameInBanglaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankBranchNameInBanglaNull() {
                this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BankBranchNameInBanglaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLetterAddressToInBanglaNull() {
                return this.IsNull(this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.LetterAddressToInBanglaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLetterAddressToInBanglaNull() {
                this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.LetterAddressToInBanglaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankAddress1InBanglaNull() {
                return this.IsNull(this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BankAddress1InBanglaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankAddress1InBanglaNull() {
                this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BankAddress1InBanglaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBATypeDescriptionInBanglaNull() {
                return this.IsNull(this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BATypeDescriptionInBanglaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBATypeDescriptionInBanglaNull() {
                this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BATypeDescriptionInBanglaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSignatory1NameNull() {
                return this.IsNull(this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.Signatory1NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSignatory1NameNull() {
                this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.Signatory1NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSignatory2NameNull() {
                return this.IsNull(this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.Signatory2NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSignatory2NameNull() {
                this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.Signatory2NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreatedOnNull() {
                return this.IsNull(this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.CreatedOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreatedOnNull() {
                this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.CreatedOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmployeeLocationCodeNull() {
                return this.IsNull(this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.EmployeeLocationCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmployeeLocationCodeNull() {
                this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.EmployeeLocationCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSerialNoNull() {
                return this.IsNull(this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SerialNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSerialNoNull() {
                this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SerialNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalaryDisbursementBranchNameNull() {
                return this.IsNull(this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryDisbursementBranchNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalaryDisbursementBranchNameNull() {
                this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryDisbursementBranchNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSalaryOtherThanTADAAmountNull() {
                return this.IsNull(this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryOtherThanTADAAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSalaryOtherThanTADAAmountNull() {
                this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.SalaryOtherThanTADAAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTADAAmountNull() {
                return this.IsNull(this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.TADAAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTADAAmountNull() {
                this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.TADAAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBonusAmountNull() {
                return this.IsNull(this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BonusAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBonusAmountNull() {
                this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.BonusAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalSalaryAmountNull() {
                return this.IsNull(this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.TotalSalaryAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalSalaryAmountNull() {
                this[this.tableSP_HrmGenerateNGetBankAdviceToDisburseSalary.TotalSalaryAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SP_HrmGenerateNGetBankAdviceToDisburseSalaryRowChangeEvent : global::System.EventArgs {
            
            private SP_HrmGenerateNGetBankAdviceToDisburseSalaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SP_HrmGenerateNGetBankAdviceToDisburseSalaryRowChangeEvent(SP_HrmGenerateNGetBankAdviceToDisburseSalaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SP_HrmGenerateNGetBankAdviceToDisburseSalaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace RASolarERP.Web.RASolarERPDataSetForSalaryDisbursementTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SP_HrmGenerateNGetBankAdviceToDisburseSalaryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SP_HrmGenerateNGetBankAdviceToDisburseSalaryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SP_HrmGenerateNGetBankAdviceToDisburseSalary";
            tableMapping.ColumnMappings.Add("SalaryZoneCode", "SalaryZoneCode");
            tableMapping.ColumnMappings.Add("SalaryZoneName", "SalaryZoneName");
            tableMapping.ColumnMappings.Add("SalaryRegionCode", "SalaryRegionCode");
            tableMapping.ColumnMappings.Add("SalaryRegionName", "SalaryRegionName");
            tableMapping.ColumnMappings.Add("SalaryLocationCode1", "SalaryLocationCode1");
            tableMapping.ColumnMappings.Add("SalaryLocationName", "SalaryLocationName");
            tableMapping.ColumnMappings.Add("BankID", "BankID");
            tableMapping.ColumnMappings.Add("BankName", "BankName");
            tableMapping.ColumnMappings.Add("BankBranchID", "BankBranchID");
            tableMapping.ColumnMappings.Add("BankBranchName", "BankBranchName");
            tableMapping.ColumnMappings.Add("BankBranchNameInBangla", "BankBranchNameInBangla");
            tableMapping.ColumnMappings.Add("LetterAddressTo", "LetterAddressTo");
            tableMapping.ColumnMappings.Add("LetterAddressToInBangla", "LetterAddressToInBangla");
            tableMapping.ColumnMappings.Add("BankAddress1", "BankAddress1");
            tableMapping.ColumnMappings.Add("BankAddress1InBangla", "BankAddress1InBangla");
            tableMapping.ColumnMappings.Add("SalaryLocationCode", "SalaryLocationCode");
            tableMapping.ColumnMappings.Add("CompanyBankAccountNumber", "CompanyBankAccountNumber");
            tableMapping.ColumnMappings.Add("BATypeDescription", "BATypeDescription");
            tableMapping.ColumnMappings.Add("BATypeDescriptionInBangla", "BATypeDescriptionInBangla");
            tableMapping.ColumnMappings.Add("AdviceLetterReferenceSeqNo", "AdviceLetterReferenceSeqNo");
            tableMapping.ColumnMappings.Add("AdviceLetterReferenceNo", "AdviceLetterReferenceNo");
            tableMapping.ColumnMappings.Add("Signatory1Designation", "Signatory1Designation");
            tableMapping.ColumnMappings.Add("Signatory1Name", "Signatory1Name");
            tableMapping.ColumnMappings.Add("Signatory2Designation", "Signatory2Designation");
            tableMapping.ColumnMappings.Add("Signatory2Name", "Signatory2Name");
            tableMapping.ColumnMappings.Add("CreatedOn", "CreatedOn");
            tableMapping.ColumnMappings.Add("EmployeeLocationCode", "EmployeeLocationCode");
            tableMapping.ColumnMappings.Add("SerialNo", "SerialNo");
            tableMapping.ColumnMappings.Add("EmployeeID", "EmployeeID");
            tableMapping.ColumnMappings.Add("EmployeeName", "EmployeeName");
            tableMapping.ColumnMappings.Add("EmployeeBankAccountNumber", "EmployeeBankAccountNumber");
            tableMapping.ColumnMappings.Add("SalaryDisbursementBranchName", "SalaryDisbursementBranchName");
            tableMapping.ColumnMappings.Add("SalaryOtherThanTADAAmount", "SalaryOtherThanTADAAmount");
            tableMapping.ColumnMappings.Add("TADAAmount", "TADAAmount");
            tableMapping.ColumnMappings.Add("BonusAmount", "BonusAmount");
            tableMapping.ColumnMappings.Add("TotalSalaryAmount", "TotalSalaryAmount");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=172.25.40.50\\RSFERP_LIVE2;Initial Catalog=RASolarERP;Persist Security" +
                " Info=True;User ID=RSFIT;Password=rsfit1234;MultipleActiveResultSets=True;Applic" +
                "ation Name=EntityFramework";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SP_HrmGenerateNGetBankAdviceToDisburseSalary";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@prmOption", global::System.Data.SqlDbType.VarChar, 25, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@prmGenerateOrView", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@prmSalaryLocationCode", global::System.Data.SqlDbType.NChar, 6, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@prmYearMonth", global::System.Data.SqlDbType.NChar, 6, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@prmSalarySlipNo", global::System.Data.SqlDbType.TinyInt, 1, global::System.Data.ParameterDirection.Input, 3, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@prmStartAdviceLetterReferenceSeqNo", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@prmSalaryDisbursementBankID", global::System.Data.SqlDbType.NChar, 6, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(RASolarERPDataSetForSalaryDisbursement.SP_HrmGenerateNGetBankAdviceToDisburseSalaryDataTable dataTable, string prmOption, string prmGenerateOrView, string prmSalaryLocationCode, string prmYearMonth, global::System.Nullable<byte> prmSalarySlipNo, global::System.Nullable<short> prmStartAdviceLetterReferenceSeqNo, string prmSalaryDisbursementBankID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((prmOption == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(prmOption));
            }
            if ((prmGenerateOrView == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(prmGenerateOrView));
            }
            if ((prmSalaryLocationCode == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(prmSalaryLocationCode));
            }
            if ((prmYearMonth == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(prmYearMonth));
            }
            if ((prmSalarySlipNo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((byte)(prmSalarySlipNo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((prmStartAdviceLetterReferenceSeqNo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((short)(prmStartAdviceLetterReferenceSeqNo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((prmSalaryDisbursementBankID == null)) {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = ((string)(prmSalaryDisbursementBankID));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual RASolarERPDataSetForSalaryDisbursement.SP_HrmGenerateNGetBankAdviceToDisburseSalaryDataTable GetData(string prmOption, string prmGenerateOrView, string prmSalaryLocationCode, string prmYearMonth, global::System.Nullable<byte> prmSalarySlipNo, global::System.Nullable<short> prmStartAdviceLetterReferenceSeqNo, string prmSalaryDisbursementBankID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((prmOption == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(prmOption));
            }
            if ((prmGenerateOrView == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(prmGenerateOrView));
            }
            if ((prmSalaryLocationCode == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(prmSalaryLocationCode));
            }
            if ((prmYearMonth == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(prmYearMonth));
            }
            if ((prmSalarySlipNo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((byte)(prmSalarySlipNo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((prmStartAdviceLetterReferenceSeqNo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((short)(prmStartAdviceLetterReferenceSeqNo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((prmSalaryDisbursementBankID == null)) {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = ((string)(prmSalaryDisbursementBankID));
            }
            RASolarERPDataSetForSalaryDisbursement.SP_HrmGenerateNGetBankAdviceToDisburseSalaryDataTable dataTable = new RASolarERPDataSetForSalaryDisbursement.SP_HrmGenerateNGetBankAdviceToDisburseSalaryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(RASolarERPDataSetForSalaryDisbursement dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(RASolarERPDataSetForSalaryDisbursement dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(RASolarERPDataSetForSalaryDisbursement dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(RASolarERPDataSetForSalaryDisbursement dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591